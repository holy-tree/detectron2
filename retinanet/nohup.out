Command Line Args: Namespace(config_file='', dist_url='tcp://127.0.0.1:50164', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
Loading config ../configs/COCO-Detection/../Base-RetinaNet.yaml with yaml.unsafe_load. Your machine may be at risk if the file contains malicious content.
[32m[11/09 11:29:49 detectron2]: [0mRank of current process: 0. World size: 1
[32m[11/09 11:29:50 detectron2]: [0mEnvironment info:
----------------------  -----------------------------------------------------------------------------------
sys.platform            linux
Python                  3.7.13 (default, Oct 18 2022, 18:57:03) [GCC 11.2.0]
numpy                   1.18.4
detectron2              0.6 @/media/work/data/zbt/detectron2/detectron2
detectron2._C           not built correctly: No module named 'detectron2._C'
Compiler ($CXX)         c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
CUDA compiler           Build cuda_11.2.r11.2/compiler.29373293_0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.12.1+cu113 @/home/work/anaconda3/envs/zbt/lib/python3.7/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0,1                 GeForce RTX 3090 (arch=8.6)
Driver version          460.91.03
CUDA_HOME               /usr/local/cuda-11.2
Pillow                  9.2.0
torchvision             0.13.1+cu113 @/home/work/anaconda3/envs/zbt/lib/python3.7/site-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20220512
iopath                  0.1.9
cv2                     4.6.0
----------------------  -----------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[32m[11/09 11:29:50 detectron2]: [0mCommand line arguments: Namespace(config_file='../configs/COCO-Detection/retinanet_R_101_FPN_3x.yaml', dist_url='tcp://127.0.0.1:50164', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[32m[11/09 11:29:50 detectron2]: [0mContents of args.config_file=../configs/COCO-Detection/retinanet_R_101_FPN_3x.yaml:
[38;5;197m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186m../Base-RetinaNet.yaml[39m[38;5;186m"[39m
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mdetectron2://ImageNetPretrained/MSRA/R-101.pkl[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m[38;5;15m [39m(210000, 250000)
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m270000

[32m[11/09 11:29:50 detectron2]: [0mRunning with full config:
[38;5;197mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;197mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m  [39m[38;5;197mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39mTrainingSampler
[38;5;197mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_my_val
[38;5;15m  [39m[38;5;197mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39mcoco_my_train
[38;5;197mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mHACK[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;197mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m-[38;5;15m [39m0.9
[38;5;15m    [39m[38;5;197mTYPE[39m[38;5;15m:[39m[38;5;15m [39mrelative_range
[38;5;15m  [39m[38;5;197mFORMAT[39m[38;5;15m:[39m[38;5;15m [39mBGR
[38;5;15m  [39m[38;5;197mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39mpolygon
[38;5;15m  [39m[38;5;197mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m640
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m512
[38;5;15m  [39m-[38;5;15m [39m768
[38;5;15m  [39m[38;5;197mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39mrange
[38;5;15m  [39m[38;5;197mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39mhorizontal
[38;5;197mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m-90
[38;5;15m      [39m-[38;5;15m [39m0
[38;5;15m      [39m-[38;5;15m [39m90
[38;5;15m    [39m[38;5;197mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m0.5
[38;5;15m      [39m-[38;5;15m [39m1.0
[38;5;15m      [39m-[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mDefaultAnchorGenerator
[38;5;15m    [39m[38;5;197mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m32
[38;5;15m      [39m-[38;5;15m [39m40.31747359663594
[38;5;15m      [39m-[38;5;15m [39m50.79683366298238
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m64
[38;5;15m      [39m-[38;5;15m [39m80.63494719327188
[38;5;15m      [39m-[38;5;15m [39m101.59366732596476
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m128
[38;5;15m      [39m-[38;5;15m [39m161.26989438654377
[38;5;15m      [39m-[38;5;15m [39m203.18733465192952
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m256
[38;5;15m      [39m-[38;5;15m [39m322.53978877308754
[38;5;15m      [39m-[38;5;15m [39m406.37466930385904
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m512
[38;5;15m      [39m-[38;5;15m [39m645.0795775461751
[38;5;15m      [39m-[38;5;15m [39m812.7493386077181
[38;5;15m  [39m[38;5;197mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mbuild_retinanet_resnet_fpn_backbone
[38;5;15m  [39m[38;5;197mDEVICE[39m[38;5;15m:[39m[38;5;15m [39mcuda
[38;5;15m  [39m[38;5;197mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39msum
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m  [39m[38;5;197mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39mRetinaNet
[38;5;15m  [39m[38;5;197mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m      [39m[38;5;197mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m      [39m[38;5;197mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m4096
[38;5;15m    [39m[38;5;197mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m103.53
[38;5;15m  [39m-[38;5;15m [39m116.28
[38;5;15m  [39m-[38;5;15m [39m123.675
[38;5;15m  [39m[38;5;197mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m1.0
[38;5;15m  [39m-[38;5;15m [39m1.0
[38;5;15m  [39m-[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRPN
[38;5;15m  [39m[38;5;197mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m-[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m101
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mFrozenBN
[38;5;15m    [39m[38;5;197mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres3
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m-[38;5;15m [39mres5
[38;5;15m    [39m[38;5;197mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m    [39m[38;5;197mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m64
[38;5;15m  [39m[38;5;197mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m-[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m-[38;5;15m [39mp6
[38;5;15m    [39m-[38;5;15m [39mp7
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.4
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m80
[38;5;15m    [39m[38;5;197mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m0.01
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m    [39m[38;5;197mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m      [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m20.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m      [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m30.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m      [39m-[38;5;15m [39m15.0
[38;5;15m    [39m[38;5;197mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m-[38;5;15m [39m0.6
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m  [39m[38;5;197mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m10.0
[38;5;15m    [39m-[38;5;15m [39m5.0
[38;5;15m    [39m-[38;5;15m [39m5.0
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m1024
[38;5;15m    [39m[38;5;197mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m50
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m    [39m[38;5;197mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mRes5ROIHeads
[38;5;15m    [39m[38;5;197mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.25
[38;5;15m    [39m[38;5;197mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m0.05
[38;5;15m  [39m[38;5;197mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m-[38;5;15m [39m512
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mKRCNNConvDeconvUpsampleHead
[38;5;15m    [39m[38;5;197mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m17
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mMaskRCNNConvUpsampleHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;197mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m14
[38;5;15m    [39m[38;5;197mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m    [39m[38;5;197mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39mROIAlignV2
[38;5;15m  [39m[38;5;197mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m256
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39msmooth_l1
[38;5;15m    [39m[38;5;197mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;197mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m[38;5;197mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39mStandardRPNHead
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mres4
[38;5;15m    [39m[38;5;197mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0
[38;5;15m    [39m-[38;5;15m [39m-1
[38;5;15m    [39m-[38;5;15m [39m1
[38;5;15m    [39m[38;5;197mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m0.3
[38;5;15m    [39m-[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m0.7
[38;5;15m    [39m[38;5;197mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m0.5
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m    [39m[38;5;197mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m2000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m6000
[38;5;15m    [39m[38;5;197mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m12000
[38;5;15m    [39m[38;5;197mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m    [39m[38;5;197mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m128
[38;5;15m    [39m[38;5;197mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m255
[38;5;15m    [39m[38;5;197mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39mp2
[38;5;15m    [39m-[38;5;15m [39mp3
[38;5;15m    [39m-[38;5;15m [39mp4
[38;5;15m    [39m-[38;5;15m [39mp5
[38;5;15m    [39m[38;5;197mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mNAME[39m[38;5;15m:[39m[38;5;15m [39mSemSegFPNHead
[38;5;15m    [39m[38;5;197mNORM[39m[38;5;15m:[39m[38;5;15m [39mGN
[38;5;15m    [39m[38;5;197mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m54
[38;5;15m  [39m[38;5;197mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39mdetectron2://ImageNetPretrained/MSRA/R-101.pkl
[38;5;197mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m./output
[38;5;197mSEED[39m[38;5;15m:[39m[38;5;15m [39m-1
[38;5;197mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m0.002
[38;5;15m  [39m[38;5;197mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;15m  [39m[38;5;197mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m  [39m[38;5;197mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2499
[38;5;15m  [39m[38;5;197mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39mvalue
[38;5;15m    [39m[38;5;197mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m1.0
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m2.0
[38;5;15m  [39m[38;5;197mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m0.1
[38;5;15m  [39m[38;5;197mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m4
[38;5;15m  [39m[38;5;197mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39mWarmupMultiStepLR
[38;5;15m  [39m[38;5;197mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m17499
[38;5;15m  [39m[38;5;197mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m0.9
[38;5;15m  [39m[38;5;197mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m3
[38;5;15m  [39m[38;5;197mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m0
[38;5;15m  [39m[38;5;197mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m  [39m[38;5;197mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m-[38;5;15m [39m7000
[38;5;15m  [39m[38;5;197mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m0.001
[38;5;15m  [39m[38;5;197mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m1000
[38;5;15m  [39m[38;5;197mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39mlinear
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m0.0001
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39mnull
[38;5;15m  [39m[38;5;197mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m0.0
[38;5;197mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;197mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mFLIP[39m[38;5;15m:[39m[38;5;15m [39mtrue
[38;5;15m    [39m[38;5;197mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m4000
[38;5;15m    [39m[38;5;197mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m-[38;5;15m [39m400
[38;5;15m    [39m-[38;5;15m [39m500
[38;5;15m    [39m-[38;5;15m [39m600
[38;5;15m    [39m-[38;5;15m [39m700
[38;5;15m    [39m-[38;5;15m [39m800
[38;5;15m    [39m-[38;5;15m [39m900
[38;5;15m    [39m-[38;5;15m [39m1000
[38;5;15m    [39m-[38;5;15m [39m1100
[38;5;15m    [39m-[38;5;15m [39m1200
[38;5;15m  [39m[38;5;197mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m100
[38;5;15m  [39m[38;5;197mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m2500
[38;5;15m  [39m[38;5;197mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[]
[38;5;15m  [39m[38;5;197mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;197mENABLED[39m[38;5;15m:[39m[38;5;15m [39mfalse
[38;5;15m    [39m[38;5;197mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m200
[38;5;197mVERSION[39m[38;5;15m:[39m[38;5;15m [39m2
[38;5;197mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m0

[32m[11/09 11:29:50 detectron2]: [0mFull config saved to ./output/config.yaml
[32m[11/09 11:29:50 d2.utils.env]: [0mUsing a generated random seed 50948880
[32m[11/09 11:29:56 d2.engine.defaults]: [0mModel:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[32m[11/09 11:29:56 d2.data.datasets.coco]: [0mLoaded 4812 images in COCO format from /media/work/data/zbt/detectron2/datasets/COCO/annotations/train.json
[32m[11/09 11:29:56 d2.data.build]: [0mRemoved 0 images with no usable annotations. 4812 images left.
[32m[11/09 11:29:56 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|     N      | 5757         |
|            |              |[0m
[32m[11/09 11:29:56 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(512, 768), max_size=640), RandomFlip()]
[32m[11/09 11:29:56 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/09 11:29:56 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[32m[11/09 11:29:56 d2.data.common]: [0mSerializing 4812 elements to byte tensors and concatenating them all ...
[32m[11/09 11:29:56 d2.data.common]: [0mSerialized dataset takes 1.28 MiB
[32m[11/09 11:29:56 fvcore.common.checkpoint]: [0m[Checkpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-101.pkl ...
[32m[11/09 11:29:56 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/09 11:29:56 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint       | Shapes                                          |
|:------------------|:--------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w}  | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w}  | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}   | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w}  | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w}  | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w}  | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w}  | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w}  | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w}  | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}   | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w}  | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w}  | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w}  | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w}  | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w}  | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w}  | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}   | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.10.conv1.*   | res4_10_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.10.conv2.*   | res4_10_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.10.conv3.*   | res4_10_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.11.conv1.*   | res4_11_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.11.conv2.*   | res4_11_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.11.conv3.*   | res4_11_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.12.conv1.*   | res4_12_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.12.conv2.*   | res4_12_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.12.conv3.*   | res4_12_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.13.conv1.*   | res4_13_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.13.conv2.*   | res4_13_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.13.conv3.*   | res4_13_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.14.conv1.*   | res4_14_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.14.conv2.*   | res4_14_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.14.conv3.*   | res4_14_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.15.conv1.*   | res4_15_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.15.conv2.*   | res4_15_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.15.conv3.*   | res4_15_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.16.conv1.*   | res4_16_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.16.conv2.*   | res4_16_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.16.conv3.*   | res4_16_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.17.conv1.*   | res4_17_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.17.conv2.*   | res4_17_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.17.conv3.*   | res4_17_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.18.conv1.*   | res4_18_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.18.conv2.*   | res4_18_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.18.conv3.*   | res4_18_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.19.conv1.*   | res4_19_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.19.conv2.*   | res4_19_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.19.conv3.*   | res4_19_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.20.conv1.*   | res4_20_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.20.conv2.*   | res4_20_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.20.conv3.*   | res4_20_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.21.conv1.*   | res4_21_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.21.conv2.*   | res4_21_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.21.conv3.*   | res4_21_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.22.conv1.*   | res4_22_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.22.conv2.*   | res4_22_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.22.conv3.*   | res4_22_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.6.conv1.*    | res4_6_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.6.conv2.*    | res4_6_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.6.conv3.*    | res4_6_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.7.conv1.*    | res4_7_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.7.conv2.*    | res4_7_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.7.conv3.*    | res4_7_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.8.conv1.*    | res4_8_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.8.conv2.*    | res4_8_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.8.conv3.*    | res4_8_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.9.conv1.*    | res4_9_branch2a_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.9.conv2.*    | res4_9_branch2b_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.9.conv3.*    | res4_9_branch2c_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}   | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*            | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                   | (64, 3, 7, 7)                                   |
[5m[31mWARNING[0m [32m[11/09 11:29:58 fvcore.common.checkpoint]: [0mSome model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[5m[31mWARNING[0m [32m[11/09 11:29:58 fvcore.common.checkpoint]: [0mThe checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
[32m[11/09 11:29:58 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/09 11:30:26 d2.utils.events]: [0m eta: 2:25:21  iter: 39  total_loss: 1.909  loss_cls: 1.248  loss_box_reg: 0.6585  time: 0.5671  data_time: 0.0123  lr: 7.9922e-05  max_mem: 3774M
[32m[11/09 11:30:36 d2.utils.events]: [0m eta: 2:24:35  iter: 59  total_loss: 1.86  loss_cls: 1.222  loss_box_reg: 0.6466  time: 0.5433  data_time: 0.0151  lr: 0.00011988  max_mem: 3774M
[32m[11/09 11:30:46 d2.utils.events]: [0m eta: 2:24:13  iter: 79  total_loss: 1.865  loss_cls: 1.254  loss_box_reg: 0.6112  time: 0.5311  data_time: 0.0139  lr: 0.00015984  max_mem: 3774M
[32m[11/09 11:30:57 d2.utils.events]: [0m eta: 2:25:10  iter: 99  total_loss: 1.649  loss_cls: 1.11  loss_box_reg: 0.5579  time: 0.5281  data_time: 0.0203  lr: 0.0001998  max_mem: 3774M
[32m[11/09 11:31:07 d2.utils.events]: [0m eta: 2:24:21  iter: 119  total_loss: 1.875  loss_cls: 1.258  loss_box_reg: 0.6127  time: 0.5220  data_time: 0.0160  lr: 0.00023976  max_mem: 3774M
[32m[11/09 11:31:17 d2.utils.events]: [0m eta: 2:24:50  iter: 139  total_loss: 1.672  loss_cls: 1.112  loss_box_reg: 0.5524  time: 0.5211  data_time: 0.0204  lr: 0.00027972  max_mem: 3774M
[32m[11/09 11:31:27 d2.utils.events]: [0m eta: 2:25:19  iter: 159  total_loss: 1.683  loss_cls: 1.179  loss_box_reg: 0.5494  time: 0.5207  data_time: 0.0162  lr: 0.00031968  max_mem: 3774M
[32m[11/09 11:31:38 d2.utils.events]: [0m eta: 2:25:24  iter: 179  total_loss: 1.644  loss_cls: 1.035  loss_box_reg: 0.6035  time: 0.5203  data_time: 0.0235  lr: 0.00035964  max_mem: 3774M
[32m[11/09 11:31:48 d2.utils.events]: [0m eta: 2:25:04  iter: 199  total_loss: 1.257  loss_cls: 0.7394  loss_box_reg: 0.5328  time: 0.5180  data_time: 0.0164  lr: 0.0003996  max_mem: 3774M
[32m[11/09 11:31:58 d2.utils.events]: [0m eta: 2:24:56  iter: 219  total_loss: 1.383  loss_cls: 0.7866  loss_box_reg: 0.5889  time: 0.5165  data_time: 0.0196  lr: 0.00043956  max_mem: 3774M
[32m[11/09 11:32:08 d2.utils.events]: [0m eta: 2:24:31  iter: 239  total_loss: 1.145  loss_cls: 0.6291  loss_box_reg: 0.5252  time: 0.5138  data_time: 0.0100  lr: 0.00047952  max_mem: 3774M
[32m[11/09 11:32:18 d2.utils.events]: [0m eta: 2:24:25  iter: 259  total_loss: 1.17  loss_cls: 0.5822  loss_box_reg: 0.568  time: 0.5134  data_time: 0.0163  lr: 0.00051948  max_mem: 3774M
[32m[11/09 11:32:28 d2.utils.events]: [0m eta: 2:24:24  iter: 279  total_loss: 1.032  loss_cls: 0.5628  loss_box_reg: 0.4996  time: 0.5134  data_time: 0.0240  lr: 0.00055944  max_mem: 3774M
[32m[11/09 11:32:38 d2.utils.events]: [0m eta: 2:24:12  iter: 299  total_loss: 1.208  loss_cls: 0.6667  loss_box_reg: 0.5823  time: 0.5120  data_time: 0.0157  lr: 0.0005994  max_mem: 3774M
[32m[11/09 11:32:48 d2.utils.events]: [0m eta: 2:24:04  iter: 319  total_loss: 1.019  loss_cls: 0.5069  loss_box_reg: 0.4992  time: 0.5117  data_time: 0.0167  lr: 0.00063936  max_mem: 3774M
[32m[11/09 11:32:58 d2.utils.events]: [0m eta: 2:23:49  iter: 339  total_loss: 1.128  loss_cls: 0.5998  loss_box_reg: 0.5066  time: 0.5110  data_time: 0.0128  lr: 0.00067932  max_mem: 3774M
[32m[11/09 11:33:09 d2.utils.events]: [0m eta: 2:23:52  iter: 359  total_loss: 1.527  loss_cls: 0.9514  loss_box_reg: 0.5773  time: 0.5113  data_time: 0.0180  lr: 0.00071928  max_mem: 3774M
[32m[11/09 11:33:18 d2.utils.events]: [0m eta: 2:23:27  iter: 379  total_loss: 1.523  loss_cls: 0.9853  loss_box_reg: 0.5197  time: 0.5100  data_time: 0.0117  lr: 0.00075924  max_mem: 3774M
[32m[11/09 11:33:29 d2.utils.events]: [0m eta: 2:23:31  iter: 399  total_loss: 1.317  loss_cls: 0.7626  loss_box_reg: 0.5583  time: 0.5105  data_time: 0.0213  lr: 0.0007992  max_mem: 3774M
[32m[11/09 11:33:39 d2.utils.events]: [0m eta: 2:23:21  iter: 419  total_loss: 1.017  loss_cls: 0.5559  loss_box_reg: 0.4787  time: 0.5105  data_time: 0.0225  lr: 0.00083916  max_mem: 3774M
[32m[11/09 11:33:49 d2.utils.events]: [0m eta: 2:23:18  iter: 439  total_loss: 1.027  loss_cls: 0.5345  loss_box_reg: 0.5128  time: 0.5109  data_time: 0.0216  lr: 0.00087912  max_mem: 3774M
[32m[11/09 11:34:00 d2.utils.events]: [0m eta: 2:23:04  iter: 459  total_loss: 1.069  loss_cls: 0.5584  loss_box_reg: 0.5008  time: 0.5107  data_time: 0.0214  lr: 0.00091908  max_mem: 3774M
[32m[11/09 11:34:10 d2.utils.events]: [0m eta: 2:23:01  iter: 479  total_loss: 1.171  loss_cls: 0.6732  loss_box_reg: 0.5373  time: 0.5111  data_time: 0.0213  lr: 0.00095904  max_mem: 3774M
[32m[11/09 11:34:20 d2.utils.events]: [0m eta: 2:22:51  iter: 499  total_loss: 0.9838  loss_cls: 0.5147  loss_box_reg: 0.4667  time: 0.5108  data_time: 0.0132  lr: 0.000999  max_mem: 3774M
[32m[11/09 11:34:30 d2.utils.events]: [0m eta: 2:22:42  iter: 519  total_loss: 1.103  loss_cls: 0.5448  loss_box_reg: 0.5689  time: 0.5106  data_time: 0.0209  lr: 0.001039  max_mem: 3774M
[32m[11/09 11:34:40 d2.utils.events]: [0m eta: 2:22:32  iter: 539  total_loss: 0.8485  loss_cls: 0.4088  loss_box_reg: 0.4259  time: 0.5101  data_time: 0.0164  lr: 0.0010789  max_mem: 3774M
[32m[11/09 11:34:50 d2.utils.events]: [0m eta: 2:22:21  iter: 559  total_loss: 1.112  loss_cls: 0.5415  loss_box_reg: 0.49  time: 0.5100  data_time: 0.0120  lr: 0.0011189  max_mem: 3774M
[32m[11/09 11:35:01 d2.utils.events]: [0m eta: 2:22:11  iter: 579  total_loss: 0.9861  loss_cls: 0.4886  loss_box_reg: 0.485  time: 0.5098  data_time: 0.0151  lr: 0.0011588  max_mem: 3774M
[32m[11/09 11:35:11 d2.utils.events]: [0m eta: 2:21:54  iter: 599  total_loss: 0.9947  loss_cls: 0.5249  loss_box_reg: 0.4764  time: 0.5093  data_time: 0.0118  lr: 0.0011988  max_mem: 3774M
[32m[11/09 11:35:21 d2.utils.events]: [0m eta: 2:21:42  iter: 619  total_loss: 0.9748  loss_cls: 0.4893  loss_box_reg: 0.4666  time: 0.5089  data_time: 0.0187  lr: 0.0012388  max_mem: 3774M
[32m[11/09 11:35:31 d2.utils.events]: [0m eta: 2:21:34  iter: 639  total_loss: 0.9336  loss_cls: 0.4748  loss_box_reg: 0.4429  time: 0.5088  data_time: 0.0126  lr: 0.0012787  max_mem: 3774M
[32m[11/09 11:35:40 d2.utils.events]: [0m eta: 2:21:20  iter: 659  total_loss: 0.8623  loss_cls: 0.468  loss_box_reg: 0.4316  time: 0.5081  data_time: 0.0161  lr: 0.0013187  max_mem: 3774M
[32m[11/09 11:35:51 d2.utils.events]: [0m eta: 2:21:12  iter: 679  total_loss: 0.7928  loss_cls: 0.3901  loss_box_reg: 0.399  time: 0.5084  data_time: 0.0228  lr: 0.0013586  max_mem: 3774M
[32m[11/09 11:36:01 d2.utils.events]: [0m eta: 2:21:02  iter: 699  total_loss: 1.084  loss_cls: 0.6247  loss_box_reg: 0.4112  time: 0.5084  data_time: 0.0205  lr: 0.0013986  max_mem: 3774M
[32m[11/09 11:36:11 d2.utils.events]: [0m eta: 2:20:59  iter: 719  total_loss: 0.9673  loss_cls: 0.4752  loss_box_reg: 0.4654  time: 0.5086  data_time: 0.0220  lr: 0.0014386  max_mem: 3774M
[32m[11/09 11:36:22 d2.utils.events]: [0m eta: 2:20:50  iter: 739  total_loss: 0.8367  loss_cls: 0.4025  loss_box_reg: 0.4351  time: 0.5086  data_time: 0.0185  lr: 0.0014785  max_mem: 3774M
[32m[11/09 11:36:32 d2.utils.events]: [0m eta: 2:20:42  iter: 759  total_loss: 0.7782  loss_cls: 0.3727  loss_box_reg: 0.4192  time: 0.5084  data_time: 0.0175  lr: 0.0015185  max_mem: 3774M
[32m[11/09 11:36:42 d2.utils.events]: [0m eta: 2:20:30  iter: 779  total_loss: 0.789  loss_cls: 0.405  loss_box_reg: 0.4129  time: 0.5081  data_time: 0.0133  lr: 0.0015584  max_mem: 3774M
[32m[11/09 11:36:52 d2.utils.events]: [0m eta: 2:20:20  iter: 799  total_loss: 0.6983  loss_cls: 0.3253  loss_box_reg: 0.3796  time: 0.5081  data_time: 0.0158  lr: 0.0015984  max_mem: 3774M
[32m[11/09 11:37:02 d2.utils.events]: [0m eta: 2:20:08  iter: 819  total_loss: 0.7923  loss_cls: 0.3839  loss_box_reg: 0.4136  time: 0.5082  data_time: 0.0217  lr: 0.0016384  max_mem: 3774M
[32m[11/09 11:37:12 d2.utils.events]: [0m eta: 2:19:58  iter: 839  total_loss: 0.7553  loss_cls: 0.3638  loss_box_reg: 0.3851  time: 0.5079  data_time: 0.0197  lr: 0.0016783  max_mem: 3774M
[32m[11/09 11:37:22 d2.utils.events]: [0m eta: 2:19:44  iter: 859  total_loss: 0.7494  loss_cls: 0.3241  loss_box_reg: 0.4263  time: 0.5078  data_time: 0.0122  lr: 0.0017183  max_mem: 3774M
[32m[11/09 11:37:32 d2.utils.events]: [0m eta: 2:19:33  iter: 879  total_loss: 0.8476  loss_cls: 0.4135  loss_box_reg: 0.4385  time: 0.5076  data_time: 0.0143  lr: 0.0017582  max_mem: 3774M
[32m[11/09 11:37:43 d2.utils.events]: [0m eta: 2:19:25  iter: 899  total_loss: 0.6896  loss_cls: 0.3464  loss_box_reg: 0.3472  time: 0.5078  data_time: 0.0210  lr: 0.0017982  max_mem: 3774M
[32m[11/09 11:37:52 d2.utils.events]: [0m eta: 2:19:11  iter: 919  total_loss: 0.7565  loss_cls: 0.346  loss_box_reg: 0.4121  time: 0.5075  data_time: 0.0135  lr: 0.0018382  max_mem: 3774M
[32m[11/09 11:38:02 d2.utils.events]: [0m eta: 2:18:59  iter: 939  total_loss: 0.7293  loss_cls: 0.3183  loss_box_reg: 0.3879  time: 0.5072  data_time: 0.0112  lr: 0.0018781  max_mem: 3774M
[32m[11/09 11:38:13 d2.utils.events]: [0m eta: 2:18:50  iter: 959  total_loss: 0.704  loss_cls: 0.3103  loss_box_reg: 0.3979  time: 0.5072  data_time: 0.0197  lr: 0.0019181  max_mem: 3774M
[32m[11/09 11:38:23 d2.utils.events]: [0m eta: 2:18:39  iter: 979  total_loss: 0.7898  loss_cls: 0.3149  loss_box_reg: 0.477  time: 0.5070  data_time: 0.0142  lr: 0.001958  max_mem: 3774M
[32m[11/09 11:38:33 d2.utils.events]: [0m eta: 2:18:30  iter: 999  total_loss: 0.8206  loss_cls: 0.3828  loss_box_reg: 0.4217  time: 0.5072  data_time: 0.0184  lr: 0.001998  max_mem: 3774M
[32m[11/09 11:38:43 d2.utils.events]: [0m eta: 2:18:23  iter: 1019  total_loss: 0.5502  loss_cls: 0.2639  loss_box_reg: 0.3007  time: 0.5073  data_time: 0.0204  lr: 0.002  max_mem: 3774M
[32m[11/09 11:38:53 d2.utils.events]: [0m eta: 2:18:14  iter: 1039  total_loss: 0.7519  loss_cls: 0.3599  loss_box_reg: 0.3994  time: 0.5074  data_time: 0.0231  lr: 0.002  max_mem: 3774M
[32m[11/09 11:39:04 d2.utils.events]: [0m eta: 2:18:07  iter: 1059  total_loss: 0.7637  loss_cls: 0.3826  loss_box_reg: 0.399  time: 0.5073  data_time: 0.0155  lr: 0.002  max_mem: 3774M
[32m[11/09 11:39:14 d2.utils.events]: [0m eta: 2:18:00  iter: 1079  total_loss: 0.8229  loss_cls: 0.3658  loss_box_reg: 0.4228  time: 0.5072  data_time: 0.0179  lr: 0.002  max_mem: 3774M
[32m[11/09 11:39:24 d2.utils.events]: [0m eta: 2:17:44  iter: 1099  total_loss: 0.7455  loss_cls: 0.3178  loss_box_reg: 0.3922  time: 0.5071  data_time: 0.0183  lr: 0.002  max_mem: 3774M
[32m[11/09 11:39:34 d2.utils.events]: [0m eta: 2:17:34  iter: 1119  total_loss: 0.6946  loss_cls: 0.3321  loss_box_reg: 0.3527  time: 0.5068  data_time: 0.0193  lr: 0.002  max_mem: 3774M
[32m[11/09 11:39:44 d2.utils.events]: [0m eta: 2:17:28  iter: 1139  total_loss: 0.7419  loss_cls: 0.3131  loss_box_reg: 0.4076  time: 0.5069  data_time: 0.0189  lr: 0.002  max_mem: 3774M
[32m[11/09 11:39:54 d2.utils.events]: [0m eta: 2:17:19  iter: 1159  total_loss: 0.7714  loss_cls: 0.3945  loss_box_reg: 0.3877  time: 0.5070  data_time: 0.0293  lr: 0.002  max_mem: 3774M
[32m[11/09 11:40:04 d2.utils.events]: [0m eta: 2:17:00  iter: 1179  total_loss: 0.9637  loss_cls: 0.5463  loss_box_reg: 0.4315  time: 0.5068  data_time: 0.0128  lr: 0.002  max_mem: 3774M
[32m[11/09 11:40:14 d2.utils.events]: [0m eta: 2:16:54  iter: 1199  total_loss: 1.025  loss_cls: 0.5388  loss_box_reg: 0.4  time: 0.5067  data_time: 0.0248  lr: 0.002  max_mem: 3774M
[32m[11/09 11:40:24 d2.utils.events]: [0m eta: 2:16:45  iter: 1219  total_loss: 0.884  loss_cls: 0.4999  loss_box_reg: 0.3959  time: 0.5067  data_time: 0.0220  lr: 0.002  max_mem: 3774M
[32m[11/09 11:40:34 d2.utils.events]: [0m eta: 2:16:39  iter: 1239  total_loss: 0.6196  loss_cls: 0.3267  loss_box_reg: 0.2998  time: 0.5064  data_time: 0.0155  lr: 0.002  max_mem: 3774M
[32m[11/09 11:40:44 d2.utils.events]: [0m eta: 2:16:23  iter: 1259  total_loss: 0.747  loss_cls: 0.3377  loss_box_reg: 0.3839  time: 0.5061  data_time: 0.0138  lr: 0.002  max_mem: 3774M
[32m[11/09 11:40:54 d2.utils.events]: [0m eta: 2:16:15  iter: 1279  total_loss: 0.5603  loss_cls: 0.2484  loss_box_reg: 0.3074  time: 0.5063  data_time: 0.0201  lr: 0.002  max_mem: 3774M
[32m[11/09 11:41:05 d2.utils.events]: [0m eta: 2:16:12  iter: 1299  total_loss: 0.8362  loss_cls: 0.4112  loss_box_reg: 0.4062  time: 0.5065  data_time: 0.0150  lr: 0.002  max_mem: 3774M
[32m[11/09 11:41:15 d2.utils.events]: [0m eta: 2:16:05  iter: 1319  total_loss: 0.7295  loss_cls: 0.3189  loss_box_reg: 0.4086  time: 0.5066  data_time: 0.0156  lr: 0.002  max_mem: 3774M
[32m[11/09 11:41:25 d2.utils.events]: [0m eta: 2:15:57  iter: 1339  total_loss: 0.654  loss_cls: 0.2681  loss_box_reg: 0.371  time: 0.5066  data_time: 0.0179  lr: 0.002  max_mem: 3774M
[32m[11/09 11:41:35 d2.utils.events]: [0m eta: 2:15:45  iter: 1359  total_loss: 0.7298  loss_cls: 0.3517  loss_box_reg: 0.3923  time: 0.5066  data_time: 0.0171  lr: 0.002  max_mem: 3774M
[32m[11/09 11:41:46 d2.utils.events]: [0m eta: 2:15:39  iter: 1379  total_loss: 0.6732  loss_cls: 0.2984  loss_box_reg: 0.3537  time: 0.5066  data_time: 0.0142  lr: 0.002  max_mem: 3774M
[32m[11/09 11:41:56 d2.utils.events]: [0m eta: 2:15:28  iter: 1399  total_loss: 0.6076  loss_cls: 0.274  loss_box_reg: 0.3425  time: 0.5067  data_time: 0.0132  lr: 0.002  max_mem: 3774M
[32m[11/09 11:42:06 d2.utils.events]: [0m eta: 2:15:18  iter: 1419  total_loss: 0.6089  loss_cls: 0.2661  loss_box_reg: 0.3483  time: 0.5069  data_time: 0.0219  lr: 0.002  max_mem: 3774M
[32m[11/09 11:42:17 d2.utils.events]: [0m eta: 2:15:09  iter: 1439  total_loss: 0.5216  loss_cls: 0.2012  loss_box_reg: 0.3184  time: 0.5070  data_time: 0.0205  lr: 0.002  max_mem: 3774M
[32m[11/09 11:42:27 d2.utils.events]: [0m eta: 2:15:00  iter: 1459  total_loss: 0.5784  loss_cls: 0.2176  loss_box_reg: 0.364  time: 0.5069  data_time: 0.0145  lr: 0.002  max_mem: 3774M
[32m[11/09 11:42:37 d2.utils.events]: [0m eta: 2:14:49  iter: 1479  total_loss: 0.5618  loss_cls: 0.1947  loss_box_reg: 0.3483  time: 0.5069  data_time: 0.0239  lr: 0.002  max_mem: 3774M
[32m[11/09 11:42:47 d2.utils.events]: [0m eta: 2:14:39  iter: 1499  total_loss: 0.5504  loss_cls: 0.2269  loss_box_reg: 0.3457  time: 0.5069  data_time: 0.0188  lr: 0.002  max_mem: 3774M
[32m[11/09 11:42:57 d2.utils.events]: [0m eta: 2:14:29  iter: 1519  total_loss: 0.5554  loss_cls: 0.2337  loss_box_reg: 0.3458  time: 0.5068  data_time: 0.0174  lr: 0.002  max_mem: 3774M
[32m[11/09 11:43:07 d2.utils.events]: [0m eta: 2:14:23  iter: 1539  total_loss: 0.6918  loss_cls: 0.3221  loss_box_reg: 0.3845  time: 0.5068  data_time: 0.0134  lr: 0.002  max_mem: 3774M
[32m[11/09 11:43:18 d2.utils.events]: [0m eta: 2:14:14  iter: 1559  total_loss: 0.6667  loss_cls: 0.3537  loss_box_reg: 0.3246  time: 0.5068  data_time: 0.0204  lr: 0.002  max_mem: 3774M
[32m[11/09 11:43:28 d2.utils.events]: [0m eta: 2:14:04  iter: 1579  total_loss: 0.6302  loss_cls: 0.2579  loss_box_reg: 0.3536  time: 0.5067  data_time: 0.0172  lr: 0.002  max_mem: 3774M
[32m[11/09 11:43:38 d2.utils.events]: [0m eta: 2:13:55  iter: 1599  total_loss: 0.7009  loss_cls: 0.3269  loss_box_reg: 0.3601  time: 0.5067  data_time: 0.0222  lr: 0.002  max_mem: 3774M
[32m[11/09 11:43:48 d2.utils.events]: [0m eta: 2:13:48  iter: 1619  total_loss: 0.6827  loss_cls: 0.313  loss_box_reg: 0.3741  time: 0.5068  data_time: 0.0219  lr: 0.002  max_mem: 3774M
[32m[11/09 11:43:58 d2.utils.events]: [0m eta: 2:13:37  iter: 1639  total_loss: 0.6769  loss_cls: 0.3229  loss_box_reg: 0.3396  time: 0.5067  data_time: 0.0165  lr: 0.002  max_mem: 3774M
[32m[11/09 11:44:08 d2.utils.events]: [0m eta: 2:13:28  iter: 1659  total_loss: 0.6435  loss_cls: 0.2971  loss_box_reg: 0.3282  time: 0.5067  data_time: 0.0158  lr: 0.002  max_mem: 3774M
[32m[11/09 11:44:18 d2.utils.events]: [0m eta: 2:13:19  iter: 1679  total_loss: 0.6598  loss_cls: 0.2821  loss_box_reg: 0.382  time: 0.5067  data_time: 0.0180  lr: 0.002  max_mem: 3774M
[32m[11/09 11:44:28 d2.utils.events]: [0m eta: 2:13:05  iter: 1699  total_loss: 0.5847  loss_cls: 0.2539  loss_box_reg: 0.3327  time: 0.5066  data_time: 0.0121  lr: 0.002  max_mem: 3774M
[32m[11/09 11:44:38 d2.utils.events]: [0m eta: 2:12:52  iter: 1719  total_loss: 0.6261  loss_cls: 0.2506  loss_box_reg: 0.3703  time: 0.5065  data_time: 0.0191  lr: 0.002  max_mem: 3774M
[32m[11/09 11:44:49 d2.utils.events]: [0m eta: 2:12:44  iter: 1739  total_loss: 0.6719  loss_cls: 0.2736  loss_box_reg: 0.3536  time: 0.5066  data_time: 0.0194  lr: 0.002  max_mem: 3774M
[32m[11/09 11:44:59 d2.utils.events]: [0m eta: 2:12:31  iter: 1759  total_loss: 0.7164  loss_cls: 0.3278  loss_box_reg: 0.4211  time: 0.5065  data_time: 0.0166  lr: 0.002  max_mem: 3774M
[32m[11/09 11:45:09 d2.utils.events]: [0m eta: 2:12:26  iter: 1779  total_loss: 0.6126  loss_cls: 0.291  loss_box_reg: 0.3321  time: 0.5066  data_time: 0.0239  lr: 0.002  max_mem: 3774M
[32m[11/09 11:45:19 d2.utils.events]: [0m eta: 2:12:18  iter: 1799  total_loss: 0.6035  loss_cls: 0.2569  loss_box_reg: 0.3499  time: 0.5065  data_time: 0.0150  lr: 0.002  max_mem: 3774M
[32m[11/09 11:45:29 d2.utils.events]: [0m eta: 2:12:13  iter: 1819  total_loss: 0.6453  loss_cls: 0.2603  loss_box_reg: 0.3858  time: 0.5066  data_time: 0.0188  lr: 0.002  max_mem: 3774M
[32m[11/09 11:45:39 d2.utils.events]: [0m eta: 2:11:58  iter: 1839  total_loss: 0.5488  loss_cls: 0.2356  loss_box_reg: 0.3478  time: 0.5064  data_time: 0.0168  lr: 0.002  max_mem: 3774M
[32m[11/09 11:45:49 d2.utils.events]: [0m eta: 2:11:51  iter: 1859  total_loss: 0.557  loss_cls: 0.2502  loss_box_reg: 0.3117  time: 0.5063  data_time: 0.0167  lr: 0.002  max_mem: 3774M
[32m[11/09 11:45:59 d2.utils.events]: [0m eta: 2:11:44  iter: 1879  total_loss: 0.6279  loss_cls: 0.2568  loss_box_reg: 0.3689  time: 0.5063  data_time: 0.0181  lr: 0.002  max_mem: 3774M
[32m[11/09 11:46:09 d2.utils.events]: [0m eta: 2:11:26  iter: 1899  total_loss: 0.5692  loss_cls: 0.2396  loss_box_reg: 0.3316  time: 0.5062  data_time: 0.0167  lr: 0.002  max_mem: 3774M
[32m[11/09 11:46:19 d2.utils.events]: [0m eta: 2:11:22  iter: 1919  total_loss: 0.7468  loss_cls: 0.3393  loss_box_reg: 0.4277  time: 0.5062  data_time: 0.0189  lr: 0.002  max_mem: 3774M
[32m[11/09 11:46:30 d2.utils.events]: [0m eta: 2:11:19  iter: 1939  total_loss: 0.5969  loss_cls: 0.2519  loss_box_reg: 0.3408  time: 0.5063  data_time: 0.0172  lr: 0.002  max_mem: 3774M
[32m[11/09 11:46:40 d2.utils.events]: [0m eta: 2:11:09  iter: 1959  total_loss: 0.5302  loss_cls: 0.2211  loss_box_reg: 0.3103  time: 0.5064  data_time: 0.0253  lr: 0.002  max_mem: 3774M
[32m[11/09 11:46:50 d2.utils.events]: [0m eta: 2:10:59  iter: 1979  total_loss: 0.5395  loss_cls: 0.2589  loss_box_reg: 0.2725  time: 0.5062  data_time: 0.0133  lr: 0.002  max_mem: 3774M
[32m[11/09 11:47:00 d2.utils.events]: [0m eta: 2:10:45  iter: 1999  total_loss: 0.6898  loss_cls: 0.3015  loss_box_reg: 0.3787  time: 0.5062  data_time: 0.0190  lr: 0.002  max_mem: 3774M
[32m[11/09 11:47:11 d2.utils.events]: [0m eta: 2:10:37  iter: 2019  total_loss: 0.6629  loss_cls: 0.2804  loss_box_reg: 0.3807  time: 0.5063  data_time: 0.0253  lr: 0.002  max_mem: 3774M
[32m[11/09 11:47:21 d2.utils.events]: [0m eta: 2:10:27  iter: 2039  total_loss: 0.5028  loss_cls: 0.2036  loss_box_reg: 0.2996  time: 0.5063  data_time: 0.0219  lr: 0.002  max_mem: 3774M
[32m[11/09 11:47:31 d2.utils.events]: [0m eta: 2:10:20  iter: 2059  total_loss: 0.6707  loss_cls: 0.2874  loss_box_reg: 0.3832  time: 0.5064  data_time: 0.0239  lr: 0.002  max_mem: 3774M
[32m[11/09 11:47:42 d2.utils.events]: [0m eta: 2:10:12  iter: 2079  total_loss: 0.6061  loss_cls: 0.2233  loss_box_reg: 0.344  time: 0.5065  data_time: 0.0143  lr: 0.002  max_mem: 3774M
[32m[11/09 11:47:52 d2.utils.events]: [0m eta: 2:10:08  iter: 2099  total_loss: 0.5518  loss_cls: 0.2292  loss_box_reg: 0.3182  time: 0.5067  data_time: 0.0277  lr: 0.002  max_mem: 3774M
[32m[11/09 11:48:02 d2.utils.events]: [0m eta: 2:09:59  iter: 2119  total_loss: 0.5175  loss_cls: 0.218  loss_box_reg: 0.2691  time: 0.5066  data_time: 0.0197  lr: 0.002  max_mem: 3774M
[32m[11/09 11:48:12 d2.utils.events]: [0m eta: 2:09:50  iter: 2139  total_loss: 0.5857  loss_cls: 0.274  loss_box_reg: 0.3457  time: 0.5067  data_time: 0.0181  lr: 0.002  max_mem: 3774M
[32m[11/09 11:48:23 d2.utils.events]: [0m eta: 2:09:38  iter: 2159  total_loss: 0.5434  loss_cls: 0.2191  loss_box_reg: 0.309  time: 0.5067  data_time: 0.0246  lr: 0.002  max_mem: 3774M
[32m[11/09 11:48:33 d2.utils.events]: [0m eta: 2:09:29  iter: 2179  total_loss: 0.5654  loss_cls: 0.2092  loss_box_reg: 0.3375  time: 0.5067  data_time: 0.0174  lr: 0.002  max_mem: 3774M
[32m[11/09 11:48:43 d2.utils.events]: [0m eta: 2:09:18  iter: 2199  total_loss: 0.586  loss_cls: 0.218  loss_box_reg: 0.3587  time: 0.5066  data_time: 0.0174  lr: 0.002  max_mem: 3774M
[32m[11/09 11:48:53 d2.utils.events]: [0m eta: 2:09:07  iter: 2219  total_loss: 0.5659  loss_cls: 0.2248  loss_box_reg: 0.3338  time: 0.5066  data_time: 0.0157  lr: 0.002  max_mem: 3774M
[32m[11/09 11:49:03 d2.utils.events]: [0m eta: 2:08:54  iter: 2239  total_loss: 0.6478  loss_cls: 0.2901  loss_box_reg: 0.3375  time: 0.5065  data_time: 0.0136  lr: 0.002  max_mem: 3774M
[32m[11/09 11:49:13 d2.utils.events]: [0m eta: 2:08:46  iter: 2259  total_loss: 0.6063  loss_cls: 0.2676  loss_box_reg: 0.3313  time: 0.5064  data_time: 0.0174  lr: 0.002  max_mem: 3774M
[32m[11/09 11:49:23 d2.utils.events]: [0m eta: 2:08:35  iter: 2279  total_loss: 0.5679  loss_cls: 0.2485  loss_box_reg: 0.3213  time: 0.5064  data_time: 0.0206  lr: 0.002  max_mem: 3774M
[32m[11/09 11:49:33 d2.utils.events]: [0m eta: 2:08:17  iter: 2299  total_loss: 0.5208  loss_cls: 0.2215  loss_box_reg: 0.2848  time: 0.5064  data_time: 0.0110  lr: 0.002  max_mem: 3774M
[32m[11/09 11:49:43 d2.utils.events]: [0m eta: 2:08:03  iter: 2319  total_loss: 0.5421  loss_cls: 0.2156  loss_box_reg: 0.3119  time: 0.5063  data_time: 0.0115  lr: 0.002  max_mem: 3774M
[32m[11/09 11:49:53 d2.utils.events]: [0m eta: 2:07:49  iter: 2339  total_loss: 0.5801  loss_cls: 0.2655  loss_box_reg: 0.3175  time: 0.5062  data_time: 0.0160  lr: 0.002  max_mem: 3774M
[32m[11/09 11:50:03 d2.utils.events]: [0m eta: 2:07:38  iter: 2359  total_loss: 0.6006  loss_cls: 0.2637  loss_box_reg: 0.3213  time: 0.5061  data_time: 0.0197  lr: 0.002  max_mem: 3774M
[32m[11/09 11:50:13 d2.utils.events]: [0m eta: 2:07:19  iter: 2379  total_loss: 0.5769  loss_cls: 0.2311  loss_box_reg: 0.3137  time: 0.5060  data_time: 0.0147  lr: 0.002  max_mem: 3774M
[32m[11/09 11:50:23 d2.utils.events]: [0m eta: 2:07:01  iter: 2399  total_loss: 0.5046  loss_cls: 0.2218  loss_box_reg: 0.288  time: 0.5058  data_time: 0.0128  lr: 0.002  max_mem: 3774M
[32m[11/09 11:50:33 d2.utils.events]: [0m eta: 2:06:50  iter: 2419  total_loss: 0.5984  loss_cls: 0.2214  loss_box_reg: 0.3579  time: 0.5057  data_time: 0.0155  lr: 0.002  max_mem: 3774M
[32m[11/09 11:50:43 d2.utils.events]: [0m eta: 2:06:26  iter: 2439  total_loss: 0.5695  loss_cls: 0.2254  loss_box_reg: 0.3354  time: 0.5057  data_time: 0.0176  lr: 0.002  max_mem: 3774M
[32m[11/09 11:50:53 d2.utils.events]: [0m eta: 2:06:16  iter: 2459  total_loss: 0.6258  loss_cls: 0.3151  loss_box_reg: 0.331  time: 0.5057  data_time: 0.0170  lr: 0.002  max_mem: 3774M
[32m[11/09 11:51:03 d2.utils.events]: [0m eta: 2:06:03  iter: 2479  total_loss: 0.626  loss_cls: 0.2807  loss_box_reg: 0.3676  time: 0.5057  data_time: 0.0164  lr: 0.002  max_mem: 3774M
[32m[11/09 11:51:13 fvcore.common.checkpoint]: [0mSaving checkpoint to ./output/model_0002498.pth
[32m[11/09 11:51:15 d2.data.datasets.coco]: [0mLoaded 601 images in COCO format from /media/work/data/zbt/detectron2/datasets/COCO/annotations/val.json
[32m[11/09 11:51:15 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
|     N      | 705          |
|            |              |[0m
[32m[11/09 11:51:15 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[32m[11/09 11:51:15 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[32m[11/09 11:51:15 d2.data.common]: [0mSerializing 601 elements to byte tensors and concatenating them all ...
[32m[11/09 11:51:15 d2.data.common]: [0mSerialized dataset takes 0.16 MiB
[32m[11/09 11:51:15 d2.evaluation.coco_evaluation]: [0mFast COCO eval is not built. Falling back to official COCO eval.
[32m[11/09 11:51:15 d2.evaluation.evaluator]: [0mStart inference on 601 batches
[32m[11/09 11:51:17 d2.evaluation.evaluator]: [0mInference done 11/601. Dataloading: 0.0013 s/iter. Inference: 0.1558 s/iter. Eval: 0.0005 s/iter. Total: 0.1576 s/iter. ETA=0:01:32
[32m[11/09 11:51:22 d2.evaluation.evaluator]: [0mInference done 48/601. Dataloading: 0.0019 s/iter. Inference: 0.1387 s/iter. Eval: 0.0005 s/iter. Total: 0.1412 s/iter. ETA=0:01:18
[32m[11/09 11:51:27 d2.evaluation.evaluator]: [0mInference done 83/601. Dataloading: 0.0027 s/iter. Inference: 0.1407 s/iter. Eval: 0.0005 s/iter. Total: 0.1440 s/iter. ETA=0:01:14
[32m[11/09 11:51:32 d2.evaluation.evaluator]: [0mInference done 117/601. Dataloading: 0.0038 s/iter. Inference: 0.1407 s/iter. Eval: 0.0005 s/iter. Total: 0.1451 s/iter. ETA=0:01:10
[32m[11/09 11:51:37 d2.evaluation.evaluator]: [0mInference done 154/601. Dataloading: 0.0035 s/iter. Inference: 0.1391 s/iter. Eval: 0.0005 s/iter. Total: 0.1433 s/iter. ETA=0:01:04
[32m[11/09 11:51:42 d2.evaluation.evaluator]: [0mInference done 191/601. Dataloading: 0.0033 s/iter. Inference: 0.1382 s/iter. Eval: 0.0005 s/iter. Total: 0.1422 s/iter. ETA=0:00:58
[32m[11/09 11:51:48 d2.evaluation.evaluator]: [0mInference done 224/601. Dataloading: 0.0035 s/iter. Inference: 0.1399 s/iter. Eval: 0.0005 s/iter. Total: 0.1440 s/iter. ETA=0:00:54
[32m[11/09 11:51:53 d2.evaluation.evaluator]: [0mInference done 258/601. Dataloading: 0.0035 s/iter. Inference: 0.1406 s/iter. Eval: 0.0005 s/iter. Total: 0.1447 s/iter. ETA=0:00:49
[32m[11/09 11:51:58 d2.evaluation.evaluator]: [0mInference done 295/601. Dataloading: 0.0033 s/iter. Inference: 0.1397 s/iter. Eval: 0.0005 s/iter. Total: 0.1436 s/iter. ETA=0:00:43
[32m[11/09 11:52:03 d2.evaluation.evaluator]: [0mInference done 331/601. Dataloading: 0.0034 s/iter. Inference: 0.1393 s/iter. Eval: 0.0005 s/iter. Total: 0.1433 s/iter. ETA=0:00:38
[32m[11/09 11:52:08 d2.evaluation.evaluator]: [0mInference done 366/601. Dataloading: 0.0037 s/iter. Inference: 0.1391 s/iter. Eval: 0.0005 s/iter. Total: 0.1434 s/iter. ETA=0:00:33
[32m[11/09 11:52:13 d2.evaluation.evaluator]: [0mInference done 399/601. Dataloading: 0.0036 s/iter. Inference: 0.1399 s/iter. Eval: 0.0005 s/iter. Total: 0.1442 s/iter. ETA=0:00:29
[32m[11/09 11:52:18 d2.evaluation.evaluator]: [0mInference done 433/601. Dataloading: 0.0035 s/iter. Inference: 0.1406 s/iter. Eval: 0.0005 s/iter. Total: 0.1447 s/iter. ETA=0:00:24
[32m[11/09 11:52:23 d2.evaluation.evaluator]: [0mInference done 467/601. Dataloading: 0.0035 s/iter. Inference: 0.1409 s/iter. Eval: 0.0005 s/iter. Total: 0.1450 s/iter. ETA=0:00:19
[32m[11/09 11:52:28 d2.evaluation.evaluator]: [0mInference done 504/601. Dataloading: 0.0034 s/iter. Inference: 0.1404 s/iter. Eval: 0.0005 s/iter. Total: 0.1444 s/iter. ETA=0:00:14
[32m[11/09 11:52:33 d2.evaluation.evaluator]: [0mInference done 539/601. Dataloading: 0.0033 s/iter. Inference: 0.1406 s/iter. Eval: 0.0005 s/iter. Total: 0.1445 s/iter. ETA=0:00:08
[32m[11/09 11:52:38 d2.evaluation.evaluator]: [0mInference done 574/601. Dataloading: 0.0033 s/iter. Inference: 0.1406 s/iter. Eval: 0.0005 s/iter. Total: 0.1445 s/iter. ETA=0:00:03
[32m[11/09 11:52:42 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:26.244732 (0.144706 s / iter per device, on 1 devices)
[32m[11/09 11:52:42 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:23 (0.140536 s / iter per device, on 1 devices)
[32m[11/09 11:52:42 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/09 11:52:42 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/inference/coco_instances_results.json
[32m[11/09 11:52:43 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.23s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=1.24s).
Accumulating evaluation results...
DONE (t=0.25s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.357
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.766
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.291
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.365
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.372
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.344
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.370
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.494
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.510
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.443
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.541
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.498
[32m[11/09 11:52:44 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 35.657 | 76.551 | 29.095 | 36.508 | 37.249 | 34.423 |
[32m[11/09 11:52:44 d2.engine.defaults]: [0mEvaluation results for coco_my_val in csv format:
[32m[11/09 11:52:44 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/09 11:52:44 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/09 11:52:44 d2.evaluation.testing]: [0mcopypaste: 35.6573,76.5514,29.0953,36.5077,37.2491,34.4230
[32m[11/09 11:52:44 d2.utils.events]: [0m eta: 2:06:03  iter: 2499  total_loss: 0.5871  loss_cls: 0.2876  loss_box_reg: 0.2941  time: 0.5059  data_time: 0.0323  lr: 0.002  max_mem: 3774M
[32m[11/09 11:52:54 d2.utils.events]: [0m eta: 2:05:48  iter: 2519  total_loss: 0.4847  loss_cls: 0.1965  loss_box_reg: 0.2966  time: 0.5059  data_time: 0.0167  lr: 0.002  max_mem: 3774M
[32m[11/09 11:53:04 d2.utils.events]: [0m eta: 2:05:32  iter: 2539  total_loss: 0.5821  loss_cls: 0.2584  loss_box_reg: 0.3198  time: 0.5058  data_time: 0.0114  lr: 0.002  max_mem: 3774M
[32m[11/09 11:53:15 d2.utils.events]: [0m eta: 2:05:22  iter: 2559  total_loss: 0.4362  loss_cls: 0.1634  loss_box_reg: 0.2908  time: 0.5059  data_time: 0.0213  lr: 0.002  max_mem: 3774M
[32m[11/09 11:53:25 d2.utils.events]: [0m eta: 2:05:15  iter: 2579  total_loss: 0.5908  loss_cls: 0.2487  loss_box_reg: 0.338  time: 0.5059  data_time: 0.0193  lr: 0.002  max_mem: 3774M
[32m[11/09 11:53:35 d2.utils.events]: [0m eta: 2:05:03  iter: 2599  total_loss: 0.6025  loss_cls: 0.2442  loss_box_reg: 0.3328  time: 0.5059  data_time: 0.0159  lr: 0.002  max_mem: 3774M
[32m[11/09 11:53:46 d2.utils.events]: [0m eta: 2:04:59  iter: 2619  total_loss: 0.495  loss_cls: 0.218  loss_box_reg: 0.277  time: 0.5060  data_time: 0.0174  lr: 0.002  max_mem: 3774M
[32m[11/09 11:53:56 d2.utils.events]: [0m eta: 2:04:58  iter: 2639  total_loss: 0.5013  loss_cls: 0.1984  loss_box_reg: 0.3219  time: 0.5060  data_time: 0.0173  lr: 0.002  max_mem: 3774M
[32m[11/09 11:54:06 d2.utils.events]: [0m eta: 2:04:40  iter: 2659  total_loss: 0.4765  loss_cls: 0.2053  loss_box_reg: 0.2754  time: 0.5060  data_time: 0.0166  lr: 0.002  max_mem: 3774M
[32m[11/09 11:54:16 d2.utils.events]: [0m eta: 2:04:29  iter: 2679  total_loss: 0.5093  loss_cls: 0.2046  loss_box_reg: 0.3007  time: 0.5061  data_time: 0.0158  lr: 0.002  max_mem: 3774M
[32m[11/09 11:54:26 d2.utils.events]: [0m eta: 2:04:20  iter: 2699  total_loss: 0.6297  loss_cls: 0.2699  loss_box_reg: 0.3318  time: 0.5060  data_time: 0.0160  lr: 0.002  max_mem: 3774M
[32m[11/09 11:54:36 d2.utils.events]: [0m eta: 2:04:09  iter: 2719  total_loss: 0.5215  loss_cls: 0.242  loss_box_reg: 0.3099  time: 0.5059  data_time: 0.0175  lr: 0.002  max_mem: 3774M
[32m[11/09 11:54:46 d2.utils.events]: [0m eta: 2:04:00  iter: 2739  total_loss: 0.4693  loss_cls: 0.2282  loss_box_reg: 0.2764  time: 0.5060  data_time: 0.0236  lr: 0.002  max_mem: 3774M
[32m[11/09 11:54:57 d2.utils.events]: [0m eta: 2:04:00  iter: 2759  total_loss: 0.6166  loss_cls: 0.3074  loss_box_reg: 0.3228  time: 0.5060  data_time: 0.0182  lr: 0.002  max_mem: 3774M
[32m[11/09 11:55:07 d2.utils.events]: [0m eta: 2:03:43  iter: 2779  total_loss: 0.5265  loss_cls: 0.2012  loss_box_reg: 0.3441  time: 0.5059  data_time: 0.0164  lr: 0.002  max_mem: 3774M
[32m[11/09 11:55:17 d2.utils.events]: [0m eta: 2:03:28  iter: 2799  total_loss: 0.5059  loss_cls: 0.1616  loss_box_reg: 0.299  time: 0.5059  data_time: 0.0161  lr: 0.002  max_mem: 3774M
[32m[11/09 11:55:27 d2.utils.events]: [0m eta: 2:03:12  iter: 2819  total_loss: 0.5946  loss_cls: 0.2329  loss_box_reg: 0.3518  time: 0.5059  data_time: 0.0147  lr: 0.002  max_mem: 3774M
[32m[11/09 11:55:37 d2.utils.events]: [0m eta: 2:03:03  iter: 2839  total_loss: 0.5679  loss_cls: 0.2503  loss_box_reg: 0.3218  time: 0.5057  data_time: 0.0147  lr: 0.002  max_mem: 3774M
[32m[11/09 11:55:47 d2.utils.events]: [0m eta: 2:02:59  iter: 2859  total_loss: 0.462  loss_cls: 0.1926  loss_box_reg: 0.2705  time: 0.5058  data_time: 0.0215  lr: 0.002  max_mem: 3774M
[32m[11/09 11:55:57 d2.utils.events]: [0m eta: 2:02:42  iter: 2879  total_loss: 0.5349  loss_cls: 0.2426  loss_box_reg: 0.2826  time: 0.5057  data_time: 0.0154  lr: 0.002  max_mem: 3774M
[32m[11/09 11:56:07 d2.utils.events]: [0m eta: 2:02:35  iter: 2899  total_loss: 0.5357  loss_cls: 0.1907  loss_box_reg: 0.3303  time: 0.5057  data_time: 0.0168  lr: 0.002  max_mem: 3774M
[32m[11/09 11:56:17 d2.utils.events]: [0m eta: 2:02:26  iter: 2919  total_loss: 0.479  loss_cls: 0.2018  loss_box_reg: 0.2941  time: 0.5056  data_time: 0.0158  lr: 0.002  max_mem: 3774M
[32m[11/09 11:56:27 d2.utils.events]: [0m eta: 2:02:18  iter: 2939  total_loss: 0.5425  loss_cls: 0.2331  loss_box_reg: 0.3045  time: 0.5057  data_time: 0.0276  lr: 0.002  max_mem: 3774M
[32m[11/09 11:56:37 d2.utils.events]: [0m eta: 2:02:04  iter: 2959  total_loss: 0.6088  loss_cls: 0.212  loss_box_reg: 0.3504  time: 0.5057  data_time: 0.0215  lr: 0.002  max_mem: 3774M
[32m[11/09 11:56:47 d2.utils.events]: [0m eta: 2:01:59  iter: 2979  total_loss: 0.507  loss_cls: 0.1861  loss_box_reg: 0.3117  time: 0.5057  data_time: 0.0176  lr: 0.002  max_mem: 3774M
[32m[11/09 11:56:57 d2.utils.events]: [0m eta: 2:01:42  iter: 2999  total_loss: 0.5101  loss_cls: 0.2172  loss_box_reg: 0.2955  time: 0.5055  data_time: 0.0127  lr: 0.002  max_mem: 3774M
[32m[11/09 11:57:07 d2.utils.events]: [0m eta: 2:01:30  iter: 3019  total_loss: 0.4255  loss_cls: 0.1804  loss_box_reg: 0.2582  time: 0.5055  data_time: 0.0150  lr: 0.002  max_mem: 3774M
[32m[11/09 11:57:17 d2.utils.events]: [0m eta: 2:01:16  iter: 3039  total_loss: 0.5992  loss_cls: 0.2356  loss_box_reg: 0.3292  time: 0.5055  data_time: 0.0124  lr: 0.002  max_mem: 3774M
[32m[11/09 11:57:27 d2.utils.events]: [0m eta: 2:01:05  iter: 3059  total_loss: 0.4638  loss_cls: 0.1937  loss_box_reg: 0.2818  time: 0.5054  data_time: 0.0193  lr: 0.002  max_mem: 3774M
[32m[11/09 11:57:37 d2.utils.events]: [0m eta: 2:00:51  iter: 3079  total_loss: 0.4313  loss_cls: 0.1622  loss_box_reg: 0.2787  time: 0.5054  data_time: 0.0143  lr: 0.002  max_mem: 3774M
[32m[11/09 11:57:48 d2.utils.events]: [0m eta: 2:00:39  iter: 3099  total_loss: 0.5121  loss_cls: 0.2251  loss_box_reg: 0.3249  time: 0.5054  data_time: 0.0127  lr: 0.002  max_mem: 3774M
[32m[11/09 11:57:58 d2.utils.events]: [0m eta: 2:00:28  iter: 3119  total_loss: 0.5231  loss_cls: 0.2108  loss_box_reg: 0.3228  time: 0.5054  data_time: 0.0174  lr: 0.002  max_mem: 3774M
[32m[11/09 11:58:08 d2.utils.events]: [0m eta: 2:00:16  iter: 3139  total_loss: 0.5586  loss_cls: 0.2424  loss_box_reg: 0.3241  time: 0.5053  data_time: 0.0128  lr: 0.002  max_mem: 3774M
[32m[11/09 11:58:18 d2.utils.events]: [0m eta: 2:00:07  iter: 3159  total_loss: 0.5164  loss_cls: 0.2226  loss_box_reg: 0.3116  time: 0.5054  data_time: 0.0180  lr: 0.002  max_mem: 3774M
[32m[11/09 11:58:28 d2.utils.events]: [0m eta: 1:59:59  iter: 3179  total_loss: 0.4936  loss_cls: 0.1872  loss_box_reg: 0.3088  time: 0.5054  data_time: 0.0194  lr: 0.002  max_mem: 3774M
[32m[11/09 11:58:38 d2.utils.events]: [0m eta: 1:59:47  iter: 3199  total_loss: 0.5084  loss_cls: 0.2133  loss_box_reg: 0.306  time: 0.5053  data_time: 0.0126  lr: 0.002  max_mem: 3774M
[32m[11/09 11:58:48 d2.utils.events]: [0m eta: 1:59:36  iter: 3219  total_loss: 0.4379  loss_cls: 0.1637  loss_box_reg: 0.2817  time: 0.5053  data_time: 0.0163  lr: 0.002  max_mem: 3774M
[32m[11/09 11:58:58 d2.utils.events]: [0m eta: 1:59:29  iter: 3239  total_loss: 0.6075  loss_cls: 0.2274  loss_box_reg: 0.3467  time: 0.5053  data_time: 0.0216  lr: 0.002  max_mem: 3774M
[32m[11/09 11:59:08 d2.utils.events]: [0m eta: 1:59:21  iter: 3259  total_loss: 0.5454  loss_cls: 0.2225  loss_box_reg: 0.2994  time: 0.5053  data_time: 0.0167  lr: 0.002  max_mem: 3774M
[32m[11/09 11:59:18 d2.utils.events]: [0m eta: 1:59:05  iter: 3279  total_loss: 0.5865  loss_cls: 0.2285  loss_box_reg: 0.3388  time: 0.5052  data_time: 0.0178  lr: 0.002  max_mem: 3774M
[32m[11/09 11:59:28 d2.utils.events]: [0m eta: 1:58:58  iter: 3299  total_loss: 0.4915  loss_cls: 0.2317  loss_box_reg: 0.2775  time: 0.5052  data_time: 0.0242  lr: 0.002  max_mem: 3774M
[32m[11/09 11:59:39 d2.utils.events]: [0m eta: 1:58:54  iter: 3319  total_loss: 0.663  loss_cls: 0.2648  loss_box_reg: 0.3568  time: 0.5053  data_time: 0.0186  lr: 0.002  max_mem: 3774M
[32m[11/09 11:59:49 d2.utils.events]: [0m eta: 1:58:48  iter: 3339  total_loss: 0.577  loss_cls: 0.2463  loss_box_reg: 0.2916  time: 0.5053  data_time: 0.0140  lr: 0.002  max_mem: 3774M
[32m[11/09 11:59:59 d2.utils.events]: [0m eta: 1:58:39  iter: 3359  total_loss: 0.4525  loss_cls: 0.1875  loss_box_reg: 0.265  time: 0.5054  data_time: 0.0186  lr: 0.002  max_mem: 3774M
[32m[11/09 12:00:10 d2.utils.events]: [0m eta: 1:58:38  iter: 3379  total_loss: 0.5014  loss_cls: 0.2371  loss_box_reg: 0.3015  time: 0.5054  data_time: 0.0197  lr: 0.002  max_mem: 3774M
[32m[11/09 12:00:20 d2.utils.events]: [0m eta: 1:58:34  iter: 3399  total_loss: 0.555  loss_cls: 0.2058  loss_box_reg: 0.3299  time: 0.5054  data_time: 0.0140  lr: 0.002  max_mem: 3774M
[32m[11/09 12:00:30 d2.utils.events]: [0m eta: 1:58:29  iter: 3419  total_loss: 0.5118  loss_cls: 0.2489  loss_box_reg: 0.268  time: 0.5055  data_time: 0.0171  lr: 0.002  max_mem: 3774M
[32m[11/09 12:00:41 d2.utils.events]: [0m eta: 1:58:21  iter: 3439  total_loss: 0.566  loss_cls: 0.2382  loss_box_reg: 0.3224  time: 0.5056  data_time: 0.0185  lr: 0.002  max_mem: 3774M
[32m[11/09 12:00:51 d2.utils.events]: [0m eta: 1:58:11  iter: 3459  total_loss: 0.5301  loss_cls: 0.2139  loss_box_reg: 0.3113  time: 0.5056  data_time: 0.0124  lr: 0.002  max_mem: 3774M
[32m[11/09 12:01:01 d2.utils.events]: [0m eta: 1:58:00  iter: 3479  total_loss: 0.573  loss_cls: 0.2666  loss_box_reg: 0.3106  time: 0.5055  data_time: 0.0177  lr: 0.002  max_mem: 3774M
[32m[11/09 12:01:11 d2.utils.events]: [0m eta: 1:57:46  iter: 3499  total_loss: 0.4814  loss_cls: 0.1979  loss_box_reg: 0.2818  time: 0.5055  data_time: 0.0181  lr: 0.002  max_mem: 3774M
[32m[11/09 12:01:21 d2.utils.events]: [0m eta: 1:57:38  iter: 3519  total_loss: 0.4384  loss_cls: 0.1564  loss_box_reg: 0.2772  time: 0.5056  data_time: 0.0260  lr: 0.002  max_mem: 3774M
[32m[11/09 12:01:31 d2.utils.events]: [0m eta: 1:57:30  iter: 3539  total_loss: 0.4322  loss_cls: 0.1651  loss_box_reg: 0.2763  time: 0.5056  data_time: 0.0172  lr: 0.002  max_mem: 3774M
[32m[11/09 12:01:42 d2.utils.events]: [0m eta: 1:57:19  iter: 3559  total_loss: 0.6183  loss_cls: 0.2691  loss_box_reg: 0.3289  time: 0.5056  data_time: 0.0144  lr: 0.002  max_mem: 3774M
[32m[11/09 12:01:52 d2.utils.events]: [0m eta: 1:57:05  iter: 3579  total_loss: 0.5762  loss_cls: 0.1953  loss_box_reg: 0.3212  time: 0.5055  data_time: 0.0180  lr: 0.002  max_mem: 3774M
[32m[11/09 12:02:02 d2.utils.events]: [0m eta: 1:56:53  iter: 3599  total_loss: 0.4828  loss_cls: 0.2006  loss_box_reg: 0.2895  time: 0.5055  data_time: 0.0145  lr: 0.002  max_mem: 3774M
[32m[11/09 12:02:12 d2.utils.events]: [0m eta: 1:56:40  iter: 3619  total_loss: 0.5475  loss_cls: 0.2093  loss_box_reg: 0.3026  time: 0.5055  data_time: 0.0148  lr: 0.002  max_mem: 3774M
[32m[11/09 12:02:22 d2.utils.events]: [0m eta: 1:56:31  iter: 3639  total_loss: 0.419  loss_cls: 0.1642  loss_box_reg: 0.2548  time: 0.5055  data_time: 0.0186  lr: 0.002  max_mem: 3774M
[32m[11/09 12:02:32 d2.utils.events]: [0m eta: 1:56:20  iter: 3659  total_loss: 0.4467  loss_cls: 0.1557  loss_box_reg: 0.2559  time: 0.5055  data_time: 0.0109  lr: 0.002  max_mem: 3774M
[32m[11/09 12:02:42 d2.utils.events]: [0m eta: 1:56:08  iter: 3679  total_loss: 0.4849  loss_cls: 0.1965  loss_box_reg: 0.2924  time: 0.5055  data_time: 0.0197  lr: 0.002  max_mem: 3774M
[32m[11/09 12:02:52 d2.utils.events]: [0m eta: 1:56:02  iter: 3699  total_loss: 0.5087  loss_cls: 0.1855  loss_box_reg: 0.2998  time: 0.5055  data_time: 0.0208  lr: 0.002  max_mem: 3774M
[32m[11/09 12:03:02 d2.utils.events]: [0m eta: 1:55:51  iter: 3719  total_loss: 0.5035  loss_cls: 0.2081  loss_box_reg: 0.3091  time: 0.5055  data_time: 0.0123  lr: 0.002  max_mem: 3774M
[32m[11/09 12:03:13 d2.utils.events]: [0m eta: 1:55:38  iter: 3739  total_loss: 0.6087  loss_cls: 0.2551  loss_box_reg: 0.3378  time: 0.5055  data_time: 0.0141  lr: 0.002  max_mem: 3774M
[32m[11/09 12:03:23 d2.utils.events]: [0m eta: 1:55:18  iter: 3759  total_loss: 0.3792  loss_cls: 0.1294  loss_box_reg: 0.2453  time: 0.5054  data_time: 0.0143  lr: 0.002  max_mem: 3774M
[32m[11/09 12:03:33 d2.utils.events]: [0m eta: 1:55:10  iter: 3779  total_loss: 0.4262  loss_cls: 0.1696  loss_box_reg: 0.2644  time: 0.5054  data_time: 0.0146  lr: 0.002  max_mem: 3774M
[32m[11/09 12:03:43 d2.utils.events]: [0m eta: 1:54:59  iter: 3799  total_loss: 0.4152  loss_cls: 0.1508  loss_box_reg: 0.2616  time: 0.5054  data_time: 0.0156  lr: 0.002  max_mem: 3774M
[32m[11/09 12:03:53 d2.utils.events]: [0m eta: 1:54:52  iter: 3819  total_loss: 0.4974  loss_cls: 0.1976  loss_box_reg: 0.2985  time: 0.5054  data_time: 0.0159  lr: 0.002  max_mem: 3774M
[32m[11/09 12:04:03 d2.utils.events]: [0m eta: 1:54:46  iter: 3839  total_loss: 0.4949  loss_cls: 0.1902  loss_box_reg: 0.2874  time: 0.5054  data_time: 0.0221  lr: 0.002  max_mem: 3774M
[32m[11/09 12:04:14 d2.utils.events]: [0m eta: 1:54:36  iter: 3859  total_loss: 0.4577  loss_cls: 0.2395  loss_box_reg: 0.2506  time: 0.5055  data_time: 0.0248  lr: 0.002  max_mem: 3774M
[32m[11/09 12:04:24 d2.utils.events]: [0m eta: 1:54:29  iter: 3879  total_loss: 0.5284  loss_cls: 0.2444  loss_box_reg: 0.2988  time: 0.5054  data_time: 0.0118  lr: 0.002  max_mem: 3774M
[32m[11/09 12:04:34 d2.utils.events]: [0m eta: 1:54:19  iter: 3899  total_loss: 0.5058  loss_cls: 0.2039  loss_box_reg: 0.2985  time: 0.5055  data_time: 0.0144  lr: 0.002  max_mem: 3774M
[32m[11/09 12:04:44 d2.utils.events]: [0m eta: 1:54:11  iter: 3919  total_loss: 0.4288  loss_cls: 0.1601  loss_box_reg: 0.2711  time: 0.5055  data_time: 0.0202  lr: 0.002  max_mem: 3774M
[32m[11/09 12:04:54 d2.utils.events]: [0m eta: 1:53:56  iter: 3939  total_loss: 0.4577  loss_cls: 0.1964  loss_box_reg: 0.2958  time: 0.5055  data_time: 0.0152  lr: 0.002  max_mem: 3774M
[32m[11/09 12:05:04 d2.utils.events]: [0m eta: 1:53:46  iter: 3959  total_loss: 0.5571  loss_cls: 0.1933  loss_box_reg: 0.3367  time: 0.5055  data_time: 0.0156  lr: 0.002  max_mem: 3774M
[32m[11/09 12:05:15 d2.utils.events]: [0m eta: 1:53:39  iter: 3979  total_loss: 0.4161  loss_cls: 0.1679  loss_box_reg: 0.2661  time: 0.5055  data_time: 0.0129  lr: 0.002  max_mem: 3774M
[32m[11/09 12:05:25 d2.utils.events]: [0m eta: 1:53:33  iter: 3999  total_loss: 0.4665  loss_cls: 0.178  loss_box_reg: 0.2781  time: 0.5056  data_time: 0.0188  lr: 0.002  max_mem: 3774M
[32m[11/09 12:05:35 d2.utils.events]: [0m eta: 1:53:23  iter: 4019  total_loss: 0.4689  loss_cls: 0.1791  loss_box_reg: 0.2967  time: 0.5055  data_time: 0.0121  lr: 0.002  max_mem: 3774M
[32m[11/09 12:05:45 d2.utils.events]: [0m eta: 1:53:14  iter: 4039  total_loss: 0.4663  loss_cls: 0.1584  loss_box_reg: 0.2689  time: 0.5055  data_time: 0.0180  lr: 0.002  max_mem: 3774M
[32m[11/09 12:05:56 d2.utils.events]: [0m eta: 1:53:05  iter: 4059  total_loss: 0.5318  loss_cls: 0.24  loss_box_reg: 0.3042  time: 0.5056  data_time: 0.0190  lr: 0.002  max_mem: 3774M
[32m[11/09 12:06:06 d2.utils.events]: [0m eta: 1:53:01  iter: 4079  total_loss: 0.4347  loss_cls: 0.14  loss_box_reg: 0.2954  time: 0.5056  data_time: 0.0155  lr: 0.002  max_mem: 3774M
[32m[11/09 12:06:16 d2.utils.events]: [0m eta: 1:52:55  iter: 4099  total_loss: 0.4934  loss_cls: 0.2018  loss_box_reg: 0.2786  time: 0.5057  data_time: 0.0192  lr: 0.002  max_mem: 3774M
[32m[11/09 12:06:26 d2.utils.events]: [0m eta: 1:52:50  iter: 4119  total_loss: 0.5254  loss_cls: 0.2307  loss_box_reg: 0.3026  time: 0.5057  data_time: 0.0248  lr: 0.002  max_mem: 3774M
[32m[11/09 12:06:37 d2.utils.events]: [0m eta: 1:52:41  iter: 4139  total_loss: 0.5205  loss_cls: 0.209  loss_box_reg: 0.304  time: 0.5057  data_time: 0.0136  lr: 0.002  max_mem: 3774M
[32m[11/09 12:06:47 d2.utils.events]: [0m eta: 1:52:31  iter: 4159  total_loss: 0.497  loss_cls: 0.1799  loss_box_reg: 0.3015  time: 0.5058  data_time: 0.0279  lr: 0.002  max_mem: 3774M
[32m[11/09 12:06:57 d2.utils.events]: [0m eta: 1:52:21  iter: 4179  total_loss: 0.5289  loss_cls: 0.2125  loss_box_reg: 0.3061  time: 0.5058  data_time: 0.0161  lr: 0.002  max_mem: 3774M
[32m[11/09 12:07:07 d2.utils.events]: [0m eta: 1:52:11  iter: 4199  total_loss: 0.4301  loss_cls: 0.1759  loss_box_reg: 0.2638  time: 0.5057  data_time: 0.0117  lr: 0.002  max_mem: 3774M
[32m[11/09 12:07:18 d2.utils.events]: [0m eta: 1:52:05  iter: 4219  total_loss: 0.4738  loss_cls: 0.1885  loss_box_reg: 0.2765  time: 0.5058  data_time: 0.0170  lr: 0.002  max_mem: 3774M
[32m[11/09 12:07:28 d2.utils.events]: [0m eta: 1:51:59  iter: 4239  total_loss: 0.4767  loss_cls: 0.1792  loss_box_reg: 0.3012  time: 0.5059  data_time: 0.0215  lr: 0.002  max_mem: 3774M
[32m[11/09 12:07:38 d2.utils.events]: [0m eta: 1:51:48  iter: 4259  total_loss: 0.4397  loss_cls: 0.1521  loss_box_reg: 0.2859  time: 0.5059  data_time: 0.0119  lr: 0.002  max_mem: 3774M
[32m[11/09 12:07:49 d2.utils.events]: [0m eta: 1:51:46  iter: 4279  total_loss: 0.4912  loss_cls: 0.2074  loss_box_reg: 0.2789  time: 0.5059  data_time: 0.0211  lr: 0.002  max_mem: 3774M
[32m[11/09 12:07:59 d2.utils.events]: [0m eta: 1:51:33  iter: 4299  total_loss: 0.439  loss_cls: 0.1747  loss_box_reg: 0.2652  time: 0.5059  data_time: 0.0160  lr: 0.002  max_mem: 3774M
[32m[11/09 12:08:09 d2.utils.events]: [0m eta: 1:51:16  iter: 4319  total_loss: 0.5364  loss_cls: 0.2158  loss_box_reg: 0.3079  time: 0.5059  data_time: 0.0151  lr: 0.002  max_mem: 3774M
[32m[11/09 12:08:19 d2.utils.events]: [0m eta: 1:51:07  iter: 4339  total_loss: 0.5025  loss_cls: 0.2469  loss_box_reg: 0.2878  time: 0.5059  data_time: 0.0160  lr: 0.002  max_mem: 3774M
[32m[11/09 12:08:29 d2.utils.events]: [0m eta: 1:50:51  iter: 4359  total_loss: 0.5116  loss_cls: 0.2099  loss_box_reg: 0.3212  time: 0.5059  data_time: 0.0153  lr: 0.002  max_mem: 3774M
[32m[11/09 12:08:39 d2.utils.events]: [0m eta: 1:50:33  iter: 4379  total_loss: 0.399  loss_cls: 0.1423  loss_box_reg: 0.2373  time: 0.5058  data_time: 0.0154  lr: 0.002  max_mem: 3774M
[32m[11/09 12:08:49 d2.utils.events]: [0m eta: 1:50:24  iter: 4399  total_loss: 0.4868  loss_cls: 0.1991  loss_box_reg: 0.2631  time: 0.5058  data_time: 0.0155  lr: 0.002  max_mem: 3774M
[32m[11/09 12:08:59 d2.utils.events]: [0m eta: 1:50:12  iter: 4419  total_loss: 0.4784  loss_cls: 0.2142  loss_box_reg: 0.2757  time: 0.5058  data_time: 0.0207  lr: 0.002  max_mem: 3774M
[32m[11/09 12:09:10 d2.utils.events]: [0m eta: 1:49:57  iter: 4439  total_loss: 0.4486  loss_cls: 0.1555  loss_box_reg: 0.2931  time: 0.5058  data_time: 0.0174  lr: 0.002  max_mem: 3774M
[32m[11/09 12:09:20 d2.utils.events]: [0m eta: 1:49:47  iter: 4459  total_loss: 0.4826  loss_cls: 0.1951  loss_box_reg: 0.303  time: 0.5059  data_time: 0.0167  lr: 0.002  max_mem: 3774M
[32m[11/09 12:09:30 d2.utils.events]: [0m eta: 1:49:45  iter: 4479  total_loss: 0.461  loss_cls: 0.1705  loss_box_reg: 0.288  time: 0.5059  data_time: 0.0205  lr: 0.002  max_mem: 3774M
[32m[11/09 12:09:40 d2.utils.events]: [0m eta: 1:49:32  iter: 4499  total_loss: 0.5182  loss_cls: 0.1998  loss_box_reg: 0.3195  time: 0.5059  data_time: 0.0169  lr: 0.002  max_mem: 3774M
[32m[11/09 12:09:50 d2.utils.events]: [0m eta: 1:49:20  iter: 4519  total_loss: 0.4718  loss_cls: 0.1847  loss_box_reg: 0.2873  time: 0.5059  data_time: 0.0194  lr: 0.002  max_mem: 3774M
[32m[11/09 12:10:00 d2.utils.events]: [0m eta: 1:49:10  iter: 4539  total_loss: 0.5221  loss_cls: 0.2158  loss_box_reg: 0.2995  time: 0.5059  data_time: 0.0214  lr: 0.002  max_mem: 3774M
[32m[11/09 12:10:10 d2.utils.events]: [0m eta: 1:48:56  iter: 4559  total_loss: 0.4749  loss_cls: 0.2017  loss_box_reg: 0.2761  time: 0.5058  data_time: 0.0171  lr: 0.002  max_mem: 3774M
[32m[11/09 12:10:20 d2.utils.events]: [0m eta: 1:48:43  iter: 4579  total_loss: 0.5002  loss_cls: 0.1907  loss_box_reg: 0.2997  time: 0.5057  data_time: 0.0164  lr: 0.002  max_mem: 3774M
[32m[11/09 12:10:30 d2.utils.events]: [0m eta: 1:48:33  iter: 4599  total_loss: 0.5398  loss_cls: 0.1834  loss_box_reg: 0.3182  time: 0.5057  data_time: 0.0177  lr: 0.002  max_mem: 3774M
[32m[11/09 12:10:40 d2.utils.events]: [0m eta: 1:48:26  iter: 4619  total_loss: 0.5142  loss_cls: 0.2066  loss_box_reg: 0.292  time: 0.5057  data_time: 0.0260  lr: 0.002  max_mem: 3774M
[32m[11/09 12:10:51 d2.utils.events]: [0m eta: 1:48:14  iter: 4639  total_loss: 0.5112  loss_cls: 0.2055  loss_box_reg: 0.3273  time: 0.5057  data_time: 0.0226  lr: 0.002  max_mem: 3774M
[32m[11/09 12:11:01 d2.utils.events]: [0m eta: 1:48:10  iter: 4659  total_loss: 0.4837  loss_cls: 0.1972  loss_box_reg: 0.28  time: 0.5058  data_time: 0.0232  lr: 0.002  max_mem: 3774M
[32m[11/09 12:11:11 d2.utils.events]: [0m eta: 1:48:03  iter: 4679  total_loss: 0.4794  loss_cls: 0.2091  loss_box_reg: 0.2778  time: 0.5058  data_time: 0.0176  lr: 0.002  max_mem: 3774M
[32m[11/09 12:11:21 d2.utils.events]: [0m eta: 1:47:52  iter: 4699  total_loss: 0.5216  loss_cls: 0.2097  loss_box_reg: 0.3039  time: 0.5058  data_time: 0.0130  lr: 0.002  max_mem: 3774M
[32m[11/09 12:11:32 d2.utils.events]: [0m eta: 1:47:43  iter: 4719  total_loss: 0.4475  loss_cls: 0.1681  loss_box_reg: 0.2732  time: 0.5058  data_time: 0.0139  lr: 0.002  max_mem: 3774M
[32m[11/09 12:11:42 d2.utils.events]: [0m eta: 1:47:34  iter: 4739  total_loss: 0.5181  loss_cls: 0.2054  loss_box_reg: 0.3212  time: 0.5058  data_time: 0.0131  lr: 0.002  max_mem: 3774M
[32m[11/09 12:11:51 d2.utils.events]: [0m eta: 1:47:22  iter: 4759  total_loss: 0.4698  loss_cls: 0.1824  loss_box_reg: 0.2906  time: 0.5057  data_time: 0.0119  lr: 0.002  max_mem: 3774M
[32m[11/09 12:12:01 d2.utils.events]: [0m eta: 1:47:12  iter: 4779  total_loss: 0.5134  loss_cls: 0.2081  loss_box_reg: 0.2782  time: 0.5057  data_time: 0.0163  lr: 0.002  max_mem: 3774M
[32m[11/09 12:12:12 d2.utils.events]: [0m eta: 1:47:02  iter: 4799  total_loss: 0.4801  loss_cls: 0.1686  loss_box_reg: 0.29  time: 0.5057  data_time: 0.0164  lr: 0.002  max_mem: 3774M
[32m[11/09 12:12:22 d2.utils.events]: [0m eta: 1:46:51  iter: 4819  total_loss: 0.4803  loss_cls: 0.1816  loss_box_reg: 0.2891  time: 0.5056  data_time: 0.0150  lr: 0.002  max_mem: 3774M
[32m[11/09 12:12:32 d2.utils.events]: [0m eta: 1:46:38  iter: 4839  total_loss: 0.3493  loss_cls: 0.126  loss_box_reg: 0.2158  time: 0.5056  data_time: 0.0164  lr: 0.002  max_mem: 3774M
[32m[11/09 12:12:42 d2.utils.events]: [0m eta: 1:46:24  iter: 4859  total_loss: 0.4708  loss_cls: 0.1928  loss_box_reg: 0.2651  time: 0.5056  data_time: 0.0169  lr: 0.002  max_mem: 3774M
[32m[11/09 12:12:52 d2.utils.events]: [0m eta: 1:46:16  iter: 4879  total_loss: 0.4519  loss_cls: 0.1846  loss_box_reg: 0.2774  time: 0.5056  data_time: 0.0227  lr: 0.002  max_mem: 3774M
[32m[11/09 12:13:02 d2.utils.events]: [0m eta: 1:46:06  iter: 4899  total_loss: 0.3608  loss_cls: 0.1259  loss_box_reg: 0.2294  time: 0.5056  data_time: 0.0209  lr: 0.002  max_mem: 3774M
[32m[11/09 12:13:12 d2.utils.events]: [0m eta: 1:45:53  iter: 4919  total_loss: 0.5747  loss_cls: 0.198  loss_box_reg: 0.323  time: 0.5055  data_time: 0.0124  lr: 0.002  max_mem: 3774M
[32m[11/09 12:13:22 d2.utils.events]: [0m eta: 1:45:48  iter: 4939  total_loss: 0.4053  loss_cls: 0.1454  loss_box_reg: 0.2337  time: 0.5055  data_time: 0.0189  lr: 0.002  max_mem: 3774M
[32m[11/09 12:13:32 d2.utils.events]: [0m eta: 1:45:37  iter: 4959  total_loss: 0.5299  loss_cls: 0.2308  loss_box_reg: 0.3134  time: 0.5055  data_time: 0.0139  lr: 0.002  max_mem: 3774M
[32m[11/09 12:13:42 d2.utils.events]: [0m eta: 1:45:20  iter: 4979  total_loss: 0.5149  loss_cls: 0.1936  loss_box_reg: 0.2958  time: 0.5055  data_time: 0.0117  lr: 0.002  max_mem: 3774M
[32m[11/09 12:13:51 fvcore.common.checkpoint]: [0mSaving checkpoint to ./output/model_0004997.pth
[32m[11/09 12:13:53 d2.data.datasets.coco]: [0mLoaded 601 images in COCO format from /media/work/data/zbt/detectron2/datasets/COCO/annotations/val.json
[32m[11/09 12:13:53 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[32m[11/09 12:13:53 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[32m[11/09 12:13:53 d2.data.common]: [0mSerializing 601 elements to byte tensors and concatenating them all ...
[32m[11/09 12:13:53 d2.data.common]: [0mSerialized dataset takes 0.16 MiB
[32m[11/09 12:13:53 d2.evaluation.coco_evaluation]: [0mFast COCO eval is not built. Falling back to official COCO eval.
[32m[11/09 12:13:53 d2.evaluation.evaluator]: [0mStart inference on 601 batches
[32m[11/09 12:13:55 d2.evaluation.evaluator]: [0mInference done 11/601. Dataloading: 0.0034 s/iter. Inference: 0.1229 s/iter. Eval: 0.0004 s/iter. Total: 0.1267 s/iter. ETA=0:01:14
[32m[11/09 12:14:01 d2.evaluation.evaluator]: [0mInference done 47/601. Dataloading: 0.0031 s/iter. Inference: 0.1352 s/iter. Eval: 0.0005 s/iter. Total: 0.1389 s/iter. ETA=0:01:16
[32m[11/09 12:14:06 d2.evaluation.evaluator]: [0mInference done 82/601. Dataloading: 0.0033 s/iter. Inference: 0.1384 s/iter. Eval: 0.0005 s/iter. Total: 0.1423 s/iter. ETA=0:01:13
[32m[11/09 12:14:11 d2.evaluation.evaluator]: [0mInference done 116/601. Dataloading: 0.0034 s/iter. Inference: 0.1398 s/iter. Eval: 0.0005 s/iter. Total: 0.1439 s/iter. ETA=0:01:09
[32m[11/09 12:14:16 d2.evaluation.evaluator]: [0mInference done 151/601. Dataloading: 0.0036 s/iter. Inference: 0.1401 s/iter. Eval: 0.0005 s/iter. Total: 0.1443 s/iter. ETA=0:01:04
[32m[11/09 12:14:21 d2.evaluation.evaluator]: [0mInference done 186/601. Dataloading: 0.0035 s/iter. Inference: 0.1402 s/iter. Eval: 0.0005 s/iter. Total: 0.1443 s/iter. ETA=0:00:59
[32m[11/09 12:14:26 d2.evaluation.evaluator]: [0mInference done 222/601. Dataloading: 0.0036 s/iter. Inference: 0.1399 s/iter. Eval: 0.0005 s/iter. Total: 0.1441 s/iter. ETA=0:00:54
[32m[11/09 12:14:31 d2.evaluation.evaluator]: [0mInference done 257/601. Dataloading: 0.0037 s/iter. Inference: 0.1399 s/iter. Eval: 0.0005 s/iter. Total: 0.1442 s/iter. ETA=0:00:49
[32m[11/09 12:14:36 d2.evaluation.evaluator]: [0mInference done 293/601. Dataloading: 0.0039 s/iter. Inference: 0.1394 s/iter. Eval: 0.0005 s/iter. Total: 0.1439 s/iter. ETA=0:00:44
[32m[11/09 12:14:41 d2.evaluation.evaluator]: [0mInference done 324/601. Dataloading: 0.0040 s/iter. Inference: 0.1411 s/iter. Eval: 0.0005 s/iter. Total: 0.1457 s/iter. ETA=0:00:40
[32m[11/09 12:14:46 d2.evaluation.evaluator]: [0mInference done 358/601. Dataloading: 0.0039 s/iter. Inference: 0.1414 s/iter. Eval: 0.0005 s/iter. Total: 0.1459 s/iter. ETA=0:00:35
[32m[11/09 12:14:51 d2.evaluation.evaluator]: [0mInference done 393/601. Dataloading: 0.0039 s/iter. Inference: 0.1412 s/iter. Eval: 0.0005 s/iter. Total: 0.1458 s/iter. ETA=0:00:30
[32m[11/09 12:14:56 d2.evaluation.evaluator]: [0mInference done 428/601. Dataloading: 0.0040 s/iter. Inference: 0.1410 s/iter. Eval: 0.0005 s/iter. Total: 0.1456 s/iter. ETA=0:00:25
[32m[11/09 12:15:01 d2.evaluation.evaluator]: [0mInference done 465/601. Dataloading: 0.0041 s/iter. Inference: 0.1402 s/iter. Eval: 0.0005 s/iter. Total: 0.1449 s/iter. ETA=0:00:19
[32m[11/09 12:15:06 d2.evaluation.evaluator]: [0mInference done 502/601. Dataloading: 0.0041 s/iter. Inference: 0.1396 s/iter. Eval: 0.0005 s/iter. Total: 0.1443 s/iter. ETA=0:00:14
[32m[11/09 12:15:12 d2.evaluation.evaluator]: [0mInference done 539/601. Dataloading: 0.0039 s/iter. Inference: 0.1393 s/iter. Eval: 0.0005 s/iter. Total: 0.1439 s/iter. ETA=0:00:08
[32m[11/09 12:15:17 d2.evaluation.evaluator]: [0mInference done 575/601. Dataloading: 0.0038 s/iter. Inference: 0.1393 s/iter. Eval: 0.0005 s/iter. Total: 0.1437 s/iter. ETA=0:00:03
[32m[11/09 12:15:21 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:25.875133 (0.144086 s / iter per device, on 1 devices)
[32m[11/09 12:15:21 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:23 (0.139324 s / iter per device, on 1 devices)
[32m[11/09 12:15:21 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/09 12:15:21 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/inference/coco_instances_results.json
[32m[11/09 12:15:21 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.04s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=1.65s).
Accumulating evaluation results...
DONE (t=0.31s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.420
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.828
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.367
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.424
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.423
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.418
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.411
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.543
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.561
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.514
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.579
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.592
[32m[11/09 12:15:23 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 41.954 | 82.769 | 36.739 | 42.442 | 42.271 | 41.812 |
[32m[11/09 12:15:23 d2.engine.defaults]: [0mEvaluation results for coco_my_val in csv format:
[32m[11/09 12:15:23 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/09 12:15:23 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/09 12:15:23 d2.evaluation.testing]: [0mcopypaste: 41.9538,82.7693,36.7387,42.4418,42.2713,41.8119
[32m[11/09 12:15:23 d2.utils.events]: [0m eta: 1:45:13  iter: 4999  total_loss: 0.4498  loss_cls: 0.2085  loss_box_reg: 0.2821  time: 0.5055  data_time: 0.0206  lr: 0.002  max_mem: 3774M
[32m[11/09 12:15:33 d2.utils.events]: [0m eta: 1:45:03  iter: 5019  total_loss: 0.3916  loss_cls: 0.1414  loss_box_reg: 0.2454  time: 0.5055  data_time: 0.0148  lr: 0.002  max_mem: 3774M
[32m[11/09 12:15:43 d2.utils.events]: [0m eta: 1:44:51  iter: 5039  total_loss: 0.4959  loss_cls: 0.2029  loss_box_reg: 0.2977  time: 0.5055  data_time: 0.0169  lr: 0.002  max_mem: 3774M
[32m[11/09 12:15:53 d2.utils.events]: [0m eta: 1:44:35  iter: 5059  total_loss: 0.4477  loss_cls: 0.1984  loss_box_reg: 0.2458  time: 0.5055  data_time: 0.0133  lr: 0.002  max_mem: 3774M
[32m[11/09 12:16:04 d2.utils.events]: [0m eta: 1:44:26  iter: 5079  total_loss: 0.4314  loss_cls: 0.1987  loss_box_reg: 0.2731  time: 0.5055  data_time: 0.0202  lr: 0.002  max_mem: 3774M
[32m[11/09 12:16:14 d2.utils.events]: [0m eta: 1:44:09  iter: 5099  total_loss: 0.4703  loss_cls: 0.1639  loss_box_reg: 0.2848  time: 0.5055  data_time: 0.0148  lr: 0.002  max_mem: 3774M
[32m[11/09 12:16:24 d2.utils.events]: [0m eta: 1:43:59  iter: 5119  total_loss: 0.421  loss_cls: 0.1538  loss_box_reg: 0.2532  time: 0.5055  data_time: 0.0166  lr: 0.002  max_mem: 3774M
[32m[11/09 12:16:34 d2.utils.events]: [0m eta: 1:43:48  iter: 5139  total_loss: 0.414  loss_cls: 0.155  loss_box_reg: 0.2596  time: 0.5055  data_time: 0.0177  lr: 0.002  max_mem: 3774M
[32m[11/09 12:16:44 d2.utils.events]: [0m eta: 1:43:36  iter: 5159  total_loss: 0.3929  loss_cls: 0.134  loss_box_reg: 0.2386  time: 0.5055  data_time: 0.0133  lr: 0.002  max_mem: 3774M
[32m[11/09 12:16:54 d2.utils.events]: [0m eta: 1:43:24  iter: 5179  total_loss: 0.4774  loss_cls: 0.1804  loss_box_reg: 0.3197  time: 0.5055  data_time: 0.0128  lr: 0.002  max_mem: 3774M
[32m[11/09 12:17:04 d2.utils.events]: [0m eta: 1:43:15  iter: 5199  total_loss: 0.4078  loss_cls: 0.1828  loss_box_reg: 0.2471  time: 0.5055  data_time: 0.0145  lr: 0.002  max_mem: 3774M
[32m[11/09 12:17:14 d2.utils.events]: [0m eta: 1:43:04  iter: 5219  total_loss: 0.4183  loss_cls: 0.1654  loss_box_reg: 0.2516  time: 0.5055  data_time: 0.0228  lr: 0.002  max_mem: 3774M
[32m[11/09 12:17:25 d2.utils.events]: [0m eta: 1:42:53  iter: 5239  total_loss: 0.4628  loss_cls: 0.1598  loss_box_reg: 0.2911  time: 0.5055  data_time: 0.0161  lr: 0.002  max_mem: 3774M
[32m[11/09 12:17:35 d2.utils.events]: [0m eta: 1:42:48  iter: 5259  total_loss: 0.5132  loss_cls: 0.2091  loss_box_reg: 0.2945  time: 0.5055  data_time: 0.0177  lr: 0.002  max_mem: 3774M
[32m[11/09 12:17:45 d2.utils.events]: [0m eta: 1:42:29  iter: 5279  total_loss: 0.4768  loss_cls: 0.1621  loss_box_reg: 0.3016  time: 0.5055  data_time: 0.0173  lr: 0.002  max_mem: 3774M
[32m[11/09 12:17:55 d2.utils.events]: [0m eta: 1:42:16  iter: 5299  total_loss: 0.3774  loss_cls: 0.1386  loss_box_reg: 0.2572  time: 0.5055  data_time: 0.0132  lr: 0.002  max_mem: 3774M
[32m[11/09 12:18:05 d2.utils.events]: [0m eta: 1:42:08  iter: 5319  total_loss: 0.4467  loss_cls: 0.1727  loss_box_reg: 0.2778  time: 0.5055  data_time: 0.0201  lr: 0.002  max_mem: 3774M
[32m[11/09 12:18:15 d2.utils.events]: [0m eta: 1:42:03  iter: 5339  total_loss: 0.5332  loss_cls: 0.2174  loss_box_reg: 0.3276  time: 0.5055  data_time: 0.0255  lr: 0.002  max_mem: 3774M
[32m[11/09 12:18:25 d2.utils.events]: [0m eta: 1:41:56  iter: 5359  total_loss: 0.4627  loss_cls: 0.1717  loss_box_reg: 0.2828  time: 0.5055  data_time: 0.0198  lr: 0.002  max_mem: 3774M
[32m[11/09 12:18:36 d2.utils.events]: [0m eta: 1:41:53  iter: 5379  total_loss: 0.5099  loss_cls: 0.2228  loss_box_reg: 0.2924  time: 0.5055  data_time: 0.0180  lr: 0.002  max_mem: 3774M
[32m[11/09 12:18:46 d2.utils.events]: [0m eta: 1:41:41  iter: 5399  total_loss: 0.5317  loss_cls: 0.2407  loss_box_reg: 0.2803  time: 0.5055  data_time: 0.0151  lr: 0.002  max_mem: 3774M
[32m[11/09 12:18:56 d2.utils.events]: [0m eta: 1:41:23  iter: 5419  total_loss: 0.4559  loss_cls: 0.1653  loss_box_reg: 0.2709  time: 0.5054  data_time: 0.0115  lr: 0.002  max_mem: 3774M
[32m[11/09 12:19:06 d2.utils.events]: [0m eta: 1:41:14  iter: 5439  total_loss: 0.5676  loss_cls: 0.2494  loss_box_reg: 0.311  time: 0.5054  data_time: 0.0176  lr: 0.002  max_mem: 3774M
[32m[11/09 12:19:16 d2.utils.events]: [0m eta: 1:41:11  iter: 5459  total_loss: 0.4763  loss_cls: 0.186  loss_box_reg: 0.2873  time: 0.5055  data_time: 0.0170  lr: 0.002  max_mem: 3774M
[32m[11/09 12:19:26 d2.utils.events]: [0m eta: 1:40:54  iter: 5479  total_loss: 0.3727  loss_cls: 0.1397  loss_box_reg: 0.2404  time: 0.5055  data_time: 0.0181  lr: 0.002  max_mem: 3774M
[32m[11/09 12:19:36 d2.utils.events]: [0m eta: 1:40:43  iter: 5499  total_loss: 0.4631  loss_cls: 0.1604  loss_box_reg: 0.2824  time: 0.5055  data_time: 0.0144  lr: 0.002  max_mem: 3774M
[32m[11/09 12:19:47 d2.utils.events]: [0m eta: 1:40:33  iter: 5519  total_loss: 0.4842  loss_cls: 0.2077  loss_box_reg: 0.2791  time: 0.5055  data_time: 0.0177  lr: 0.002  max_mem: 3774M
[32m[11/09 12:19:57 d2.utils.events]: [0m eta: 1:40:30  iter: 5539  total_loss: 0.4407  loss_cls: 0.1737  loss_box_reg: 0.2743  time: 0.5055  data_time: 0.0232  lr: 0.002  max_mem: 3774M
[32m[11/09 12:20:07 d2.utils.events]: [0m eta: 1:40:23  iter: 5559  total_loss: 0.4979  loss_cls: 0.1971  loss_box_reg: 0.2959  time: 0.5055  data_time: 0.0168  lr: 0.002  max_mem: 3774M
[32m[11/09 12:20:17 d2.utils.events]: [0m eta: 1:40:20  iter: 5579  total_loss: 0.4043  loss_cls: 0.1603  loss_box_reg: 0.2465  time: 0.5055  data_time: 0.0137  lr: 0.002  max_mem: 3774M
[32m[11/09 12:20:28 d2.utils.events]: [0m eta: 1:40:14  iter: 5599  total_loss: 0.3713  loss_cls: 0.1448  loss_box_reg: 0.2488  time: 0.5056  data_time: 0.0218  lr: 0.002  max_mem: 3774M
[32m[11/09 12:20:38 d2.utils.events]: [0m eta: 1:40:04  iter: 5619  total_loss: 0.4552  loss_cls: 0.1757  loss_box_reg: 0.2706  time: 0.5056  data_time: 0.0192  lr: 0.002  max_mem: 3774M
[32m[11/09 12:20:48 d2.utils.events]: [0m eta: 1:39:53  iter: 5639  total_loss: 0.4832  loss_cls: 0.1787  loss_box_reg: 0.2909  time: 0.5056  data_time: 0.0169  lr: 0.002  max_mem: 3774M
[32m[11/09 12:20:58 d2.utils.events]: [0m eta: 1:39:42  iter: 5659  total_loss: 0.4588  loss_cls: 0.1518  loss_box_reg: 0.3222  time: 0.5056  data_time: 0.0128  lr: 0.002  max_mem: 3774M
[32m[11/09 12:21:08 d2.utils.events]: [0m eta: 1:39:26  iter: 5679  total_loss: 0.4736  loss_cls: 0.1777  loss_box_reg: 0.317  time: 0.5055  data_time: 0.0135  lr: 0.002  max_mem: 3774M
[32m[11/09 12:21:18 d2.utils.events]: [0m eta: 1:39:15  iter: 5699  total_loss: 0.4615  loss_cls: 0.1661  loss_box_reg: 0.2829  time: 0.5055  data_time: 0.0174  lr: 0.002  max_mem: 3774M
[32m[11/09 12:21:28 d2.utils.events]: [0m eta: 1:39:05  iter: 5719  total_loss: 0.4573  loss_cls: 0.1651  loss_box_reg: 0.2918  time: 0.5055  data_time: 0.0164  lr: 0.002  max_mem: 3774M
[32m[11/09 12:21:38 d2.utils.events]: [0m eta: 1:38:54  iter: 5739  total_loss: 0.5123  loss_cls: 0.1927  loss_box_reg: 0.3047  time: 0.5055  data_time: 0.0183  lr: 0.002  max_mem: 3774M
[32m[11/09 12:21:49 d2.utils.events]: [0m eta: 1:38:50  iter: 5759  total_loss: 0.453  loss_cls: 0.1943  loss_box_reg: 0.2422  time: 0.5055  data_time: 0.0222  lr: 0.002  max_mem: 3774M
[32m[11/09 12:21:59 d2.utils.events]: [0m eta: 1:38:39  iter: 5779  total_loss: 0.5531  loss_cls: 0.2177  loss_box_reg: 0.3231  time: 0.5055  data_time: 0.0171  lr: 0.002  max_mem: 3774M
[32m[11/09 12:22:09 d2.utils.events]: [0m eta: 1:38:29  iter: 5799  total_loss: 0.5161  loss_cls: 0.1955  loss_box_reg: 0.3112  time: 0.5056  data_time: 0.0200  lr: 0.002  max_mem: 3774M
[32m[11/09 12:22:19 d2.utils.events]: [0m eta: 1:38:19  iter: 5819  total_loss: 0.5486  loss_cls: 0.2306  loss_box_reg: 0.3151  time: 0.5056  data_time: 0.0142  lr: 0.002  max_mem: 3774M
[32m[11/09 12:22:30 d2.utils.events]: [0m eta: 1:38:12  iter: 5839  total_loss: 0.4944  loss_cls: 0.1959  loss_box_reg: 0.296  time: 0.5056  data_time: 0.0203  lr: 0.002  max_mem: 3774M
[32m[11/09 12:22:40 d2.utils.events]: [0m eta: 1:38:02  iter: 5859  total_loss: 0.3818  loss_cls: 0.1413  loss_box_reg: 0.253  time: 0.5056  data_time: 0.0221  lr: 0.002  max_mem: 3774M
[32m[11/09 12:22:50 d2.utils.events]: [0m eta: 1:37:52  iter: 5879  total_loss: 0.4652  loss_cls: 0.1909  loss_box_reg: 0.2702  time: 0.5056  data_time: 0.0154  lr: 0.002  max_mem: 3774M
[32m[11/09 12:23:00 d2.utils.events]: [0m eta: 1:37:43  iter: 5899  total_loss: 0.435  loss_cls: 0.1591  loss_box_reg: 0.2592  time: 0.5056  data_time: 0.0210  lr: 0.002  max_mem: 3774M
[32m[11/09 12:23:11 d2.utils.events]: [0m eta: 1:37:37  iter: 5919  total_loss: 0.5155  loss_cls: 0.2058  loss_box_reg: 0.3376  time: 0.5057  data_time: 0.0192  lr: 0.002  max_mem: 3774M
[32m[11/09 12:23:21 d2.utils.events]: [0m eta: 1:37:26  iter: 5939  total_loss: 0.457  loss_cls: 0.1733  loss_box_reg: 0.2784  time: 0.5057  data_time: 0.0168  lr: 0.002  max_mem: 3774M
[32m[11/09 12:23:32 d2.utils.events]: [0m eta: 1:37:19  iter: 5959  total_loss: 0.4409  loss_cls: 0.1608  loss_box_reg: 0.2734  time: 0.5058  data_time: 0.0196  lr: 0.002  max_mem: 3774M
[32m[11/09 12:23:42 d2.utils.events]: [0m eta: 1:37:12  iter: 5979  total_loss: 0.5922  loss_cls: 0.2388  loss_box_reg: 0.3067  time: 0.5057  data_time: 0.0144  lr: 0.002  max_mem: 3774M
[32m[11/09 12:23:52 d2.utils.events]: [0m eta: 1:36:57  iter: 5999  total_loss: 0.4138  loss_cls: 0.1471  loss_box_reg: 0.2756  time: 0.5057  data_time: 0.0192  lr: 0.002  max_mem: 3774M
[32m[11/09 12:24:01 d2.utils.events]: [0m eta: 1:36:45  iter: 6019  total_loss: 0.3885  loss_cls: 0.1676  loss_box_reg: 0.2383  time: 0.5057  data_time: 0.0120  lr: 0.002  max_mem: 3774M
[32m[11/09 12:24:11 d2.utils.events]: [0m eta: 1:36:32  iter: 6039  total_loss: 0.4832  loss_cls: 0.1912  loss_box_reg: 0.2868  time: 0.5056  data_time: 0.0122  lr: 0.002  max_mem: 3774M
[32m[11/09 12:24:21 d2.utils.events]: [0m eta: 1:36:22  iter: 6059  total_loss: 0.4254  loss_cls: 0.1905  loss_box_reg: 0.2594  time: 0.5056  data_time: 0.0145  lr: 0.002  max_mem: 3774M
[32m[11/09 12:24:32 d2.utils.events]: [0m eta: 1:36:11  iter: 6079  total_loss: 0.4338  loss_cls: 0.1671  loss_box_reg: 0.2639  time: 0.5056  data_time: 0.0159  lr: 0.002  max_mem: 3774M
[32m[11/09 12:24:42 d2.utils.events]: [0m eta: 1:36:01  iter: 6099  total_loss: 0.4284  loss_cls: 0.1638  loss_box_reg: 0.2671  time: 0.5056  data_time: 0.0113  lr: 0.002  max_mem: 3774M
[32m[11/09 12:24:52 d2.utils.events]: [0m eta: 1:35:52  iter: 6119  total_loss: 0.4602  loss_cls: 0.1861  loss_box_reg: 0.2612  time: 0.5056  data_time: 0.0193  lr: 0.002  max_mem: 3774M
[32m[11/09 12:25:02 d2.utils.events]: [0m eta: 1:35:41  iter: 6139  total_loss: 0.3726  loss_cls: 0.1318  loss_box_reg: 0.2324  time: 0.5056  data_time: 0.0191  lr: 0.002  max_mem: 3774M
[32m[11/09 12:25:12 d2.utils.events]: [0m eta: 1:35:31  iter: 6159  total_loss: 0.4579  loss_cls: 0.18  loss_box_reg: 0.2397  time: 0.5056  data_time: 0.0173  lr: 0.002  max_mem: 3774M
[32m[11/09 12:25:23 d2.utils.events]: [0m eta: 1:35:22  iter: 6179  total_loss: 0.4521  loss_cls: 0.1683  loss_box_reg: 0.2702  time: 0.5057  data_time: 0.0179  lr: 0.002  max_mem: 3774M
[32m[11/09 12:25:32 d2.utils.events]: [0m eta: 1:35:11  iter: 6199  total_loss: 0.403  loss_cls: 0.1408  loss_box_reg: 0.2461  time: 0.5056  data_time: 0.0117  lr: 0.002  max_mem: 3774M
[32m[11/09 12:25:42 d2.utils.events]: [0m eta: 1:34:57  iter: 6219  total_loss: 0.4364  loss_cls: 0.1735  loss_box_reg: 0.2646  time: 0.5056  data_time: 0.0123  lr: 0.002  max_mem: 3774M
[32m[11/09 12:25:52 d2.utils.events]: [0m eta: 1:34:40  iter: 6239  total_loss: 0.4046  loss_cls: 0.1572  loss_box_reg: 0.2533  time: 0.5055  data_time: 0.0139  lr: 0.002  max_mem: 3774M
[32m[11/09 12:26:02 d2.utils.events]: [0m eta: 1:34:27  iter: 6259  total_loss: 0.3943  loss_cls: 0.1305  loss_box_reg: 0.2675  time: 0.5055  data_time: 0.0153  lr: 0.002  max_mem: 3774M
[32m[11/09 12:26:12 d2.utils.events]: [0m eta: 1:34:17  iter: 6279  total_loss: 0.4132  loss_cls: 0.1422  loss_box_reg: 0.2673  time: 0.5055  data_time: 0.0157  lr: 0.002  max_mem: 3774M
[32m[11/09 12:26:23 d2.utils.events]: [0m eta: 1:34:16  iter: 6299  total_loss: 0.4926  loss_cls: 0.225  loss_box_reg: 0.2583  time: 0.5055  data_time: 0.0250  lr: 0.002  max_mem: 3774M
[32m[11/09 12:26:33 d2.utils.events]: [0m eta: 1:34:03  iter: 6319  total_loss: 0.3641  loss_cls: 0.1539  loss_box_reg: 0.2485  time: 0.5055  data_time: 0.0120  lr: 0.002  max_mem: 3774M
[32m[11/09 12:26:43 d2.utils.events]: [0m eta: 1:33:47  iter: 6339  total_loss: 0.4578  loss_cls: 0.1898  loss_box_reg: 0.278  time: 0.5055  data_time: 0.0143  lr: 0.002  max_mem: 3774M
[32m[11/09 12:26:53 d2.utils.events]: [0m eta: 1:33:36  iter: 6359  total_loss: 0.4403  loss_cls: 0.1626  loss_box_reg: 0.2653  time: 0.5054  data_time: 0.0137  lr: 0.002  max_mem: 3774M
[32m[11/09 12:27:03 d2.utils.events]: [0m eta: 1:33:26  iter: 6379  total_loss: 0.5081  loss_cls: 0.1907  loss_box_reg: 0.319  time: 0.5054  data_time: 0.0139  lr: 0.002  max_mem: 3774M
[32m[11/09 12:27:13 d2.utils.events]: [0m eta: 1:33:19  iter: 6399  total_loss: 0.392  loss_cls: 0.1673  loss_box_reg: 0.2576  time: 0.5054  data_time: 0.0180  lr: 0.002  max_mem: 3774M
[32m[11/09 12:27:23 d2.utils.events]: [0m eta: 1:33:08  iter: 6419  total_loss: 0.4232  loss_cls: 0.186  loss_box_reg: 0.2435  time: 0.5054  data_time: 0.0190  lr: 0.002  max_mem: 3774M
[32m[11/09 12:27:34 d2.utils.events]: [0m eta: 1:33:01  iter: 6439  total_loss: 0.4554  loss_cls: 0.1801  loss_box_reg: 0.2781  time: 0.5055  data_time: 0.0170  lr: 0.002  max_mem: 3774M
[32m[11/09 12:27:44 d2.utils.events]: [0m eta: 1:32:46  iter: 6459  total_loss: 0.4675  loss_cls: 0.1614  loss_box_reg: 0.2731  time: 0.5055  data_time: 0.0129  lr: 0.002  max_mem: 3774M
[32m[11/09 12:27:54 d2.utils.events]: [0m eta: 1:32:35  iter: 6479  total_loss: 0.3893  loss_cls: 0.1522  loss_box_reg: 0.2281  time: 0.5054  data_time: 0.0171  lr: 0.002  max_mem: 3774M
[32m[11/09 12:28:04 d2.utils.events]: [0m eta: 1:32:25  iter: 6499  total_loss: 0.443  loss_cls: 0.1721  loss_box_reg: 0.2744  time: 0.5055  data_time: 0.0146  lr: 0.002  max_mem: 3774M
[32m[11/09 12:28:14 d2.utils.events]: [0m eta: 1:32:15  iter: 6519  total_loss: 0.4178  loss_cls: 0.1459  loss_box_reg: 0.2646  time: 0.5055  data_time: 0.0167  lr: 0.002  max_mem: 3774M
[32m[11/09 12:28:24 d2.utils.events]: [0m eta: 1:32:04  iter: 6539  total_loss: 0.4779  loss_cls: 0.1881  loss_box_reg: 0.2824  time: 0.5055  data_time: 0.0147  lr: 0.002  max_mem: 3774M
[32m[11/09 12:28:34 d2.utils.events]: [0m eta: 1:31:51  iter: 6559  total_loss: 0.3947  loss_cls: 0.1384  loss_box_reg: 0.2539  time: 0.5054  data_time: 0.0141  lr: 0.002  max_mem: 3774M
[32m[11/09 12:28:44 d2.utils.events]: [0m eta: 1:31:38  iter: 6579  total_loss: 0.3986  loss_cls: 0.1486  loss_box_reg: 0.245  time: 0.5054  data_time: 0.0113  lr: 0.002  max_mem: 3774M
[32m[11/09 12:28:54 d2.utils.events]: [0m eta: 1:31:25  iter: 6599  total_loss: 0.4237  loss_cls: 0.1716  loss_box_reg: 0.2468  time: 0.5054  data_time: 0.0198  lr: 0.002  max_mem: 3774M
[32m[11/09 12:29:05 d2.utils.events]: [0m eta: 1:31:15  iter: 6619  total_loss: 0.4751  loss_cls: 0.186  loss_box_reg: 0.2858  time: 0.5055  data_time: 0.0309  lr: 0.002  max_mem: 3774M
[32m[11/09 12:29:15 d2.utils.events]: [0m eta: 1:31:05  iter: 6639  total_loss: 0.5055  loss_cls: 0.1871  loss_box_reg: 0.2838  time: 0.5054  data_time: 0.0165  lr: 0.002  max_mem: 3774M
[32m[11/09 12:29:25 d2.utils.events]: [0m eta: 1:30:55  iter: 6659  total_loss: 0.4501  loss_cls: 0.1848  loss_box_reg: 0.2863  time: 0.5054  data_time: 0.0249  lr: 0.002  max_mem: 3774M
[32m[11/09 12:29:35 d2.utils.events]: [0m eta: 1:30:45  iter: 6679  total_loss: 0.4644  loss_cls: 0.1671  loss_box_reg: 0.2977  time: 0.5054  data_time: 0.0155  lr: 0.002  max_mem: 3774M
[32m[11/09 12:29:45 d2.utils.events]: [0m eta: 1:30:34  iter: 6699  total_loss: 0.399  loss_cls: 0.1348  loss_box_reg: 0.2517  time: 0.5053  data_time: 0.0137  lr: 0.002  max_mem: 3774M
[32m[11/09 12:29:55 d2.utils.events]: [0m eta: 1:30:23  iter: 6719  total_loss: 0.4218  loss_cls: 0.1894  loss_box_reg: 0.2289  time: 0.5053  data_time: 0.0168  lr: 0.002  max_mem: 3774M
[32m[11/09 12:30:05 d2.utils.events]: [0m eta: 1:30:09  iter: 6739  total_loss: 0.4615  loss_cls: 0.1776  loss_box_reg: 0.2899  time: 0.5053  data_time: 0.0129  lr: 0.002  max_mem: 3774M
[32m[11/09 12:30:15 d2.utils.events]: [0m eta: 1:30:00  iter: 6759  total_loss: 0.429  loss_cls: 0.1697  loss_box_reg: 0.2449  time: 0.5053  data_time: 0.0188  lr: 0.002  max_mem: 3774M
[32m[11/09 12:30:25 d2.utils.events]: [0m eta: 1:29:54  iter: 6779  total_loss: 0.4782  loss_cls: 0.1827  loss_box_reg: 0.2863  time: 0.5053  data_time: 0.0203  lr: 0.002  max_mem: 3774M
[32m[11/09 12:30:36 d2.utils.events]: [0m eta: 1:29:46  iter: 6799  total_loss: 0.4439  loss_cls: 0.1696  loss_box_reg: 0.2726  time: 0.5054  data_time: 0.0215  lr: 0.002  max_mem: 3774M
[32m[11/09 12:30:46 d2.utils.events]: [0m eta: 1:29:34  iter: 6819  total_loss: 0.5114  loss_cls: 0.2094  loss_box_reg: 0.2853  time: 0.5054  data_time: 0.0181  lr: 0.002  max_mem: 3774M
[32m[11/09 12:30:56 d2.utils.events]: [0m eta: 1:29:24  iter: 6839  total_loss: 0.4602  loss_cls: 0.1487  loss_box_reg: 0.3006  time: 0.5054  data_time: 0.0217  lr: 0.002  max_mem: 3774M
[32m[11/09 12:31:06 d2.utils.events]: [0m eta: 1:29:15  iter: 6859  total_loss: 0.3967  loss_cls: 0.1496  loss_box_reg: 0.2673  time: 0.5054  data_time: 0.0155  lr: 0.002  max_mem: 3774M
[32m[11/09 12:31:16 d2.utils.events]: [0m eta: 1:29:04  iter: 6879  total_loss: 0.4323  loss_cls: 0.1419  loss_box_reg: 0.2495  time: 0.5054  data_time: 0.0161  lr: 0.002  max_mem: 3774M
[32m[11/09 12:31:27 d2.utils.events]: [0m eta: 1:28:54  iter: 6899  total_loss: 0.5345  loss_cls: 0.2118  loss_box_reg: 0.3037  time: 0.5054  data_time: 0.0170  lr: 0.002  max_mem: 3774M
[32m[11/09 12:31:37 d2.utils.events]: [0m eta: 1:28:37  iter: 6919  total_loss: 0.5374  loss_cls: 0.1995  loss_box_reg: 0.3205  time: 0.5054  data_time: 0.0180  lr: 0.002  max_mem: 3774M
[32m[11/09 12:31:47 d2.utils.events]: [0m eta: 1:28:25  iter: 6939  total_loss: 0.3868  loss_cls: 0.1345  loss_box_reg: 0.254  time: 0.5054  data_time: 0.0157  lr: 0.002  max_mem: 3774M
[32m[11/09 12:31:57 d2.utils.events]: [0m eta: 1:28:14  iter: 6959  total_loss: 0.4211  loss_cls: 0.1411  loss_box_reg: 0.2846  time: 0.5054  data_time: 0.0157  lr: 0.002  max_mem: 3774M
[32m[11/09 12:32:07 d2.utils.events]: [0m eta: 1:28:04  iter: 6979  total_loss: 0.4376  loss_cls: 0.1811  loss_box_reg: 0.2713  time: 0.5054  data_time: 0.0203  lr: 0.002  max_mem: 3774M
[32m[11/09 12:32:17 d2.utils.events]: [0m eta: 1:27:54  iter: 6999  total_loss: 0.4778  loss_cls: 0.1561  loss_box_reg: 0.2799  time: 0.5054  data_time: 0.0181  lr: 0.002  max_mem: 3774M
[32m[11/09 12:32:27 d2.utils.events]: [0m eta: 1:27:47  iter: 7019  total_loss: 0.3606  loss_cls: 0.1227  loss_box_reg: 0.2425  time: 0.5054  data_time: 0.0176  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:32:37 d2.utils.events]: [0m eta: 1:27:38  iter: 7039  total_loss: 0.4294  loss_cls: 0.15  loss_box_reg: 0.2727  time: 0.5054  data_time: 0.0184  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:32:48 d2.utils.events]: [0m eta: 1:27:31  iter: 7059  total_loss: 0.3759  loss_cls: 0.1309  loss_box_reg: 0.2301  time: 0.5054  data_time: 0.0220  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:32:58 d2.utils.events]: [0m eta: 1:27:23  iter: 7079  total_loss: 0.2847  loss_cls: 0.08558  loss_box_reg: 0.1961  time: 0.5054  data_time: 0.0215  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:33:08 d2.utils.events]: [0m eta: 1:27:13  iter: 7099  total_loss: 0.4574  loss_cls: 0.1865  loss_box_reg: 0.2762  time: 0.5054  data_time: 0.0163  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:33:18 d2.utils.events]: [0m eta: 1:26:59  iter: 7119  total_loss: 0.365  loss_cls: 0.1272  loss_box_reg: 0.242  time: 0.5054  data_time: 0.0120  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:33:28 d2.utils.events]: [0m eta: 1:26:48  iter: 7139  total_loss: 0.4378  loss_cls: 0.1722  loss_box_reg: 0.2599  time: 0.5054  data_time: 0.0213  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:33:38 d2.utils.events]: [0m eta: 1:26:39  iter: 7159  total_loss: 0.3536  loss_cls: 0.1382  loss_box_reg: 0.2358  time: 0.5054  data_time: 0.0162  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:33:49 d2.utils.events]: [0m eta: 1:26:27  iter: 7179  total_loss: 0.3955  loss_cls: 0.143  loss_box_reg: 0.2409  time: 0.5054  data_time: 0.0147  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:33:59 d2.utils.events]: [0m eta: 1:26:17  iter: 7199  total_loss: 0.3814  loss_cls: 0.141  loss_box_reg: 0.232  time: 0.5054  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:34:09 d2.utils.events]: [0m eta: 1:26:11  iter: 7219  total_loss: 0.4073  loss_cls: 0.1407  loss_box_reg: 0.2427  time: 0.5054  data_time: 0.0191  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:34:19 d2.utils.events]: [0m eta: 1:26:03  iter: 7239  total_loss: 0.3088  loss_cls: 0.1003  loss_box_reg: 0.2056  time: 0.5054  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:34:29 d2.utils.events]: [0m eta: 1:25:53  iter: 7259  total_loss: 0.3863  loss_cls: 0.1291  loss_box_reg: 0.2429  time: 0.5054  data_time: 0.0129  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:34:40 d2.utils.events]: [0m eta: 1:25:49  iter: 7279  total_loss: 0.3838  loss_cls: 0.1304  loss_box_reg: 0.2452  time: 0.5054  data_time: 0.0154  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:34:50 d2.utils.events]: [0m eta: 1:25:36  iter: 7299  total_loss: 0.3895  loss_cls: 0.129  loss_box_reg: 0.2571  time: 0.5054  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:35:00 d2.utils.events]: [0m eta: 1:25:27  iter: 7319  total_loss: 0.3695  loss_cls: 0.1397  loss_box_reg: 0.2436  time: 0.5054  data_time: 0.0142  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:35:10 d2.utils.events]: [0m eta: 1:25:15  iter: 7339  total_loss: 0.3833  loss_cls: 0.1123  loss_box_reg: 0.2472  time: 0.5054  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:35:20 d2.utils.events]: [0m eta: 1:25:09  iter: 7359  total_loss: 0.3373  loss_cls: 0.1017  loss_box_reg: 0.2343  time: 0.5054  data_time: 0.0223  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:35:30 d2.utils.events]: [0m eta: 1:24:56  iter: 7379  total_loss: 0.3248  loss_cls: 0.1194  loss_box_reg: 0.2234  time: 0.5054  data_time: 0.0150  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:35:40 d2.utils.events]: [0m eta: 1:24:49  iter: 7399  total_loss: 0.3819  loss_cls: 0.1333  loss_box_reg: 0.2425  time: 0.5054  data_time: 0.0191  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:35:50 d2.utils.events]: [0m eta: 1:24:41  iter: 7419  total_loss: 0.3111  loss_cls: 0.1005  loss_box_reg: 0.205  time: 0.5054  data_time: 0.0167  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:36:00 d2.utils.events]: [0m eta: 1:24:27  iter: 7439  total_loss: 0.3141  loss_cls: 0.117  loss_box_reg: 0.1947  time: 0.5054  data_time: 0.0164  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:36:10 d2.utils.events]: [0m eta: 1:24:18  iter: 7459  total_loss: 0.3112  loss_cls: 0.09665  loss_box_reg: 0.2293  time: 0.5053  data_time: 0.0171  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:36:20 d2.utils.events]: [0m eta: 1:24:11  iter: 7479  total_loss: 0.4015  loss_cls: 0.1244  loss_box_reg: 0.2412  time: 0.5053  data_time: 0.0201  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:36:29 fvcore.common.checkpoint]: [0mSaving checkpoint to ./output/model_0007496.pth
[32m[11/09 12:36:32 d2.data.datasets.coco]: [0mLoaded 601 images in COCO format from /media/work/data/zbt/detectron2/datasets/COCO/annotations/val.json
[32m[11/09 12:36:32 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[32m[11/09 12:36:32 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[32m[11/09 12:36:32 d2.data.common]: [0mSerializing 601 elements to byte tensors and concatenating them all ...
[32m[11/09 12:36:32 d2.data.common]: [0mSerialized dataset takes 0.16 MiB
[32m[11/09 12:36:32 d2.evaluation.coco_evaluation]: [0mFast COCO eval is not built. Falling back to official COCO eval.
[32m[11/09 12:36:32 d2.evaluation.evaluator]: [0mStart inference on 601 batches
[32m[11/09 12:36:34 d2.evaluation.evaluator]: [0mInference done 11/601. Dataloading: 0.0011 s/iter. Inference: 0.1411 s/iter. Eval: 0.0005 s/iter. Total: 0.1427 s/iter. ETA=0:01:24
[32m[11/09 12:36:39 d2.evaluation.evaluator]: [0mInference done 47/601. Dataloading: 0.0030 s/iter. Inference: 0.1367 s/iter. Eval: 0.0005 s/iter. Total: 0.1403 s/iter. ETA=0:01:17
[32m[11/09 12:36:44 d2.evaluation.evaluator]: [0mInference done 81/601. Dataloading: 0.0030 s/iter. Inference: 0.1404 s/iter. Eval: 0.0005 s/iter. Total: 0.1441 s/iter. ETA=0:01:14
[32m[11/09 12:36:49 d2.evaluation.evaluator]: [0mInference done 115/601. Dataloading: 0.0033 s/iter. Inference: 0.1415 s/iter. Eval: 0.0005 s/iter. Total: 0.1453 s/iter. ETA=0:01:10
[32m[11/09 12:36:54 d2.evaluation.evaluator]: [0mInference done 150/601. Dataloading: 0.0038 s/iter. Inference: 0.1409 s/iter. Eval: 0.0005 s/iter. Total: 0.1453 s/iter. ETA=0:01:05
[32m[11/09 12:36:59 d2.evaluation.evaluator]: [0mInference done 185/601. Dataloading: 0.0037 s/iter. Inference: 0.1409 s/iter. Eval: 0.0005 s/iter. Total: 0.1453 s/iter. ETA=0:01:00
[32m[11/09 12:37:04 d2.evaluation.evaluator]: [0mInference done 221/601. Dataloading: 0.0035 s/iter. Inference: 0.1406 s/iter. Eval: 0.0005 s/iter. Total: 0.1447 s/iter. ETA=0:00:55
[32m[11/09 12:37:09 d2.evaluation.evaluator]: [0mInference done 259/601. Dataloading: 0.0036 s/iter. Inference: 0.1390 s/iter. Eval: 0.0005 s/iter. Total: 0.1432 s/iter. ETA=0:00:48
[32m[11/09 12:37:14 d2.evaluation.evaluator]: [0mInference done 293/601. Dataloading: 0.0036 s/iter. Inference: 0.1398 s/iter. Eval: 0.0005 s/iter. Total: 0.1440 s/iter. ETA=0:00:44
[32m[11/09 12:37:19 d2.evaluation.evaluator]: [0mInference done 330/601. Dataloading: 0.0036 s/iter. Inference: 0.1391 s/iter. Eval: 0.0005 s/iter. Total: 0.1433 s/iter. ETA=0:00:38
[32m[11/09 12:37:25 d2.evaluation.evaluator]: [0mInference done 368/601. Dataloading: 0.0034 s/iter. Inference: 0.1383 s/iter. Eval: 0.0005 s/iter. Total: 0.1424 s/iter. ETA=0:00:33
[32m[11/09 12:37:30 d2.evaluation.evaluator]: [0mInference done 404/601. Dataloading: 0.0033 s/iter. Inference: 0.1382 s/iter. Eval: 0.0005 s/iter. Total: 0.1422 s/iter. ETA=0:00:28
[32m[11/09 12:37:35 d2.evaluation.evaluator]: [0mInference done 439/601. Dataloading: 0.0034 s/iter. Inference: 0.1386 s/iter. Eval: 0.0005 s/iter. Total: 0.1425 s/iter. ETA=0:00:23
[32m[11/09 12:37:40 d2.evaluation.evaluator]: [0mInference done 474/601. Dataloading: 0.0034 s/iter. Inference: 0.1388 s/iter. Eval: 0.0005 s/iter. Total: 0.1428 s/iter. ETA=0:00:18
[32m[11/09 12:37:45 d2.evaluation.evaluator]: [0mInference done 508/601. Dataloading: 0.0033 s/iter. Inference: 0.1393 s/iter. Eval: 0.0005 s/iter. Total: 0.1432 s/iter. ETA=0:00:13
[32m[11/09 12:37:50 d2.evaluation.evaluator]: [0mInference done 543/601. Dataloading: 0.0034 s/iter. Inference: 0.1392 s/iter. Eval: 0.0005 s/iter. Total: 0.1432 s/iter. ETA=0:00:08
[32m[11/09 12:37:55 d2.evaluation.evaluator]: [0mInference done 579/601. Dataloading: 0.0034 s/iter. Inference: 0.1390 s/iter. Eval: 0.0005 s/iter. Total: 0.1430 s/iter. ETA=0:00:03
[32m[11/09 12:37:58 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:25.416445 (0.143316 s / iter per device, on 1 devices)
[32m[11/09 12:37:58 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:22 (0.138888 s / iter per device, on 1 devices)
[32m[11/09 12:37:58 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/09 12:37:58 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/inference/coco_instances_results.json
[32m[11/09 12:37:58 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=1.00s).
Accumulating evaluation results...
DONE (t=0.20s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.461
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.853
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.439
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.448
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.471
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.487
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.449
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.572
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.543
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.594
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.639
[32m[11/09 12:38:00 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 46.084 | 85.298 | 43.932 | 44.792 | 47.065 | 48.658 |
[32m[11/09 12:38:00 d2.engine.defaults]: [0mEvaluation results for coco_my_val in csv format:
[32m[11/09 12:38:00 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/09 12:38:00 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/09 12:38:00 d2.evaluation.testing]: [0mcopypaste: 46.0836,85.2983,43.9324,44.7915,47.0646,48.6585
[32m[11/09 12:38:00 d2.utils.events]: [0m eta: 1:24:03  iter: 7499  total_loss: 0.4375  loss_cls: 0.1518  loss_box_reg: 0.2205  time: 0.5053  data_time: 0.0209  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:38:10 d2.utils.events]: [0m eta: 1:23:55  iter: 7519  total_loss: 0.4218  loss_cls: 0.1729  loss_box_reg: 0.2616  time: 0.5054  data_time: 0.0255  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:38:20 d2.utils.events]: [0m eta: 1:23:45  iter: 7539  total_loss: 0.402  loss_cls: 0.1351  loss_box_reg: 0.2465  time: 0.5054  data_time: 0.0142  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:38:30 d2.utils.events]: [0m eta: 1:23:37  iter: 7559  total_loss: 0.3722  loss_cls: 0.1169  loss_box_reg: 0.2539  time: 0.5053  data_time: 0.0189  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:38:40 d2.utils.events]: [0m eta: 1:23:29  iter: 7579  total_loss: 0.3187  loss_cls: 0.1103  loss_box_reg: 0.2064  time: 0.5053  data_time: 0.0156  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:38:50 d2.utils.events]: [0m eta: 1:23:16  iter: 7599  total_loss: 0.3234  loss_cls: 0.1009  loss_box_reg: 0.221  time: 0.5053  data_time: 0.0155  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:39:01 d2.utils.events]: [0m eta: 1:23:03  iter: 7619  total_loss: 0.3403  loss_cls: 0.1054  loss_box_reg: 0.2345  time: 0.5053  data_time: 0.0140  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:39:11 d2.utils.events]: [0m eta: 1:22:56  iter: 7639  total_loss: 0.3441  loss_cls: 0.1191  loss_box_reg: 0.2239  time: 0.5054  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:39:21 d2.utils.events]: [0m eta: 1:22:43  iter: 7659  total_loss: 0.2759  loss_cls: 0.08596  loss_box_reg: 0.1918  time: 0.5053  data_time: 0.0137  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:39:31 d2.utils.events]: [0m eta: 1:22:37  iter: 7679  total_loss: 0.3663  loss_cls: 0.1531  loss_box_reg: 0.2188  time: 0.5054  data_time: 0.0178  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:39:41 d2.utils.events]: [0m eta: 1:22:27  iter: 7699  total_loss: 0.2705  loss_cls: 0.08043  loss_box_reg: 0.1755  time: 0.5053  data_time: 0.0114  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:39:51 d2.utils.events]: [0m eta: 1:22:18  iter: 7719  total_loss: 0.3848  loss_cls: 0.1269  loss_box_reg: 0.2525  time: 0.5053  data_time: 0.0201  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:40:02 d2.utils.events]: [0m eta: 1:22:11  iter: 7739  total_loss: 0.3029  loss_cls: 0.07842  loss_box_reg: 0.2072  time: 0.5053  data_time: 0.0172  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:40:12 d2.utils.events]: [0m eta: 1:21:57  iter: 7759  total_loss: 0.3516  loss_cls: 0.1184  loss_box_reg: 0.2376  time: 0.5053  data_time: 0.0206  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:40:22 d2.utils.events]: [0m eta: 1:21:46  iter: 7779  total_loss: 0.3359  loss_cls: 0.1054  loss_box_reg: 0.2164  time: 0.5053  data_time: 0.0228  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:40:32 d2.utils.events]: [0m eta: 1:21:33  iter: 7799  total_loss: 0.451  loss_cls: 0.1723  loss_box_reg: 0.2735  time: 0.5053  data_time: 0.0165  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:40:42 d2.utils.events]: [0m eta: 1:21:23  iter: 7819  total_loss: 0.352  loss_cls: 0.1185  loss_box_reg: 0.2234  time: 0.5054  data_time: 0.0147  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:40:53 d2.utils.events]: [0m eta: 1:21:13  iter: 7839  total_loss: 0.4601  loss_cls: 0.1569  loss_box_reg: 0.2713  time: 0.5054  data_time: 0.0169  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:41:03 d2.utils.events]: [0m eta: 1:21:03  iter: 7859  total_loss: 0.3579  loss_cls: 0.1245  loss_box_reg: 0.2334  time: 0.5054  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:41:13 d2.utils.events]: [0m eta: 1:20:53  iter: 7879  total_loss: 0.3725  loss_cls: 0.1187  loss_box_reg: 0.2455  time: 0.5054  data_time: 0.0180  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:41:23 d2.utils.events]: [0m eta: 1:20:44  iter: 7899  total_loss: 0.425  loss_cls: 0.1633  loss_box_reg: 0.2701  time: 0.5054  data_time: 0.0146  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:41:33 d2.utils.events]: [0m eta: 1:20:36  iter: 7919  total_loss: 0.3157  loss_cls: 0.1131  loss_box_reg: 0.2229  time: 0.5054  data_time: 0.0243  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:41:44 d2.utils.events]: [0m eta: 1:20:31  iter: 7939  total_loss: 0.3628  loss_cls: 0.1058  loss_box_reg: 0.2464  time: 0.5054  data_time: 0.0193  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:41:54 d2.utils.events]: [0m eta: 1:20:22  iter: 7959  total_loss: 0.3534  loss_cls: 0.1263  loss_box_reg: 0.2437  time: 0.5055  data_time: 0.0195  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:42:04 d2.utils.events]: [0m eta: 1:20:14  iter: 7979  total_loss: 0.3755  loss_cls: 0.1293  loss_box_reg: 0.2598  time: 0.5055  data_time: 0.0146  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:42:14 d2.utils.events]: [0m eta: 1:20:01  iter: 7999  total_loss: 0.2604  loss_cls: 0.08366  loss_box_reg: 0.1963  time: 0.5054  data_time: 0.0125  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:42:24 d2.utils.events]: [0m eta: 1:19:51  iter: 8019  total_loss: 0.3476  loss_cls: 0.1212  loss_box_reg: 0.2464  time: 0.5054  data_time: 0.0230  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:42:35 d2.utils.events]: [0m eta: 1:19:41  iter: 8039  total_loss: 0.3804  loss_cls: 0.134  loss_box_reg: 0.2561  time: 0.5055  data_time: 0.0125  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:42:45 d2.utils.events]: [0m eta: 1:19:29  iter: 8059  total_loss: 0.3341  loss_cls: 0.1074  loss_box_reg: 0.2186  time: 0.5054  data_time: 0.0138  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:42:55 d2.utils.events]: [0m eta: 1:19:15  iter: 8079  total_loss: 0.3111  loss_cls: 0.08891  loss_box_reg: 0.2242  time: 0.5055  data_time: 0.0155  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:43:05 d2.utils.events]: [0m eta: 1:19:09  iter: 8099  total_loss: 0.3636  loss_cls: 0.1349  loss_box_reg: 0.2247  time: 0.5055  data_time: 0.0157  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:43:15 d2.utils.events]: [0m eta: 1:18:56  iter: 8119  total_loss: 0.3687  loss_cls: 0.1249  loss_box_reg: 0.2406  time: 0.5054  data_time: 0.0187  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:43:25 d2.utils.events]: [0m eta: 1:18:50  iter: 8139  total_loss: 0.4044  loss_cls: 0.1543  loss_box_reg: 0.2525  time: 0.5054  data_time: 0.0124  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:43:35 d2.utils.events]: [0m eta: 1:18:38  iter: 8159  total_loss: 0.2909  loss_cls: 0.09533  loss_box_reg: 0.194  time: 0.5054  data_time: 0.0134  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:43:45 d2.utils.events]: [0m eta: 1:18:28  iter: 8179  total_loss: 0.3563  loss_cls: 0.1234  loss_box_reg: 0.2338  time: 0.5054  data_time: 0.0129  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:43:55 d2.utils.events]: [0m eta: 1:18:18  iter: 8199  total_loss: 0.3537  loss_cls: 0.1115  loss_box_reg: 0.236  time: 0.5054  data_time: 0.0123  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:44:05 d2.utils.events]: [0m eta: 1:18:04  iter: 8219  total_loss: 0.3474  loss_cls: 0.1163  loss_box_reg: 0.2312  time: 0.5054  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:44:15 d2.utils.events]: [0m eta: 1:17:51  iter: 8239  total_loss: 0.3193  loss_cls: 0.09797  loss_box_reg: 0.2442  time: 0.5053  data_time: 0.0210  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:44:25 d2.utils.events]: [0m eta: 1:17:43  iter: 8259  total_loss: 0.2963  loss_cls: 0.08733  loss_box_reg: 0.1866  time: 0.5053  data_time: 0.0207  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:44:35 d2.utils.events]: [0m eta: 1:17:29  iter: 8279  total_loss: 0.3577  loss_cls: 0.1116  loss_box_reg: 0.2423  time: 0.5053  data_time: 0.0162  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:44:46 d2.utils.events]: [0m eta: 1:17:23  iter: 8299  total_loss: 0.3489  loss_cls: 0.1192  loss_box_reg: 0.2345  time: 0.5054  data_time: 0.0267  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:44:56 d2.utils.events]: [0m eta: 1:17:13  iter: 8319  total_loss: 0.3199  loss_cls: 0.09888  loss_box_reg: 0.2099  time: 0.5053  data_time: 0.0119  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:45:06 d2.utils.events]: [0m eta: 1:17:06  iter: 8339  total_loss: 0.3593  loss_cls: 0.1283  loss_box_reg: 0.2326  time: 0.5053  data_time: 0.0192  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:45:16 d2.utils.events]: [0m eta: 1:16:49  iter: 8359  total_loss: 0.4318  loss_cls: 0.1527  loss_box_reg: 0.2797  time: 0.5053  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:45:26 d2.utils.events]: [0m eta: 1:16:43  iter: 8379  total_loss: 0.3592  loss_cls: 0.1293  loss_box_reg: 0.228  time: 0.5053  data_time: 0.0191  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:45:36 d2.utils.events]: [0m eta: 1:16:28  iter: 8399  total_loss: 0.3209  loss_cls: 0.1039  loss_box_reg: 0.2279  time: 0.5053  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:45:46 d2.utils.events]: [0m eta: 1:16:16  iter: 8419  total_loss: 0.3782  loss_cls: 0.1202  loss_box_reg: 0.2586  time: 0.5053  data_time: 0.0157  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:45:56 d2.utils.events]: [0m eta: 1:16:07  iter: 8439  total_loss: 0.3445  loss_cls: 0.1091  loss_box_reg: 0.2405  time: 0.5053  data_time: 0.0160  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:46:06 d2.utils.events]: [0m eta: 1:15:57  iter: 8459  total_loss: 0.3993  loss_cls: 0.1647  loss_box_reg: 0.2549  time: 0.5053  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:46:17 d2.utils.events]: [0m eta: 1:15:47  iter: 8479  total_loss: 0.3093  loss_cls: 0.09729  loss_box_reg: 0.2182  time: 0.5053  data_time: 0.0172  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:46:27 d2.utils.events]: [0m eta: 1:15:37  iter: 8499  total_loss: 0.3776  loss_cls: 0.1323  loss_box_reg: 0.2251  time: 0.5054  data_time: 0.0193  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:46:37 d2.utils.events]: [0m eta: 1:15:25  iter: 8519  total_loss: 0.3104  loss_cls: 0.107  loss_box_reg: 0.2158  time: 0.5053  data_time: 0.0149  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:46:47 d2.utils.events]: [0m eta: 1:15:15  iter: 8539  total_loss: 0.3168  loss_cls: 0.1101  loss_box_reg: 0.2253  time: 0.5053  data_time: 0.0161  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:46:57 d2.utils.events]: [0m eta: 1:15:06  iter: 8559  total_loss: 0.3619  loss_cls: 0.1164  loss_box_reg: 0.2484  time: 0.5053  data_time: 0.0168  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:47:07 d2.utils.events]: [0m eta: 1:14:55  iter: 8579  total_loss: 0.3336  loss_cls: 0.1039  loss_box_reg: 0.2237  time: 0.5053  data_time: 0.0177  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:47:17 d2.utils.events]: [0m eta: 1:14:48  iter: 8599  total_loss: 0.2994  loss_cls: 0.08515  loss_box_reg: 0.2005  time: 0.5053  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:47:28 d2.utils.events]: [0m eta: 1:14:40  iter: 8619  total_loss: 0.3151  loss_cls: 0.1016  loss_box_reg: 0.2206  time: 0.5053  data_time: 0.0120  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:47:38 d2.utils.events]: [0m eta: 1:14:31  iter: 8639  total_loss: 0.3142  loss_cls: 0.08224  loss_box_reg: 0.2083  time: 0.5053  data_time: 0.0210  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:47:48 d2.utils.events]: [0m eta: 1:14:22  iter: 8659  total_loss: 0.4216  loss_cls: 0.1369  loss_box_reg: 0.2832  time: 0.5053  data_time: 0.0196  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:47:58 d2.utils.events]: [0m eta: 1:14:11  iter: 8679  total_loss: 0.2877  loss_cls: 0.09326  loss_box_reg: 0.1964  time: 0.5053  data_time: 0.0213  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:48:08 d2.utils.events]: [0m eta: 1:14:04  iter: 8699  total_loss: 0.3648  loss_cls: 0.1143  loss_box_reg: 0.2421  time: 0.5053  data_time: 0.0164  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:48:18 d2.utils.events]: [0m eta: 1:13:55  iter: 8719  total_loss: 0.3151  loss_cls: 0.09176  loss_box_reg: 0.2217  time: 0.5053  data_time: 0.0127  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:48:29 d2.utils.events]: [0m eta: 1:13:42  iter: 8739  total_loss: 0.3301  loss_cls: 0.1153  loss_box_reg: 0.215  time: 0.5053  data_time: 0.0196  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:48:38 d2.utils.events]: [0m eta: 1:13:29  iter: 8759  total_loss: 0.3186  loss_cls: 0.09169  loss_box_reg: 0.2267  time: 0.5053  data_time: 0.0136  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:48:48 d2.utils.events]: [0m eta: 1:13:17  iter: 8779  total_loss: 0.3879  loss_cls: 0.1253  loss_box_reg: 0.2515  time: 0.5052  data_time: 0.0212  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:48:59 d2.utils.events]: [0m eta: 1:13:08  iter: 8799  total_loss: 0.3202  loss_cls: 0.1035  loss_box_reg: 0.2233  time: 0.5053  data_time: 0.0228  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:49:08 d2.utils.events]: [0m eta: 1:12:55  iter: 8819  total_loss: 0.3191  loss_cls: 0.1125  loss_box_reg: 0.2296  time: 0.5052  data_time: 0.0138  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:49:18 d2.utils.events]: [0m eta: 1:12:43  iter: 8839  total_loss: 0.2769  loss_cls: 0.07999  loss_box_reg: 0.2081  time: 0.5052  data_time: 0.0178  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:49:28 d2.utils.events]: [0m eta: 1:12:33  iter: 8859  total_loss: 0.372  loss_cls: 0.1311  loss_box_reg: 0.241  time: 0.5052  data_time: 0.0114  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:49:39 d2.utils.events]: [0m eta: 1:12:23  iter: 8879  total_loss: 0.3798  loss_cls: 0.1218  loss_box_reg: 0.2362  time: 0.5052  data_time: 0.0227  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:49:49 d2.utils.events]: [0m eta: 1:12:08  iter: 8899  total_loss: 0.3311  loss_cls: 0.1348  loss_box_reg: 0.2029  time: 0.5052  data_time: 0.0160  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:49:59 d2.utils.events]: [0m eta: 1:11:57  iter: 8919  total_loss: 0.3318  loss_cls: 0.1101  loss_box_reg: 0.2232  time: 0.5052  data_time: 0.0204  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:50:09 d2.utils.events]: [0m eta: 1:11:45  iter: 8939  total_loss: 0.3433  loss_cls: 0.12  loss_box_reg: 0.221  time: 0.5052  data_time: 0.0198  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:50:19 d2.utils.events]: [0m eta: 1:11:35  iter: 8959  total_loss: 0.3715  loss_cls: 0.1322  loss_box_reg: 0.2443  time: 0.5052  data_time: 0.0188  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:50:30 d2.utils.events]: [0m eta: 1:11:22  iter: 8979  total_loss: 0.3385  loss_cls: 0.1176  loss_box_reg: 0.2186  time: 0.5052  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:50:39 d2.utils.events]: [0m eta: 1:11:13  iter: 8999  total_loss: 0.3301  loss_cls: 0.1076  loss_box_reg: 0.2189  time: 0.5052  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:50:49 d2.utils.events]: [0m eta: 1:11:01  iter: 9019  total_loss: 0.3537  loss_cls: 0.1217  loss_box_reg: 0.2294  time: 0.5052  data_time: 0.0194  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:50:59 d2.utils.events]: [0m eta: 1:10:51  iter: 9039  total_loss: 0.3609  loss_cls: 0.1213  loss_box_reg: 0.2274  time: 0.5052  data_time: 0.0167  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:51:09 d2.utils.events]: [0m eta: 1:10:41  iter: 9059  total_loss: 0.3313  loss_cls: 0.1133  loss_box_reg: 0.2201  time: 0.5051  data_time: 0.0227  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:51:19 d2.utils.events]: [0m eta: 1:10:31  iter: 9079  total_loss: 0.3482  loss_cls: 0.1365  loss_box_reg: 0.2181  time: 0.5051  data_time: 0.0132  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:51:29 d2.utils.events]: [0m eta: 1:10:21  iter: 9099  total_loss: 0.3412  loss_cls: 0.1119  loss_box_reg: 0.2284  time: 0.5051  data_time: 0.0124  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:51:39 d2.utils.events]: [0m eta: 1:10:12  iter: 9119  total_loss: 0.3085  loss_cls: 0.1074  loss_box_reg: 0.2174  time: 0.5051  data_time: 0.0172  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:51:50 d2.utils.events]: [0m eta: 1:10:01  iter: 9139  total_loss: 0.3828  loss_cls: 0.1361  loss_box_reg: 0.2406  time: 0.5051  data_time: 0.0205  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:52:00 d2.utils.events]: [0m eta: 1:09:52  iter: 9159  total_loss: 0.3092  loss_cls: 0.08388  loss_box_reg: 0.1979  time: 0.5051  data_time: 0.0135  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:52:10 d2.utils.events]: [0m eta: 1:09:45  iter: 9179  total_loss: 0.3486  loss_cls: 0.1084  loss_box_reg: 0.2244  time: 0.5051  data_time: 0.0124  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:52:20 d2.utils.events]: [0m eta: 1:09:36  iter: 9199  total_loss: 0.3446  loss_cls: 0.1202  loss_box_reg: 0.2204  time: 0.5051  data_time: 0.0163  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:52:30 d2.utils.events]: [0m eta: 1:09:27  iter: 9219  total_loss: 0.3451  loss_cls: 0.1203  loss_box_reg: 0.2271  time: 0.5051  data_time: 0.0222  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:52:41 d2.utils.events]: [0m eta: 1:09:20  iter: 9239  total_loss: 0.3365  loss_cls: 0.09118  loss_box_reg: 0.228  time: 0.5051  data_time: 0.0210  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:52:50 d2.utils.events]: [0m eta: 1:09:07  iter: 9259  total_loss: 0.3118  loss_cls: 0.09086  loss_box_reg: 0.214  time: 0.5051  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:53:00 d2.utils.events]: [0m eta: 1:08:55  iter: 9279  total_loss: 0.3555  loss_cls: 0.1154  loss_box_reg: 0.2061  time: 0.5051  data_time: 0.0145  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:53:10 d2.utils.events]: [0m eta: 1:08:43  iter: 9299  total_loss: 0.3486  loss_cls: 0.1074  loss_box_reg: 0.214  time: 0.5051  data_time: 0.0183  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:53:20 d2.utils.events]: [0m eta: 1:08:32  iter: 9319  total_loss: 0.3603  loss_cls: 0.1278  loss_box_reg: 0.23  time: 0.5050  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:53:30 d2.utils.events]: [0m eta: 1:08:22  iter: 9339  total_loss: 0.3614  loss_cls: 0.1183  loss_box_reg: 0.229  time: 0.5050  data_time: 0.0150  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:53:41 d2.utils.events]: [0m eta: 1:08:16  iter: 9359  total_loss: 0.386  loss_cls: 0.1405  loss_box_reg: 0.2484  time: 0.5050  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:53:51 d2.utils.events]: [0m eta: 1:08:03  iter: 9379  total_loss: 0.3169  loss_cls: 0.1053  loss_box_reg: 0.2068  time: 0.5050  data_time: 0.0213  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:54:01 d2.utils.events]: [0m eta: 1:07:54  iter: 9399  total_loss: 0.3647  loss_cls: 0.1346  loss_box_reg: 0.2294  time: 0.5050  data_time: 0.0181  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:54:11 d2.utils.events]: [0m eta: 1:07:47  iter: 9419  total_loss: 0.3337  loss_cls: 0.1093  loss_box_reg: 0.2338  time: 0.5051  data_time: 0.0156  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:54:22 d2.utils.events]: [0m eta: 1:07:39  iter: 9439  total_loss: 0.3945  loss_cls: 0.1308  loss_box_reg: 0.2265  time: 0.5051  data_time: 0.0188  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:54:32 d2.utils.events]: [0m eta: 1:07:29  iter: 9459  total_loss: 0.353  loss_cls: 0.1175  loss_box_reg: 0.2195  time: 0.5051  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:54:42 d2.utils.events]: [0m eta: 1:07:19  iter: 9479  total_loss: 0.3538  loss_cls: 0.1131  loss_box_reg: 0.2549  time: 0.5051  data_time: 0.0232  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:54:52 d2.utils.events]: [0m eta: 1:07:05  iter: 9499  total_loss: 0.354  loss_cls: 0.116  loss_box_reg: 0.2169  time: 0.5050  data_time: 0.0107  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:55:02 d2.utils.events]: [0m eta: 1:06:56  iter: 9519  total_loss: 0.3651  loss_cls: 0.1373  loss_box_reg: 0.2229  time: 0.5051  data_time: 0.0168  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:55:12 d2.utils.events]: [0m eta: 1:06:45  iter: 9539  total_loss: 0.3577  loss_cls: 0.1206  loss_box_reg: 0.2351  time: 0.5051  data_time: 0.0183  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:55:22 d2.utils.events]: [0m eta: 1:06:37  iter: 9559  total_loss: 0.3108  loss_cls: 0.1098  loss_box_reg: 0.2088  time: 0.5051  data_time: 0.0271  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:55:33 d2.utils.events]: [0m eta: 1:06:28  iter: 9579  total_loss: 0.3972  loss_cls: 0.1444  loss_box_reg: 0.2461  time: 0.5051  data_time: 0.0215  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:55:43 d2.utils.events]: [0m eta: 1:06:18  iter: 9599  total_loss: 0.3618  loss_cls: 0.1259  loss_box_reg: 0.2322  time: 0.5051  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:55:53 d2.utils.events]: [0m eta: 1:06:07  iter: 9619  total_loss: 0.356  loss_cls: 0.117  loss_box_reg: 0.2394  time: 0.5051  data_time: 0.0241  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:56:03 d2.utils.events]: [0m eta: 1:05:57  iter: 9639  total_loss: 0.3065  loss_cls: 0.09083  loss_box_reg: 0.2123  time: 0.5051  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:56:14 d2.utils.events]: [0m eta: 1:05:48  iter: 9659  total_loss: 0.3978  loss_cls: 0.1413  loss_box_reg: 0.2307  time: 0.5051  data_time: 0.0162  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:56:24 d2.utils.events]: [0m eta: 1:05:38  iter: 9679  total_loss: 0.4065  loss_cls: 0.1474  loss_box_reg: 0.243  time: 0.5052  data_time: 0.0238  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:56:35 d2.utils.events]: [0m eta: 1:05:28  iter: 9699  total_loss: 0.3001  loss_cls: 0.1009  loss_box_reg: 0.2027  time: 0.5052  data_time: 0.0187  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:56:45 d2.utils.events]: [0m eta: 1:05:21  iter: 9719  total_loss: 0.3278  loss_cls: 0.105  loss_box_reg: 0.218  time: 0.5052  data_time: 0.0212  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:56:55 d2.utils.events]: [0m eta: 1:05:10  iter: 9739  total_loss: 0.3532  loss_cls: 0.1169  loss_box_reg: 0.2274  time: 0.5052  data_time: 0.0155  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:57:05 d2.utils.events]: [0m eta: 1:05:04  iter: 9759  total_loss: 0.4146  loss_cls: 0.134  loss_box_reg: 0.267  time: 0.5052  data_time: 0.0129  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:57:16 d2.utils.events]: [0m eta: 1:04:57  iter: 9779  total_loss: 0.3473  loss_cls: 0.1088  loss_box_reg: 0.2286  time: 0.5052  data_time: 0.0227  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:57:26 d2.utils.events]: [0m eta: 1:04:47  iter: 9799  total_loss: 0.361  loss_cls: 0.1185  loss_box_reg: 0.2509  time: 0.5053  data_time: 0.0247  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:57:36 d2.utils.events]: [0m eta: 1:04:39  iter: 9819  total_loss: 0.4033  loss_cls: 0.1493  loss_box_reg: 0.2247  time: 0.5053  data_time: 0.0228  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:57:47 d2.utils.events]: [0m eta: 1:04:30  iter: 9839  total_loss: 0.3384  loss_cls: 0.1099  loss_box_reg: 0.2371  time: 0.5053  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:57:57 d2.utils.events]: [0m eta: 1:04:20  iter: 9859  total_loss: 0.3209  loss_cls: 0.1183  loss_box_reg: 0.2001  time: 0.5053  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:58:07 d2.utils.events]: [0m eta: 1:04:06  iter: 9879  total_loss: 0.4002  loss_cls: 0.1437  loss_box_reg: 0.2334  time: 0.5053  data_time: 0.0150  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:58:17 d2.utils.events]: [0m eta: 1:03:55  iter: 9899  total_loss: 0.3808  loss_cls: 0.1174  loss_box_reg: 0.2264  time: 0.5052  data_time: 0.0113  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:58:27 d2.utils.events]: [0m eta: 1:03:45  iter: 9919  total_loss: 0.3292  loss_cls: 0.119  loss_box_reg: 0.2166  time: 0.5052  data_time: 0.0189  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:58:37 d2.utils.events]: [0m eta: 1:03:37  iter: 9939  total_loss: 0.3548  loss_cls: 0.1261  loss_box_reg: 0.2344  time: 0.5053  data_time: 0.0211  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:58:47 d2.utils.events]: [0m eta: 1:03:26  iter: 9959  total_loss: 0.3261  loss_cls: 0.09319  loss_box_reg: 0.2165  time: 0.5053  data_time: 0.0126  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:58:57 d2.utils.events]: [0m eta: 1:03:15  iter: 9979  total_loss: 0.3772  loss_cls: 0.1139  loss_box_reg: 0.2288  time: 0.5053  data_time: 0.0181  lr: 0.0002  max_mem: 3774M
[32m[11/09 12:59:05 fvcore.common.checkpoint]: [0mSaving checkpoint to ./output/model_0009995.pth
[32m[11/09 12:59:09 d2.data.datasets.coco]: [0mLoaded 601 images in COCO format from /media/work/data/zbt/detectron2/datasets/COCO/annotations/val.json
[32m[11/09 12:59:09 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[32m[11/09 12:59:09 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[32m[11/09 12:59:09 d2.data.common]: [0mSerializing 601 elements to byte tensors and concatenating them all ...
[32m[11/09 12:59:09 d2.data.common]: [0mSerialized dataset takes 0.16 MiB
[32m[11/09 12:59:09 d2.evaluation.coco_evaluation]: [0mFast COCO eval is not built. Falling back to official COCO eval.
[32m[11/09 12:59:09 d2.evaluation.evaluator]: [0mStart inference on 601 batches
[32m[11/09 12:59:11 d2.evaluation.evaluator]: [0mInference done 11/601. Dataloading: 0.0017 s/iter. Inference: 0.1385 s/iter. Eval: 0.0005 s/iter. Total: 0.1406 s/iter. ETA=0:01:22
[32m[11/09 12:59:16 d2.evaluation.evaluator]: [0mInference done 45/601. Dataloading: 0.0027 s/iter. Inference: 0.1456 s/iter. Eval: 0.0005 s/iter. Total: 0.1489 s/iter. ETA=0:01:22
[32m[11/09 12:59:21 d2.evaluation.evaluator]: [0mInference done 79/601. Dataloading: 0.0030 s/iter. Inference: 0.1451 s/iter. Eval: 0.0006 s/iter. Total: 0.1488 s/iter. ETA=0:01:17
[32m[11/09 12:59:26 d2.evaluation.evaluator]: [0mInference done 115/601. Dataloading: 0.0029 s/iter. Inference: 0.1435 s/iter. Eval: 0.0005 s/iter. Total: 0.1470 s/iter. ETA=0:01:11
[32m[11/09 12:59:31 d2.evaluation.evaluator]: [0mInference done 152/601. Dataloading: 0.0029 s/iter. Inference: 0.1417 s/iter. Eval: 0.0005 s/iter. Total: 0.1452 s/iter. ETA=0:01:05
[32m[11/09 12:59:36 d2.evaluation.evaluator]: [0mInference done 189/601. Dataloading: 0.0034 s/iter. Inference: 0.1397 s/iter. Eval: 0.0005 s/iter. Total: 0.1437 s/iter. ETA=0:00:59
[32m[11/09 12:59:41 d2.evaluation.evaluator]: [0mInference done 226/601. Dataloading: 0.0034 s/iter. Inference: 0.1387 s/iter. Eval: 0.0005 s/iter. Total: 0.1427 s/iter. ETA=0:00:53
[32m[11/09 12:59:46 d2.evaluation.evaluator]: [0mInference done 262/601. Dataloading: 0.0034 s/iter. Inference: 0.1382 s/iter. Eval: 0.0005 s/iter. Total: 0.1422 s/iter. ETA=0:00:48
[32m[11/09 12:59:52 d2.evaluation.evaluator]: [0mInference done 297/601. Dataloading: 0.0035 s/iter. Inference: 0.1385 s/iter. Eval: 0.0005 s/iter. Total: 0.1426 s/iter. ETA=0:00:43
[32m[11/09 12:59:57 d2.evaluation.evaluator]: [0mInference done 334/601. Dataloading: 0.0034 s/iter. Inference: 0.1378 s/iter. Eval: 0.0005 s/iter. Total: 0.1419 s/iter. ETA=0:00:37
[32m[11/09 13:00:02 d2.evaluation.evaluator]: [0mInference done 370/601. Dataloading: 0.0034 s/iter. Inference: 0.1377 s/iter. Eval: 0.0005 s/iter. Total: 0.1417 s/iter. ETA=0:00:32
[32m[11/09 13:00:07 d2.evaluation.evaluator]: [0mInference done 405/601. Dataloading: 0.0034 s/iter. Inference: 0.1379 s/iter. Eval: 0.0005 s/iter. Total: 0.1419 s/iter. ETA=0:00:27
[32m[11/09 13:00:12 d2.evaluation.evaluator]: [0mInference done 440/601. Dataloading: 0.0034 s/iter. Inference: 0.1380 s/iter. Eval: 0.0005 s/iter. Total: 0.1421 s/iter. ETA=0:00:22
[32m[11/09 13:00:17 d2.evaluation.evaluator]: [0mInference done 477/601. Dataloading: 0.0034 s/iter. Inference: 0.1377 s/iter. Eval: 0.0005 s/iter. Total: 0.1417 s/iter. ETA=0:00:17
[32m[11/09 13:00:22 d2.evaluation.evaluator]: [0mInference done 515/601. Dataloading: 0.0035 s/iter. Inference: 0.1370 s/iter. Eval: 0.0005 s/iter. Total: 0.1411 s/iter. ETA=0:00:12
[32m[11/09 13:00:27 d2.evaluation.evaluator]: [0mInference done 553/601. Dataloading: 0.0034 s/iter. Inference: 0.1365 s/iter. Eval: 0.0005 s/iter. Total: 0.1404 s/iter. ETA=0:00:06
[32m[11/09 13:00:32 d2.evaluation.evaluator]: [0mInference done 590/601. Dataloading: 0.0033 s/iter. Inference: 0.1364 s/iter. Eval: 0.0005 s/iter. Total: 0.1403 s/iter. ETA=0:00:01
[32m[11/09 13:00:34 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:23.642378 (0.140340 s / iter per device, on 1 devices)
[32m[11/09 13:00:34 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:21 (0.136201 s / iter per device, on 1 devices)
[32m[11/09 13:00:34 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/09 13:00:34 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/inference/coco_instances_results.json
[32m[11/09 13:00:34 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.83s).
Accumulating evaluation results...
DONE (t=0.17s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.466
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.857
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.446
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.440
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.480
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.506
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.453
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.578
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.590
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.543
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.603
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.651
[32m[11/09 13:00:35 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 46.641 | 85.738 | 44.557 | 43.965 | 48.043 | 50.594 |
[32m[11/09 13:00:35 d2.engine.defaults]: [0mEvaluation results for coco_my_val in csv format:
[32m[11/09 13:00:35 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/09 13:00:35 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/09 13:00:35 d2.evaluation.testing]: [0mcopypaste: 46.6409,85.7377,44.5571,43.9651,48.0434,50.5938
[32m[11/09 13:00:35 d2.utils.events]: [0m eta: 1:03:06  iter: 9999  total_loss: 0.3225  loss_cls: 0.107  loss_box_reg: 0.2202  time: 0.5053  data_time: 0.0186  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:00:45 d2.utils.events]: [0m eta: 1:02:59  iter: 10019  total_loss: 0.2993  loss_cls: 0.09277  loss_box_reg: 0.2038  time: 0.5053  data_time: 0.0174  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:00:55 d2.utils.events]: [0m eta: 1:02:52  iter: 10039  total_loss: 0.3448  loss_cls: 0.1278  loss_box_reg: 0.2092  time: 0.5053  data_time: 0.0188  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:01:06 d2.utils.events]: [0m eta: 1:02:42  iter: 10059  total_loss: 0.2707  loss_cls: 0.08587  loss_box_reg: 0.1683  time: 0.5053  data_time: 0.0179  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:01:16 d2.utils.events]: [0m eta: 1:02:32  iter: 10079  total_loss: 0.3368  loss_cls: 0.1048  loss_box_reg: 0.225  time: 0.5053  data_time: 0.0169  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:01:26 d2.utils.events]: [0m eta: 1:02:22  iter: 10099  total_loss: 0.3392  loss_cls: 0.1246  loss_box_reg: 0.2237  time: 0.5053  data_time: 0.0214  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:01:36 d2.utils.events]: [0m eta: 1:02:14  iter: 10119  total_loss: 0.3386  loss_cls: 0.1106  loss_box_reg: 0.2232  time: 0.5053  data_time: 0.0215  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:01:46 d2.utils.events]: [0m eta: 1:02:04  iter: 10139  total_loss: 0.2885  loss_cls: 0.1022  loss_box_reg: 0.2098  time: 0.5053  data_time: 0.0191  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:01:56 d2.utils.events]: [0m eta: 1:01:52  iter: 10159  total_loss: 0.3564  loss_cls: 0.1145  loss_box_reg: 0.2366  time: 0.5053  data_time: 0.0123  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:02:07 d2.utils.events]: [0m eta: 1:01:41  iter: 10179  total_loss: 0.4427  loss_cls: 0.1436  loss_box_reg: 0.2564  time: 0.5053  data_time: 0.0215  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:02:17 d2.utils.events]: [0m eta: 1:01:32  iter: 10199  total_loss: 0.3699  loss_cls: 0.116  loss_box_reg: 0.2418  time: 0.5053  data_time: 0.0139  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:02:27 d2.utils.events]: [0m eta: 1:01:23  iter: 10219  total_loss: 0.3242  loss_cls: 0.09706  loss_box_reg: 0.2278  time: 0.5053  data_time: 0.0253  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:02:37 d2.utils.events]: [0m eta: 1:01:12  iter: 10239  total_loss: 0.3741  loss_cls: 0.123  loss_box_reg: 0.2544  time: 0.5053  data_time: 0.0185  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:02:47 d2.utils.events]: [0m eta: 1:01:03  iter: 10259  total_loss: 0.3441  loss_cls: 0.1146  loss_box_reg: 0.2435  time: 0.5053  data_time: 0.0200  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:02:57 d2.utils.events]: [0m eta: 1:00:56  iter: 10279  total_loss: 0.2281  loss_cls: 0.06512  loss_box_reg: 0.176  time: 0.5053  data_time: 0.0262  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:03:08 d2.utils.events]: [0m eta: 1:00:45  iter: 10299  total_loss: 0.425  loss_cls: 0.1441  loss_box_reg: 0.2538  time: 0.5053  data_time: 0.0221  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:03:18 d2.utils.events]: [0m eta: 1:00:37  iter: 10319  total_loss: 0.3319  loss_cls: 0.1134  loss_box_reg: 0.2066  time: 0.5053  data_time: 0.0146  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:03:28 d2.utils.events]: [0m eta: 1:00:27  iter: 10339  total_loss: 0.3341  loss_cls: 0.1131  loss_box_reg: 0.2169  time: 0.5054  data_time: 0.0235  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:03:39 d2.utils.events]: [0m eta: 1:00:17  iter: 10359  total_loss: 0.3419  loss_cls: 0.1045  loss_box_reg: 0.2285  time: 0.5054  data_time: 0.0126  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:03:49 d2.utils.events]: [0m eta: 1:00:08  iter: 10379  total_loss: 0.324  loss_cls: 0.1083  loss_box_reg: 0.2111  time: 0.5054  data_time: 0.0139  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:03:58 d2.utils.events]: [0m eta: 0:59:56  iter: 10399  total_loss: 0.3284  loss_cls: 0.1033  loss_box_reg: 0.2253  time: 0.5053  data_time: 0.0137  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:04:09 d2.utils.events]: [0m eta: 0:59:45  iter: 10419  total_loss: 0.3362  loss_cls: 0.115  loss_box_reg: 0.224  time: 0.5053  data_time: 0.0164  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:04:19 d2.utils.events]: [0m eta: 0:59:34  iter: 10439  total_loss: 0.274  loss_cls: 0.0981  loss_box_reg: 0.1832  time: 0.5053  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:04:29 d2.utils.events]: [0m eta: 0:59:24  iter: 10459  total_loss: 0.3531  loss_cls: 0.1133  loss_box_reg: 0.2222  time: 0.5053  data_time: 0.0207  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:04:39 d2.utils.events]: [0m eta: 0:59:13  iter: 10479  total_loss: 0.3722  loss_cls: 0.1084  loss_box_reg: 0.2257  time: 0.5053  data_time: 0.0156  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:04:49 d2.utils.events]: [0m eta: 0:59:05  iter: 10499  total_loss: 0.3394  loss_cls: 0.1044  loss_box_reg: 0.2061  time: 0.5053  data_time: 0.0192  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:04:59 d2.utils.events]: [0m eta: 0:58:54  iter: 10519  total_loss: 0.3587  loss_cls: 0.1274  loss_box_reg: 0.226  time: 0.5053  data_time: 0.0122  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:05:10 d2.utils.events]: [0m eta: 0:58:45  iter: 10539  total_loss: 0.3338  loss_cls: 0.1189  loss_box_reg: 0.2208  time: 0.5053  data_time: 0.0173  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:05:20 d2.utils.events]: [0m eta: 0:58:35  iter: 10559  total_loss: 0.3742  loss_cls: 0.1145  loss_box_reg: 0.2509  time: 0.5054  data_time: 0.0248  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:05:30 d2.utils.events]: [0m eta: 0:58:24  iter: 10579  total_loss: 0.309  loss_cls: 0.1239  loss_box_reg: 0.2078  time: 0.5053  data_time: 0.0141  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:05:40 d2.utils.events]: [0m eta: 0:58:13  iter: 10599  total_loss: 0.364  loss_cls: 0.1277  loss_box_reg: 0.2256  time: 0.5053  data_time: 0.0135  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:05:50 d2.utils.events]: [0m eta: 0:58:03  iter: 10619  total_loss: 0.3055  loss_cls: 0.1008  loss_box_reg: 0.2119  time: 0.5053  data_time: 0.0166  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:06:00 d2.utils.events]: [0m eta: 0:57:52  iter: 10639  total_loss: 0.3167  loss_cls: 0.09505  loss_box_reg: 0.2035  time: 0.5054  data_time: 0.0160  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:06:10 d2.utils.events]: [0m eta: 0:57:40  iter: 10659  total_loss: 0.3742  loss_cls: 0.1044  loss_box_reg: 0.241  time: 0.5053  data_time: 0.0149  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:06:20 d2.utils.events]: [0m eta: 0:57:28  iter: 10679  total_loss: 0.4266  loss_cls: 0.1366  loss_box_reg: 0.2667  time: 0.5053  data_time: 0.0147  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:06:31 d2.utils.events]: [0m eta: 0:57:18  iter: 10699  total_loss: 0.3109  loss_cls: 0.1035  loss_box_reg: 0.224  time: 0.5053  data_time: 0.0103  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:06:41 d2.utils.events]: [0m eta: 0:57:07  iter: 10719  total_loss: 0.3041  loss_cls: 0.09393  loss_box_reg: 0.2104  time: 0.5053  data_time: 0.0183  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:06:51 d2.utils.events]: [0m eta: 0:56:57  iter: 10739  total_loss: 0.3069  loss_cls: 0.1092  loss_box_reg: 0.2119  time: 0.5053  data_time: 0.0115  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:07:01 d2.utils.events]: [0m eta: 0:56:46  iter: 10759  total_loss: 0.3572  loss_cls: 0.1288  loss_box_reg: 0.2121  time: 0.5053  data_time: 0.0183  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:07:11 d2.utils.events]: [0m eta: 0:56:33  iter: 10779  total_loss: 0.3313  loss_cls: 0.1128  loss_box_reg: 0.2189  time: 0.5053  data_time: 0.0180  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:07:21 d2.utils.events]: [0m eta: 0:56:19  iter: 10799  total_loss: 0.2333  loss_cls: 0.07071  loss_box_reg: 0.1713  time: 0.5053  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:07:31 d2.utils.events]: [0m eta: 0:56:08  iter: 10819  total_loss: 0.3304  loss_cls: 0.1072  loss_box_reg: 0.2178  time: 0.5053  data_time: 0.0191  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:07:41 d2.utils.events]: [0m eta: 0:55:59  iter: 10839  total_loss: 0.3306  loss_cls: 0.09433  loss_box_reg: 0.2255  time: 0.5053  data_time: 0.0185  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:07:51 d2.utils.events]: [0m eta: 0:55:51  iter: 10859  total_loss: 0.3009  loss_cls: 0.09772  loss_box_reg: 0.2014  time: 0.5053  data_time: 0.0230  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:08:02 d2.utils.events]: [0m eta: 0:55:43  iter: 10879  total_loss: 0.3729  loss_cls: 0.1099  loss_box_reg: 0.2433  time: 0.5053  data_time: 0.0164  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:08:12 d2.utils.events]: [0m eta: 0:55:35  iter: 10899  total_loss: 0.2996  loss_cls: 0.0907  loss_box_reg: 0.1896  time: 0.5053  data_time: 0.0166  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:08:22 d2.utils.events]: [0m eta: 0:55:23  iter: 10919  total_loss: 0.3534  loss_cls: 0.1004  loss_box_reg: 0.2449  time: 0.5053  data_time: 0.0139  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:08:32 d2.utils.events]: [0m eta: 0:55:13  iter: 10939  total_loss: 0.3668  loss_cls: 0.1164  loss_box_reg: 0.2322  time: 0.5053  data_time: 0.0200  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:08:42 d2.utils.events]: [0m eta: 0:55:03  iter: 10959  total_loss: 0.2936  loss_cls: 0.09526  loss_box_reg: 0.1963  time: 0.5053  data_time: 0.0141  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:08:52 d2.utils.events]: [0m eta: 0:54:53  iter: 10979  total_loss: 0.2906  loss_cls: 0.08539  loss_box_reg: 0.2125  time: 0.5053  data_time: 0.0196  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:09:02 d2.utils.events]: [0m eta: 0:54:43  iter: 10999  total_loss: 0.3015  loss_cls: 0.09439  loss_box_reg: 0.2095  time: 0.5053  data_time: 0.0193  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:09:13 d2.utils.events]: [0m eta: 0:54:33  iter: 11019  total_loss: 0.2602  loss_cls: 0.06811  loss_box_reg: 0.1816  time: 0.5053  data_time: 0.0160  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:09:23 d2.utils.events]: [0m eta: 0:54:22  iter: 11039  total_loss: 0.3524  loss_cls: 0.1179  loss_box_reg: 0.2452  time: 0.5053  data_time: 0.0129  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:09:33 d2.utils.events]: [0m eta: 0:54:11  iter: 11059  total_loss: 0.3597  loss_cls: 0.1282  loss_box_reg: 0.2105  time: 0.5053  data_time: 0.0157  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:09:43 d2.utils.events]: [0m eta: 0:54:02  iter: 11079  total_loss: 0.3299  loss_cls: 0.1014  loss_box_reg: 0.2229  time: 0.5053  data_time: 0.0172  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:09:53 d2.utils.events]: [0m eta: 0:53:49  iter: 11099  total_loss: 0.265  loss_cls: 0.07961  loss_box_reg: 0.1952  time: 0.5053  data_time: 0.0133  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:10:03 d2.utils.events]: [0m eta: 0:53:37  iter: 11119  total_loss: 0.3171  loss_cls: 0.1139  loss_box_reg: 0.2157  time: 0.5053  data_time: 0.0162  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:10:13 d2.utils.events]: [0m eta: 0:53:25  iter: 11139  total_loss: 0.264  loss_cls: 0.08541  loss_box_reg: 0.1821  time: 0.5053  data_time: 0.0173  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:10:23 d2.utils.events]: [0m eta: 0:53:16  iter: 11159  total_loss: 0.3134  loss_cls: 0.07883  loss_box_reg: 0.2381  time: 0.5053  data_time: 0.0137  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:10:33 d2.utils.events]: [0m eta: 0:53:05  iter: 11179  total_loss: 0.385  loss_cls: 0.1419  loss_box_reg: 0.2399  time: 0.5053  data_time: 0.0177  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:10:44 d2.utils.events]: [0m eta: 0:52:56  iter: 11199  total_loss: 0.3075  loss_cls: 0.0932  loss_box_reg: 0.2123  time: 0.5053  data_time: 0.0202  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:10:54 d2.utils.events]: [0m eta: 0:52:46  iter: 11219  total_loss: 0.3113  loss_cls: 0.1091  loss_box_reg: 0.2215  time: 0.5053  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:11:04 d2.utils.events]: [0m eta: 0:52:36  iter: 11239  total_loss: 0.3719  loss_cls: 0.1054  loss_box_reg: 0.2395  time: 0.5053  data_time: 0.0202  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:11:14 d2.utils.events]: [0m eta: 0:52:25  iter: 11259  total_loss: 0.3222  loss_cls: 0.09658  loss_box_reg: 0.2184  time: 0.5053  data_time: 0.0094  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:11:24 d2.utils.events]: [0m eta: 0:52:12  iter: 11279  total_loss: 0.3099  loss_cls: 0.08693  loss_box_reg: 0.2306  time: 0.5052  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:11:34 d2.utils.events]: [0m eta: 0:52:01  iter: 11299  total_loss: 0.3371  loss_cls: 0.1128  loss_box_reg: 0.22  time: 0.5052  data_time: 0.0146  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:11:44 d2.utils.events]: [0m eta: 0:51:53  iter: 11319  total_loss: 0.3058  loss_cls: 0.1101  loss_box_reg: 0.2081  time: 0.5053  data_time: 0.0194  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:11:55 d2.utils.events]: [0m eta: 0:51:41  iter: 11339  total_loss: 0.4138  loss_cls: 0.128  loss_box_reg: 0.2739  time: 0.5053  data_time: 0.0178  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:12:05 d2.utils.events]: [0m eta: 0:51:30  iter: 11359  total_loss: 0.3645  loss_cls: 0.1194  loss_box_reg: 0.2345  time: 0.5053  data_time: 0.0136  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:12:15 d2.utils.events]: [0m eta: 0:51:20  iter: 11379  total_loss: 0.3342  loss_cls: 0.1085  loss_box_reg: 0.2261  time: 0.5053  data_time: 0.0206  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:12:25 d2.utils.events]: [0m eta: 0:51:10  iter: 11399  total_loss: 0.3504  loss_cls: 0.1259  loss_box_reg: 0.225  time: 0.5052  data_time: 0.0143  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:12:34 d2.utils.events]: [0m eta: 0:51:02  iter: 11419  total_loss: 0.3453  loss_cls: 0.1184  loss_box_reg: 0.2399  time: 0.5052  data_time: 0.0133  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:12:45 d2.utils.events]: [0m eta: 0:50:52  iter: 11439  total_loss: 0.38  loss_cls: 0.1377  loss_box_reg: 0.2224  time: 0.5052  data_time: 0.0244  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:12:55 d2.utils.events]: [0m eta: 0:50:40  iter: 11459  total_loss: 0.3203  loss_cls: 0.1034  loss_box_reg: 0.2063  time: 0.5052  data_time: 0.0185  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:13:05 d2.utils.events]: [0m eta: 0:50:30  iter: 11479  total_loss: 0.3332  loss_cls: 0.1037  loss_box_reg: 0.2315  time: 0.5052  data_time: 0.0183  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:13:15 d2.utils.events]: [0m eta: 0:50:19  iter: 11499  total_loss: 0.2732  loss_cls: 0.09181  loss_box_reg: 0.1935  time: 0.5052  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:13:25 d2.utils.events]: [0m eta: 0:50:10  iter: 11519  total_loss: 0.3396  loss_cls: 0.1015  loss_box_reg: 0.2231  time: 0.5052  data_time: 0.0139  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:13:35 d2.utils.events]: [0m eta: 0:49:58  iter: 11539  total_loss: 0.3181  loss_cls: 0.09972  loss_box_reg: 0.2294  time: 0.5052  data_time: 0.0161  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:13:45 d2.utils.events]: [0m eta: 0:49:47  iter: 11559  total_loss: 0.3373  loss_cls: 0.1223  loss_box_reg: 0.2171  time: 0.5052  data_time: 0.0127  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:13:55 d2.utils.events]: [0m eta: 0:49:38  iter: 11579  total_loss: 0.4122  loss_cls: 0.1266  loss_box_reg: 0.2609  time: 0.5052  data_time: 0.0287  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:14:05 d2.utils.events]: [0m eta: 0:49:28  iter: 11599  total_loss: 0.2994  loss_cls: 0.1021  loss_box_reg: 0.2132  time: 0.5052  data_time: 0.0197  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:14:15 d2.utils.events]: [0m eta: 0:49:18  iter: 11619  total_loss: 0.3751  loss_cls: 0.1493  loss_box_reg: 0.2536  time: 0.5052  data_time: 0.0137  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:14:26 d2.utils.events]: [0m eta: 0:49:11  iter: 11639  total_loss: 0.3292  loss_cls: 0.1073  loss_box_reg: 0.2191  time: 0.5052  data_time: 0.0215  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:14:36 d2.utils.events]: [0m eta: 0:49:03  iter: 11659  total_loss: 0.4027  loss_cls: 0.1356  loss_box_reg: 0.2575  time: 0.5052  data_time: 0.0165  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:14:46 d2.utils.events]: [0m eta: 0:48:55  iter: 11679  total_loss: 0.3233  loss_cls: 0.1101  loss_box_reg: 0.2071  time: 0.5052  data_time: 0.0241  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:14:57 d2.utils.events]: [0m eta: 0:48:48  iter: 11699  total_loss: 0.3168  loss_cls: 0.1104  loss_box_reg: 0.2006  time: 0.5052  data_time: 0.0224  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:15:07 d2.utils.events]: [0m eta: 0:48:40  iter: 11719  total_loss: 0.3871  loss_cls: 0.1244  loss_box_reg: 0.2427  time: 0.5053  data_time: 0.0177  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:15:17 d2.utils.events]: [0m eta: 0:48:29  iter: 11739  total_loss: 0.3316  loss_cls: 0.1024  loss_box_reg: 0.2207  time: 0.5053  data_time: 0.0160  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:15:28 d2.utils.events]: [0m eta: 0:48:20  iter: 11759  total_loss: 0.3168  loss_cls: 0.1111  loss_box_reg: 0.205  time: 0.5053  data_time: 0.0230  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:15:38 d2.utils.events]: [0m eta: 0:48:11  iter: 11779  total_loss: 0.3166  loss_cls: 0.09447  loss_box_reg: 0.2209  time: 0.5053  data_time: 0.0174  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:15:48 d2.utils.events]: [0m eta: 0:48:02  iter: 11799  total_loss: 0.3082  loss_cls: 0.09584  loss_box_reg: 0.2192  time: 0.5053  data_time: 0.0196  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:15:58 d2.utils.events]: [0m eta: 0:47:54  iter: 11819  total_loss: 0.3096  loss_cls: 0.1146  loss_box_reg: 0.2114  time: 0.5053  data_time: 0.0166  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:16:08 d2.utils.events]: [0m eta: 0:47:44  iter: 11839  total_loss: 0.3448  loss_cls: 0.1323  loss_box_reg: 0.2483  time: 0.5053  data_time: 0.0206  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:16:18 d2.utils.events]: [0m eta: 0:47:33  iter: 11859  total_loss: 0.3466  loss_cls: 0.1228  loss_box_reg: 0.2271  time: 0.5053  data_time: 0.0093  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:16:29 d2.utils.events]: [0m eta: 0:47:24  iter: 11879  total_loss: 0.2868  loss_cls: 0.08678  loss_box_reg: 0.2033  time: 0.5053  data_time: 0.0216  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:16:39 d2.utils.events]: [0m eta: 0:47:14  iter: 11899  total_loss: 0.3452  loss_cls: 0.1292  loss_box_reg: 0.2154  time: 0.5053  data_time: 0.0229  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:16:49 d2.utils.events]: [0m eta: 0:47:05  iter: 11919  total_loss: 0.3284  loss_cls: 0.102  loss_box_reg: 0.2254  time: 0.5053  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:16:59 d2.utils.events]: [0m eta: 0:46:54  iter: 11939  total_loss: 0.3402  loss_cls: 0.1156  loss_box_reg: 0.214  time: 0.5053  data_time: 0.0192  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:17:09 d2.utils.events]: [0m eta: 0:46:45  iter: 11959  total_loss: 0.3118  loss_cls: 0.09748  loss_box_reg: 0.2029  time: 0.5053  data_time: 0.0255  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:17:19 d2.utils.events]: [0m eta: 0:46:33  iter: 11979  total_loss: 0.3911  loss_cls: 0.1217  loss_box_reg: 0.2314  time: 0.5053  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:17:30 d2.utils.events]: [0m eta: 0:46:26  iter: 11999  total_loss: 0.3203  loss_cls: 0.1156  loss_box_reg: 0.2109  time: 0.5053  data_time: 0.0205  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:17:40 d2.utils.events]: [0m eta: 0:46:17  iter: 12019  total_loss: 0.273  loss_cls: 0.08067  loss_box_reg: 0.1869  time: 0.5053  data_time: 0.0199  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:17:50 d2.utils.events]: [0m eta: 0:46:07  iter: 12039  total_loss: 0.3037  loss_cls: 0.09293  loss_box_reg: 0.2114  time: 0.5053  data_time: 0.0206  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:18:00 d2.utils.events]: [0m eta: 0:45:57  iter: 12059  total_loss: 0.2952  loss_cls: 0.1152  loss_box_reg: 0.1929  time: 0.5053  data_time: 0.0162  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:18:10 d2.utils.events]: [0m eta: 0:45:47  iter: 12079  total_loss: 0.2589  loss_cls: 0.07582  loss_box_reg: 0.1801  time: 0.5053  data_time: 0.0157  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:18:21 d2.utils.events]: [0m eta: 0:45:39  iter: 12099  total_loss: 0.3326  loss_cls: 0.1117  loss_box_reg: 0.2084  time: 0.5053  data_time: 0.0214  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:18:31 d2.utils.events]: [0m eta: 0:45:30  iter: 12119  total_loss: 0.3367  loss_cls: 0.1075  loss_box_reg: 0.2136  time: 0.5053  data_time: 0.0207  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:18:41 d2.utils.events]: [0m eta: 0:45:20  iter: 12139  total_loss: 0.3225  loss_cls: 0.0898  loss_box_reg: 0.218  time: 0.5053  data_time: 0.0165  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:18:52 d2.utils.events]: [0m eta: 0:45:11  iter: 12159  total_loss: 0.3062  loss_cls: 0.09253  loss_box_reg: 0.2265  time: 0.5054  data_time: 0.0258  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:19:02 d2.utils.events]: [0m eta: 0:45:01  iter: 12179  total_loss: 0.3431  loss_cls: 0.1143  loss_box_reg: 0.1845  time: 0.5053  data_time: 0.0199  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:19:12 d2.utils.events]: [0m eta: 0:44:51  iter: 12199  total_loss: 0.2549  loss_cls: 0.08594  loss_box_reg: 0.1843  time: 0.5054  data_time: 0.0147  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:19:22 d2.utils.events]: [0m eta: 0:44:41  iter: 12219  total_loss: 0.2884  loss_cls: 0.1  loss_box_reg: 0.2076  time: 0.5054  data_time: 0.0204  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:19:32 d2.utils.events]: [0m eta: 0:44:30  iter: 12239  total_loss: 0.2865  loss_cls: 0.0945  loss_box_reg: 0.1858  time: 0.5054  data_time: 0.0179  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:19:42 d2.utils.events]: [0m eta: 0:44:21  iter: 12259  total_loss: 0.3115  loss_cls: 0.105  loss_box_reg: 0.2089  time: 0.5054  data_time: 0.0178  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:19:53 d2.utils.events]: [0m eta: 0:44:12  iter: 12279  total_loss: 0.3393  loss_cls: 0.1082  loss_box_reg: 0.2098  time: 0.5054  data_time: 0.0250  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:20:03 d2.utils.events]: [0m eta: 0:44:02  iter: 12299  total_loss: 0.3153  loss_cls: 0.086  loss_box_reg: 0.2257  time: 0.5054  data_time: 0.0155  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:20:13 d2.utils.events]: [0m eta: 0:43:50  iter: 12319  total_loss: 0.4581  loss_cls: 0.1553  loss_box_reg: 0.2586  time: 0.5054  data_time: 0.0227  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:20:23 d2.utils.events]: [0m eta: 0:43:40  iter: 12339  total_loss: 0.3384  loss_cls: 0.1169  loss_box_reg: 0.2528  time: 0.5054  data_time: 0.0139  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:20:33 d2.utils.events]: [0m eta: 0:43:30  iter: 12359  total_loss: 0.3415  loss_cls: 0.09414  loss_box_reg: 0.2274  time: 0.5054  data_time: 0.0229  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:20:44 d2.utils.events]: [0m eta: 0:43:21  iter: 12379  total_loss: 0.2832  loss_cls: 0.08289  loss_box_reg: 0.2081  time: 0.5054  data_time: 0.0153  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:20:54 d2.utils.events]: [0m eta: 0:43:11  iter: 12399  total_loss: 0.3332  loss_cls: 0.1133  loss_box_reg: 0.2207  time: 0.5054  data_time: 0.0166  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:21:04 d2.utils.events]: [0m eta: 0:43:00  iter: 12419  total_loss: 0.2914  loss_cls: 0.1037  loss_box_reg: 0.1989  time: 0.5054  data_time: 0.0157  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:21:14 d2.utils.events]: [0m eta: 0:42:49  iter: 12439  total_loss: 0.2729  loss_cls: 0.08662  loss_box_reg: 0.1888  time: 0.5054  data_time: 0.0140  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:21:24 d2.utils.events]: [0m eta: 0:42:40  iter: 12459  total_loss: 0.3111  loss_cls: 0.106  loss_box_reg: 0.2148  time: 0.5054  data_time: 0.0145  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:21:35 d2.utils.events]: [0m eta: 0:42:32  iter: 12479  total_loss: 0.3557  loss_cls: 0.1069  loss_box_reg: 0.2463  time: 0.5054  data_time: 0.0216  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:21:42 fvcore.common.checkpoint]: [0mSaving checkpoint to ./output/model_0012494.pth
[32m[11/09 13:21:46 d2.data.datasets.coco]: [0mLoaded 601 images in COCO format from /media/work/data/zbt/detectron2/datasets/COCO/annotations/val.json
[32m[11/09 13:21:46 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[32m[11/09 13:21:46 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[32m[11/09 13:21:46 d2.data.common]: [0mSerializing 601 elements to byte tensors and concatenating them all ...
[32m[11/09 13:21:46 d2.data.common]: [0mSerialized dataset takes 0.16 MiB
[32m[11/09 13:21:46 d2.evaluation.coco_evaluation]: [0mFast COCO eval is not built. Falling back to official COCO eval.
[32m[11/09 13:21:46 d2.evaluation.evaluator]: [0mStart inference on 601 batches
[32m[11/09 13:21:48 d2.evaluation.evaluator]: [0mInference done 11/601. Dataloading: 0.0056 s/iter. Inference: 0.1457 s/iter. Eval: 0.0005 s/iter. Total: 0.1518 s/iter. ETA=0:01:29
[32m[11/09 13:21:53 d2.evaluation.evaluator]: [0mInference done 48/601. Dataloading: 0.0054 s/iter. Inference: 0.1335 s/iter. Eval: 0.0005 s/iter. Total: 0.1394 s/iter. ETA=0:01:17
[32m[11/09 13:21:58 d2.evaluation.evaluator]: [0mInference done 84/601. Dataloading: 0.0040 s/iter. Inference: 0.1359 s/iter. Eval: 0.0005 s/iter. Total: 0.1405 s/iter. ETA=0:01:12
[32m[11/09 13:22:04 d2.evaluation.evaluator]: [0mInference done 119/601. Dataloading: 0.0040 s/iter. Inference: 0.1368 s/iter. Eval: 0.0006 s/iter. Total: 0.1414 s/iter. ETA=0:01:08
[32m[11/09 13:22:09 d2.evaluation.evaluator]: [0mInference done 153/601. Dataloading: 0.0040 s/iter. Inference: 0.1386 s/iter. Eval: 0.0005 s/iter. Total: 0.1432 s/iter. ETA=0:01:04
[32m[11/09 13:22:14 d2.evaluation.evaluator]: [0mInference done 189/601. Dataloading: 0.0041 s/iter. Inference: 0.1381 s/iter. Eval: 0.0005 s/iter. Total: 0.1428 s/iter. ETA=0:00:58
[32m[11/09 13:22:19 d2.evaluation.evaluator]: [0mInference done 226/601. Dataloading: 0.0039 s/iter. Inference: 0.1371 s/iter. Eval: 0.0005 s/iter. Total: 0.1416 s/iter. ETA=0:00:53
[32m[11/09 13:22:24 d2.evaluation.evaluator]: [0mInference done 260/601. Dataloading: 0.0038 s/iter. Inference: 0.1384 s/iter. Eval: 0.0005 s/iter. Total: 0.1428 s/iter. ETA=0:00:48
[32m[11/09 13:22:29 d2.evaluation.evaluator]: [0mInference done 295/601. Dataloading: 0.0037 s/iter. Inference: 0.1389 s/iter. Eval: 0.0005 s/iter. Total: 0.1432 s/iter. ETA=0:00:43
[32m[11/09 13:22:34 d2.evaluation.evaluator]: [0mInference done 328/601. Dataloading: 0.0036 s/iter. Inference: 0.1398 s/iter. Eval: 0.0005 s/iter. Total: 0.1441 s/iter. ETA=0:00:39
[32m[11/09 13:22:39 d2.evaluation.evaluator]: [0mInference done 362/601. Dataloading: 0.0035 s/iter. Inference: 0.1403 s/iter. Eval: 0.0005 s/iter. Total: 0.1445 s/iter. ETA=0:00:34
[32m[11/09 13:22:44 d2.evaluation.evaluator]: [0mInference done 395/601. Dataloading: 0.0037 s/iter. Inference: 0.1409 s/iter. Eval: 0.0005 s/iter. Total: 0.1452 s/iter. ETA=0:00:29
[32m[11/09 13:22:49 d2.evaluation.evaluator]: [0mInference done 430/601. Dataloading: 0.0037 s/iter. Inference: 0.1409 s/iter. Eval: 0.0005 s/iter. Total: 0.1452 s/iter. ETA=0:00:24
[32m[11/09 13:22:54 d2.evaluation.evaluator]: [0mInference done 466/601. Dataloading: 0.0037 s/iter. Inference: 0.1407 s/iter. Eval: 0.0005 s/iter. Total: 0.1450 s/iter. ETA=0:00:19
[32m[11/09 13:22:59 d2.evaluation.evaluator]: [0mInference done 500/601. Dataloading: 0.0038 s/iter. Inference: 0.1409 s/iter. Eval: 0.0005 s/iter. Total: 0.1453 s/iter. ETA=0:00:14
[32m[11/09 13:23:04 d2.evaluation.evaluator]: [0mInference done 535/601. Dataloading: 0.0037 s/iter. Inference: 0.1409 s/iter. Eval: 0.0005 s/iter. Total: 0.1453 s/iter. ETA=0:00:09
[32m[11/09 13:23:09 d2.evaluation.evaluator]: [0mInference done 570/601. Dataloading: 0.0037 s/iter. Inference: 0.1409 s/iter. Eval: 0.0005 s/iter. Total: 0.1452 s/iter. ETA=0:00:04
[32m[11/09 13:23:14 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:26.648460 (0.145383 s / iter per device, on 1 devices)
[32m[11/09 13:23:14 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:23 (0.140734 s / iter per device, on 1 devices)
[32m[11/09 13:23:14 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/09 13:23:14 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/inference/coco_instances_results.json
[32m[11/09 13:23:14 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.84s).
Accumulating evaluation results...
DONE (t=0.17s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.460
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.856
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.440
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.431
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.478
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.485
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.444
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.567
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.577
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.524
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.593
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.637
[32m[11/09 13:23:15 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 46.029 | 85.584 | 43.963 | 43.051 | 47.769 | 48.522 |
[32m[11/09 13:23:15 d2.engine.defaults]: [0mEvaluation results for coco_my_val in csv format:
[32m[11/09 13:23:15 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/09 13:23:15 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/09 13:23:15 d2.evaluation.testing]: [0mcopypaste: 46.0287,85.5838,43.9626,43.0509,47.7686,48.5219
[32m[11/09 13:23:15 d2.utils.events]: [0m eta: 0:42:22  iter: 12499  total_loss: 0.3308  loss_cls: 0.08864  loss_box_reg: 0.2167  time: 0.5054  data_time: 0.0167  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:23:25 d2.utils.events]: [0m eta: 0:42:12  iter: 12519  total_loss: 0.3352  loss_cls: 0.1012  loss_box_reg: 0.2313  time: 0.5054  data_time: 0.0174  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:23:35 d2.utils.events]: [0m eta: 0:42:01  iter: 12539  total_loss: 0.3311  loss_cls: 0.1082  loss_box_reg: 0.2342  time: 0.5054  data_time: 0.0184  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:23:46 d2.utils.events]: [0m eta: 0:41:52  iter: 12559  total_loss: 0.3456  loss_cls: 0.1071  loss_box_reg: 0.2294  time: 0.5054  data_time: 0.0121  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:23:56 d2.utils.events]: [0m eta: 0:41:41  iter: 12579  total_loss: 0.2853  loss_cls: 0.09574  loss_box_reg: 0.2083  time: 0.5054  data_time: 0.0153  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:24:06 d2.utils.events]: [0m eta: 0:41:33  iter: 12599  total_loss: 0.4546  loss_cls: 0.1423  loss_box_reg: 0.2664  time: 0.5055  data_time: 0.0251  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:24:16 d2.utils.events]: [0m eta: 0:41:23  iter: 12619  total_loss: 0.3417  loss_cls: 0.09484  loss_box_reg: 0.2317  time: 0.5055  data_time: 0.0168  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:24:27 d2.utils.events]: [0m eta: 0:41:11  iter: 12639  total_loss: 0.3463  loss_cls: 0.1115  loss_box_reg: 0.2399  time: 0.5055  data_time: 0.0141  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:24:37 d2.utils.events]: [0m eta: 0:41:00  iter: 12659  total_loss: 0.3306  loss_cls: 0.09196  loss_box_reg: 0.2087  time: 0.5055  data_time: 0.0217  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:24:47 d2.utils.events]: [0m eta: 0:40:48  iter: 12679  total_loss: 0.3187  loss_cls: 0.1187  loss_box_reg: 0.2179  time: 0.5055  data_time: 0.0241  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:24:57 d2.utils.events]: [0m eta: 0:40:35  iter: 12699  total_loss: 0.3469  loss_cls: 0.1038  loss_box_reg: 0.2205  time: 0.5055  data_time: 0.0131  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:25:07 d2.utils.events]: [0m eta: 0:40:24  iter: 12719  total_loss: 0.3278  loss_cls: 0.1101  loss_box_reg: 0.211  time: 0.5055  data_time: 0.0133  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:25:18 d2.utils.events]: [0m eta: 0:40:15  iter: 12739  total_loss: 0.2723  loss_cls: 0.09143  loss_box_reg: 0.1891  time: 0.5055  data_time: 0.0186  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:25:28 d2.utils.events]: [0m eta: 0:40:04  iter: 12759  total_loss: 0.3577  loss_cls: 0.1172  loss_box_reg: 0.2316  time: 0.5055  data_time: 0.0146  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:25:38 d2.utils.events]: [0m eta: 0:39:55  iter: 12779  total_loss: 0.3738  loss_cls: 0.1226  loss_box_reg: 0.2322  time: 0.5055  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:25:48 d2.utils.events]: [0m eta: 0:39:44  iter: 12799  total_loss: 0.3081  loss_cls: 0.1026  loss_box_reg: 0.208  time: 0.5055  data_time: 0.0129  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:25:58 d2.utils.events]: [0m eta: 0:39:33  iter: 12819  total_loss: 0.3464  loss_cls: 0.1203  loss_box_reg: 0.2144  time: 0.5055  data_time: 0.0128  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:26:09 d2.utils.events]: [0m eta: 0:39:23  iter: 12839  total_loss: 0.2971  loss_cls: 0.09614  loss_box_reg: 0.2027  time: 0.5055  data_time: 0.0171  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:26:19 d2.utils.events]: [0m eta: 0:39:14  iter: 12859  total_loss: 0.3593  loss_cls: 0.119  loss_box_reg: 0.236  time: 0.5055  data_time: 0.0169  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:26:29 d2.utils.events]: [0m eta: 0:39:04  iter: 12879  total_loss: 0.322  loss_cls: 0.1034  loss_box_reg: 0.2266  time: 0.5055  data_time: 0.0182  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:26:40 d2.utils.events]: [0m eta: 0:38:54  iter: 12899  total_loss: 0.3542  loss_cls: 0.1279  loss_box_reg: 0.2214  time: 0.5056  data_time: 0.0131  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:26:50 d2.utils.events]: [0m eta: 0:38:44  iter: 12919  total_loss: 0.3722  loss_cls: 0.1188  loss_box_reg: 0.239  time: 0.5055  data_time: 0.0150  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:27:00 d2.utils.events]: [0m eta: 0:38:34  iter: 12939  total_loss: 0.2939  loss_cls: 0.09378  loss_box_reg: 0.1994  time: 0.5056  data_time: 0.0141  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:27:10 d2.utils.events]: [0m eta: 0:38:23  iter: 12959  total_loss: 0.3536  loss_cls: 0.1218  loss_box_reg: 0.2359  time: 0.5056  data_time: 0.0118  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:27:20 d2.utils.events]: [0m eta: 0:38:13  iter: 12979  total_loss: 0.3284  loss_cls: 0.1129  loss_box_reg: 0.206  time: 0.5056  data_time: 0.0165  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:27:30 d2.utils.events]: [0m eta: 0:38:02  iter: 12999  total_loss: 0.3325  loss_cls: 0.1056  loss_box_reg: 0.2284  time: 0.5056  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:27:40 d2.utils.events]: [0m eta: 0:37:52  iter: 13019  total_loss: 0.2791  loss_cls: 0.09128  loss_box_reg: 0.204  time: 0.5055  data_time: 0.0129  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:27:51 d2.utils.events]: [0m eta: 0:37:42  iter: 13039  total_loss: 0.3383  loss_cls: 0.1048  loss_box_reg: 0.2228  time: 0.5056  data_time: 0.0190  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:28:01 d2.utils.events]: [0m eta: 0:37:33  iter: 13059  total_loss: 0.2908  loss_cls: 0.08122  loss_box_reg: 0.1793  time: 0.5056  data_time: 0.0206  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:28:12 d2.utils.events]: [0m eta: 0:37:23  iter: 13079  total_loss: 0.3609  loss_cls: 0.1394  loss_box_reg: 0.2363  time: 0.5056  data_time: 0.0171  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:28:22 d2.utils.events]: [0m eta: 0:37:13  iter: 13099  total_loss: 0.297  loss_cls: 0.09702  loss_box_reg: 0.2137  time: 0.5056  data_time: 0.0229  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:28:33 d2.utils.events]: [0m eta: 0:37:03  iter: 13119  total_loss: 0.3191  loss_cls: 0.09786  loss_box_reg: 0.2184  time: 0.5057  data_time: 0.0138  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:28:43 d2.utils.events]: [0m eta: 0:36:53  iter: 13139  total_loss: 0.3695  loss_cls: 0.1165  loss_box_reg: 0.2432  time: 0.5057  data_time: 0.0161  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:28:53 d2.utils.events]: [0m eta: 0:36:42  iter: 13159  total_loss: 0.34  loss_cls: 0.1169  loss_box_reg: 0.2252  time: 0.5057  data_time: 0.0139  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:29:03 d2.utils.events]: [0m eta: 0:36:32  iter: 13179  total_loss: 0.2321  loss_cls: 0.07444  loss_box_reg: 0.1634  time: 0.5056  data_time: 0.0133  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:29:14 d2.utils.events]: [0m eta: 0:36:23  iter: 13199  total_loss: 0.2849  loss_cls: 0.1051  loss_box_reg: 0.198  time: 0.5057  data_time: 0.0215  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:29:24 d2.utils.events]: [0m eta: 0:36:13  iter: 13219  total_loss: 0.3298  loss_cls: 0.1206  loss_box_reg: 0.2097  time: 0.5057  data_time: 0.0206  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:29:34 d2.utils.events]: [0m eta: 0:36:03  iter: 13239  total_loss: 0.345  loss_cls: 0.1212  loss_box_reg: 0.2088  time: 0.5057  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:29:44 d2.utils.events]: [0m eta: 0:35:52  iter: 13259  total_loss: 0.3584  loss_cls: 0.1066  loss_box_reg: 0.2412  time: 0.5057  data_time: 0.0134  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:29:55 d2.utils.events]: [0m eta: 0:35:44  iter: 13279  total_loss: 0.3074  loss_cls: 0.08861  loss_box_reg: 0.2157  time: 0.5057  data_time: 0.0285  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:30:05 d2.utils.events]: [0m eta: 0:35:36  iter: 13299  total_loss: 0.2821  loss_cls: 0.09893  loss_box_reg: 0.1982  time: 0.5057  data_time: 0.0153  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:30:15 d2.utils.events]: [0m eta: 0:35:27  iter: 13319  total_loss: 0.3124  loss_cls: 0.1007  loss_box_reg: 0.2096  time: 0.5058  data_time: 0.0290  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:30:26 d2.utils.events]: [0m eta: 0:35:18  iter: 13339  total_loss: 0.3449  loss_cls: 0.1008  loss_box_reg: 0.2408  time: 0.5058  data_time: 0.0174  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:30:36 d2.utils.events]: [0m eta: 0:35:08  iter: 13359  total_loss: 0.3224  loss_cls: 0.0878  loss_box_reg: 0.2012  time: 0.5058  data_time: 0.0192  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:30:47 d2.utils.events]: [0m eta: 0:34:59  iter: 13379  total_loss: 0.2812  loss_cls: 0.07951  loss_box_reg: 0.1984  time: 0.5058  data_time: 0.0205  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:30:57 d2.utils.events]: [0m eta: 0:34:50  iter: 13399  total_loss: 0.3197  loss_cls: 0.1156  loss_box_reg: 0.2166  time: 0.5058  data_time: 0.0182  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:31:08 d2.utils.events]: [0m eta: 0:34:42  iter: 13419  total_loss: 0.2776  loss_cls: 0.09478  loss_box_reg: 0.1883  time: 0.5059  data_time: 0.0263  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:31:18 d2.utils.events]: [0m eta: 0:34:33  iter: 13439  total_loss: 0.3239  loss_cls: 0.112  loss_box_reg: 0.2169  time: 0.5059  data_time: 0.0172  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:31:28 d2.utils.events]: [0m eta: 0:34:23  iter: 13459  total_loss: 0.2881  loss_cls: 0.09004  loss_box_reg: 0.1986  time: 0.5059  data_time: 0.0204  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:31:39 d2.utils.events]: [0m eta: 0:34:13  iter: 13479  total_loss: 0.3011  loss_cls: 0.1082  loss_box_reg: 0.1961  time: 0.5059  data_time: 0.0188  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:31:49 d2.utils.events]: [0m eta: 0:34:01  iter: 13499  total_loss: 0.3321  loss_cls: 0.09657  loss_box_reg: 0.2366  time: 0.5059  data_time: 0.0104  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:31:59 d2.utils.events]: [0m eta: 0:33:52  iter: 13519  total_loss: 0.2959  loss_cls: 0.1004  loss_box_reg: 0.1819  time: 0.5059  data_time: 0.0183  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:32:09 d2.utils.events]: [0m eta: 0:33:42  iter: 13539  total_loss: 0.3167  loss_cls: 0.1033  loss_box_reg: 0.2351  time: 0.5059  data_time: 0.0131  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:32:19 d2.utils.events]: [0m eta: 0:33:31  iter: 13559  total_loss: 0.3233  loss_cls: 0.1097  loss_box_reg: 0.2158  time: 0.5059  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:32:29 d2.utils.events]: [0m eta: 0:33:21  iter: 13579  total_loss: 0.3326  loss_cls: 0.1123  loss_box_reg: 0.2226  time: 0.5059  data_time: 0.0109  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:32:39 d2.utils.events]: [0m eta: 0:33:09  iter: 13599  total_loss: 0.3842  loss_cls: 0.1439  loss_box_reg: 0.2328  time: 0.5059  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:32:50 d2.utils.events]: [0m eta: 0:33:00  iter: 13619  total_loss: 0.3146  loss_cls: 0.09153  loss_box_reg: 0.2112  time: 0.5059  data_time: 0.0165  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:33:00 d2.utils.events]: [0m eta: 0:32:51  iter: 13639  total_loss: 0.3489  loss_cls: 0.1329  loss_box_reg: 0.2229  time: 0.5059  data_time: 0.0173  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:33:10 d2.utils.events]: [0m eta: 0:32:41  iter: 13659  total_loss: 0.296  loss_cls: 0.09399  loss_box_reg: 0.201  time: 0.5059  data_time: 0.0172  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:33:20 d2.utils.events]: [0m eta: 0:32:31  iter: 13679  total_loss: 0.2665  loss_cls: 0.1008  loss_box_reg: 0.2005  time: 0.5059  data_time: 0.0204  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:33:31 d2.utils.events]: [0m eta: 0:32:22  iter: 13699  total_loss: 0.2325  loss_cls: 0.06034  loss_box_reg: 0.1847  time: 0.5059  data_time: 0.0185  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:33:42 d2.utils.events]: [0m eta: 0:32:14  iter: 13719  total_loss: 0.2708  loss_cls: 0.08746  loss_box_reg: 0.1903  time: 0.5060  data_time: 0.0132  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:33:52 d2.utils.events]: [0m eta: 0:32:03  iter: 13739  total_loss: 0.2919  loss_cls: 0.09001  loss_box_reg: 0.2069  time: 0.5060  data_time: 0.0206  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:34:02 d2.utils.events]: [0m eta: 0:31:54  iter: 13759  total_loss: 0.3698  loss_cls: 0.1013  loss_box_reg: 0.2282  time: 0.5060  data_time: 0.0118  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:34:12 d2.utils.events]: [0m eta: 0:31:43  iter: 13779  total_loss: 0.3142  loss_cls: 0.1091  loss_box_reg: 0.2049  time: 0.5060  data_time: 0.0172  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:34:22 d2.utils.events]: [0m eta: 0:31:33  iter: 13799  total_loss: 0.3607  loss_cls: 0.1251  loss_box_reg: 0.2274  time: 0.5060  data_time: 0.0188  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:34:33 d2.utils.events]: [0m eta: 0:31:23  iter: 13819  total_loss: 0.3069  loss_cls: 0.09565  loss_box_reg: 0.2123  time: 0.5060  data_time: 0.0197  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:34:43 d2.utils.events]: [0m eta: 0:31:12  iter: 13839  total_loss: 0.3162  loss_cls: 0.09946  loss_box_reg: 0.225  time: 0.5060  data_time: 0.0176  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:34:53 d2.utils.events]: [0m eta: 0:31:03  iter: 13859  total_loss: 0.3167  loss_cls: 0.09081  loss_box_reg: 0.2237  time: 0.5060  data_time: 0.0135  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:35:03 d2.utils.events]: [0m eta: 0:30:52  iter: 13879  total_loss: 0.3106  loss_cls: 0.1094  loss_box_reg: 0.2113  time: 0.5060  data_time: 0.0163  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:35:14 d2.utils.events]: [0m eta: 0:30:42  iter: 13899  total_loss: 0.313  loss_cls: 0.102  loss_box_reg: 0.2218  time: 0.5060  data_time: 0.0186  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:35:24 d2.utils.events]: [0m eta: 0:30:33  iter: 13919  total_loss: 0.3511  loss_cls: 0.1362  loss_box_reg: 0.2284  time: 0.5060  data_time: 0.0210  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:35:34 d2.utils.events]: [0m eta: 0:30:23  iter: 13939  total_loss: 0.3109  loss_cls: 0.1115  loss_box_reg: 0.204  time: 0.5060  data_time: 0.0207  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:35:45 d2.utils.events]: [0m eta: 0:30:14  iter: 13959  total_loss: 0.2821  loss_cls: 0.09077  loss_box_reg: 0.1884  time: 0.5061  data_time: 0.0213  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:35:55 d2.utils.events]: [0m eta: 0:30:05  iter: 13979  total_loss: 0.33  loss_cls: 0.09144  loss_box_reg: 0.2189  time: 0.5061  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:36:06 d2.utils.events]: [0m eta: 0:29:56  iter: 13999  total_loss: 0.3268  loss_cls: 0.1122  loss_box_reg: 0.2176  time: 0.5061  data_time: 0.0294  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:36:16 d2.utils.events]: [0m eta: 0:29:46  iter: 14019  total_loss: 0.4171  loss_cls: 0.166  loss_box_reg: 0.2515  time: 0.5061  data_time: 0.0222  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:36:26 d2.utils.events]: [0m eta: 0:29:35  iter: 14039  total_loss: 0.3278  loss_cls: 0.09901  loss_box_reg: 0.2135  time: 0.5061  data_time: 0.0130  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:36:36 d2.utils.events]: [0m eta: 0:29:24  iter: 14059  total_loss: 0.3089  loss_cls: 0.09011  loss_box_reg: 0.2205  time: 0.5061  data_time: 0.0154  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:36:46 d2.utils.events]: [0m eta: 0:29:12  iter: 14079  total_loss: 0.3161  loss_cls: 0.118  loss_box_reg: 0.2013  time: 0.5061  data_time: 0.0163  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:36:56 d2.utils.events]: [0m eta: 0:29:01  iter: 14099  total_loss: 0.3347  loss_cls: 0.1105  loss_box_reg: 0.2252  time: 0.5061  data_time: 0.0163  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:37:06 d2.utils.events]: [0m eta: 0:28:50  iter: 14119  total_loss: 0.2843  loss_cls: 0.09453  loss_box_reg: 0.1837  time: 0.5061  data_time: 0.0207  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:37:16 d2.utils.events]: [0m eta: 0:28:40  iter: 14139  total_loss: 0.355  loss_cls: 0.1219  loss_box_reg: 0.2283  time: 0.5061  data_time: 0.0160  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:37:26 d2.utils.events]: [0m eta: 0:28:29  iter: 14159  total_loss: 0.3444  loss_cls: 0.09832  loss_box_reg: 0.2406  time: 0.5061  data_time: 0.0134  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:37:37 d2.utils.events]: [0m eta: 0:28:20  iter: 14179  total_loss: 0.3234  loss_cls: 0.1007  loss_box_reg: 0.2217  time: 0.5061  data_time: 0.0167  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:37:47 d2.utils.events]: [0m eta: 0:28:08  iter: 14199  total_loss: 0.2913  loss_cls: 0.08499  loss_box_reg: 0.1937  time: 0.5061  data_time: 0.0140  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:37:57 d2.utils.events]: [0m eta: 0:27:58  iter: 14219  total_loss: 0.2902  loss_cls: 0.09941  loss_box_reg: 0.2094  time: 0.5061  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:38:07 d2.utils.events]: [0m eta: 0:27:48  iter: 14239  total_loss: 0.3273  loss_cls: 0.1009  loss_box_reg: 0.2118  time: 0.5061  data_time: 0.0165  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:38:17 d2.utils.events]: [0m eta: 0:27:38  iter: 14259  total_loss: 0.3298  loss_cls: 0.1262  loss_box_reg: 0.2358  time: 0.5061  data_time: 0.0160  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:38:28 d2.utils.events]: [0m eta: 0:27:27  iter: 14279  total_loss: 0.3274  loss_cls: 0.1048  loss_box_reg: 0.2176  time: 0.5061  data_time: 0.0177  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:38:38 d2.utils.events]: [0m eta: 0:27:17  iter: 14299  total_loss: 0.2848  loss_cls: 0.07337  loss_box_reg: 0.2098  time: 0.5061  data_time: 0.0145  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:38:48 d2.utils.events]: [0m eta: 0:27:04  iter: 14319  total_loss: 0.346  loss_cls: 0.117  loss_box_reg: 0.2351  time: 0.5061  data_time: 0.0175  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:38:58 d2.utils.events]: [0m eta: 0:26:54  iter: 14339  total_loss: 0.3025  loss_cls: 0.09299  loss_box_reg: 0.2143  time: 0.5061  data_time: 0.0139  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:39:08 d2.utils.events]: [0m eta: 0:26:44  iter: 14359  total_loss: 0.2905  loss_cls: 0.083  loss_box_reg: 0.2088  time: 0.5061  data_time: 0.0233  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:39:19 d2.utils.events]: [0m eta: 0:26:33  iter: 14379  total_loss: 0.3076  loss_cls: 0.07963  loss_box_reg: 0.2053  time: 0.5061  data_time: 0.0198  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:39:29 d2.utils.events]: [0m eta: 0:26:23  iter: 14399  total_loss: 0.3874  loss_cls: 0.1353  loss_box_reg: 0.2504  time: 0.5061  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:39:39 d2.utils.events]: [0m eta: 0:26:10  iter: 14419  total_loss: 0.3151  loss_cls: 0.1013  loss_box_reg: 0.2246  time: 0.5061  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:39:49 d2.utils.events]: [0m eta: 0:26:00  iter: 14439  total_loss: 0.2817  loss_cls: 0.08124  loss_box_reg: 0.2007  time: 0.5061  data_time: 0.0147  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:40:00 d2.utils.events]: [0m eta: 0:25:49  iter: 14459  total_loss: 0.3776  loss_cls: 0.1447  loss_box_reg: 0.2407  time: 0.5061  data_time: 0.0155  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:40:10 d2.utils.events]: [0m eta: 0:25:39  iter: 14479  total_loss: 0.2879  loss_cls: 0.08121  loss_box_reg: 0.2073  time: 0.5061  data_time: 0.0218  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:40:21 d2.utils.events]: [0m eta: 0:25:30  iter: 14499  total_loss: 0.3468  loss_cls: 0.09682  loss_box_reg: 0.215  time: 0.5062  data_time: 0.0269  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:40:31 d2.utils.events]: [0m eta: 0:25:21  iter: 14519  total_loss: 0.3244  loss_cls: 0.09563  loss_box_reg: 0.2356  time: 0.5062  data_time: 0.0219  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:40:42 d2.utils.events]: [0m eta: 0:25:12  iter: 14539  total_loss: 0.306  loss_cls: 0.08865  loss_box_reg: 0.216  time: 0.5062  data_time: 0.0304  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:40:52 d2.utils.events]: [0m eta: 0:25:03  iter: 14559  total_loss: 0.2911  loss_cls: 0.0878  loss_box_reg: 0.203  time: 0.5062  data_time: 0.0215  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:41:03 d2.utils.events]: [0m eta: 0:24:54  iter: 14579  total_loss: 0.2894  loss_cls: 0.07736  loss_box_reg: 0.2009  time: 0.5063  data_time: 0.0175  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:41:13 d2.utils.events]: [0m eta: 0:24:45  iter: 14599  total_loss: 0.3287  loss_cls: 0.1092  loss_box_reg: 0.2263  time: 0.5063  data_time: 0.0280  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:41:24 d2.utils.events]: [0m eta: 0:24:34  iter: 14619  total_loss: 0.3772  loss_cls: 0.1154  loss_box_reg: 0.2677  time: 0.5063  data_time: 0.0271  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:41:34 d2.utils.events]: [0m eta: 0:24:24  iter: 14639  total_loss: 0.3018  loss_cls: 0.09994  loss_box_reg: 0.2079  time: 0.5063  data_time: 0.0177  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:41:45 d2.utils.events]: [0m eta: 0:24:14  iter: 14659  total_loss: 0.3387  loss_cls: 0.1036  loss_box_reg: 0.2273  time: 0.5063  data_time: 0.0186  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:41:55 d2.utils.events]: [0m eta: 0:24:04  iter: 14679  total_loss: 0.2874  loss_cls: 0.07751  loss_box_reg: 0.2091  time: 0.5064  data_time: 0.0118  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:42:05 d2.utils.events]: [0m eta: 0:23:53  iter: 14699  total_loss: 0.2504  loss_cls: 0.0825  loss_box_reg: 0.1851  time: 0.5064  data_time: 0.0153  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:42:15 d2.utils.events]: [0m eta: 0:23:42  iter: 14719  total_loss: 0.3884  loss_cls: 0.1168  loss_box_reg: 0.2458  time: 0.5064  data_time: 0.0189  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:42:25 d2.utils.events]: [0m eta: 0:23:31  iter: 14739  total_loss: 0.2842  loss_cls: 0.087  loss_box_reg: 0.1926  time: 0.5063  data_time: 0.0126  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:42:35 d2.utils.events]: [0m eta: 0:23:19  iter: 14759  total_loss: 0.3292  loss_cls: 0.1079  loss_box_reg: 0.2171  time: 0.5063  data_time: 0.0109  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:42:45 d2.utils.events]: [0m eta: 0:23:09  iter: 14779  total_loss: 0.2845  loss_cls: 0.1022  loss_box_reg: 0.1953  time: 0.5063  data_time: 0.0210  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:42:56 d2.utils.events]: [0m eta: 0:22:59  iter: 14799  total_loss: 0.2588  loss_cls: 0.0673  loss_box_reg: 0.1904  time: 0.5063  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:43:05 d2.utils.events]: [0m eta: 0:22:49  iter: 14819  total_loss: 0.3244  loss_cls: 0.1039  loss_box_reg: 0.2254  time: 0.5063  data_time: 0.0141  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:43:15 d2.utils.events]: [0m eta: 0:22:38  iter: 14839  total_loss: 0.2957  loss_cls: 0.07641  loss_box_reg: 0.2031  time: 0.5063  data_time: 0.0152  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:43:25 d2.utils.events]: [0m eta: 0:22:26  iter: 14859  total_loss: 0.3485  loss_cls: 0.1089  loss_box_reg: 0.2491  time: 0.5063  data_time: 0.0119  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:43:35 d2.utils.events]: [0m eta: 0:22:15  iter: 14879  total_loss: 0.2773  loss_cls: 0.0851  loss_box_reg: 0.2099  time: 0.5063  data_time: 0.0191  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:43:45 d2.utils.events]: [0m eta: 0:22:04  iter: 14899  total_loss: 0.2696  loss_cls: 0.1032  loss_box_reg: 0.18  time: 0.5063  data_time: 0.0185  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:43:55 d2.utils.events]: [0m eta: 0:21:53  iter: 14919  total_loss: 0.3619  loss_cls: 0.1239  loss_box_reg: 0.242  time: 0.5063  data_time: 0.0201  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:44:06 d2.utils.events]: [0m eta: 0:21:43  iter: 14939  total_loss: 0.2815  loss_cls: 0.07883  loss_box_reg: 0.2016  time: 0.5063  data_time: 0.0165  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:44:16 d2.utils.events]: [0m eta: 0:21:33  iter: 14959  total_loss: 0.3738  loss_cls: 0.1198  loss_box_reg: 0.2589  time: 0.5063  data_time: 0.0275  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:44:26 d2.utils.events]: [0m eta: 0:21:23  iter: 14979  total_loss: 0.3092  loss_cls: 0.09457  loss_box_reg: 0.2208  time: 0.5063  data_time: 0.0139  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:44:33 fvcore.common.checkpoint]: [0mSaving checkpoint to ./output/model_0014993.pth
[32m[11/09 13:44:38 d2.data.datasets.coco]: [0mLoaded 601 images in COCO format from /media/work/data/zbt/detectron2/datasets/COCO/annotations/val.json
[32m[11/09 13:44:38 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[32m[11/09 13:44:38 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[32m[11/09 13:44:38 d2.data.common]: [0mSerializing 601 elements to byte tensors and concatenating them all ...
[32m[11/09 13:44:38 d2.data.common]: [0mSerialized dataset takes 0.16 MiB
[32m[11/09 13:44:38 d2.evaluation.coco_evaluation]: [0mFast COCO eval is not built. Falling back to official COCO eval.
[32m[11/09 13:44:38 d2.evaluation.evaluator]: [0mStart inference on 601 batches
[32m[11/09 13:44:39 d2.evaluation.evaluator]: [0mInference done 11/601. Dataloading: 0.0010 s/iter. Inference: 0.1359 s/iter. Eval: 0.0004 s/iter. Total: 0.1372 s/iter. ETA=0:01:20
[32m[11/09 13:44:44 d2.evaluation.evaluator]: [0mInference done 46/601. Dataloading: 0.0017 s/iter. Inference: 0.1409 s/iter. Eval: 0.0004 s/iter. Total: 0.1432 s/iter. ETA=0:01:19
[32m[11/09 13:44:50 d2.evaluation.evaluator]: [0mInference done 85/601. Dataloading: 0.0030 s/iter. Inference: 0.1338 s/iter. Eval: 0.0004 s/iter. Total: 0.1373 s/iter. ETA=0:01:10
[32m[11/09 13:44:55 d2.evaluation.evaluator]: [0mInference done 124/601. Dataloading: 0.0031 s/iter. Inference: 0.1314 s/iter. Eval: 0.0004 s/iter. Total: 0.1349 s/iter. ETA=0:01:04
[32m[11/09 13:45:00 d2.evaluation.evaluator]: [0mInference done 162/601. Dataloading: 0.0032 s/iter. Inference: 0.1307 s/iter. Eval: 0.0004 s/iter. Total: 0.1344 s/iter. ETA=0:00:58
[32m[11/09 13:45:05 d2.evaluation.evaluator]: [0mInference done 198/601. Dataloading: 0.0032 s/iter. Inference: 0.1317 s/iter. Eval: 0.0004 s/iter. Total: 0.1354 s/iter. ETA=0:00:54
[32m[11/09 13:45:10 d2.evaluation.evaluator]: [0mInference done 235/601. Dataloading: 0.0030 s/iter. Inference: 0.1320 s/iter. Eval: 0.0004 s/iter. Total: 0.1355 s/iter. ETA=0:00:49
[32m[11/09 13:45:15 d2.evaluation.evaluator]: [0mInference done 275/601. Dataloading: 0.0029 s/iter. Inference: 0.1308 s/iter. Eval: 0.0004 s/iter. Total: 0.1343 s/iter. ETA=0:00:43
[32m[11/09 13:45:20 d2.evaluation.evaluator]: [0mInference done 313/601. Dataloading: 0.0031 s/iter. Inference: 0.1307 s/iter. Eval: 0.0004 s/iter. Total: 0.1343 s/iter. ETA=0:00:38
[32m[11/09 13:45:25 d2.evaluation.evaluator]: [0mInference done 351/601. Dataloading: 0.0030 s/iter. Inference: 0.1307 s/iter. Eval: 0.0004 s/iter. Total: 0.1342 s/iter. ETA=0:00:33
[32m[11/09 13:45:30 d2.evaluation.evaluator]: [0mInference done 388/601. Dataloading: 0.0029 s/iter. Inference: 0.1310 s/iter. Eval: 0.0004 s/iter. Total: 0.1344 s/iter. ETA=0:00:28
[32m[11/09 13:45:35 d2.evaluation.evaluator]: [0mInference done 421/601. Dataloading: 0.0030 s/iter. Inference: 0.1323 s/iter. Eval: 0.0004 s/iter. Total: 0.1358 s/iter. ETA=0:00:24
[32m[11/09 13:45:40 d2.evaluation.evaluator]: [0mInference done 460/601. Dataloading: 0.0030 s/iter. Inference: 0.1317 s/iter. Eval: 0.0004 s/iter. Total: 0.1353 s/iter. ETA=0:00:19
[32m[11/09 13:45:45 d2.evaluation.evaluator]: [0mInference done 499/601. Dataloading: 0.0031 s/iter. Inference: 0.1314 s/iter. Eval: 0.0004 s/iter. Total: 0.1350 s/iter. ETA=0:00:13
[32m[11/09 13:45:50 d2.evaluation.evaluator]: [0mInference done 536/601. Dataloading: 0.0030 s/iter. Inference: 0.1316 s/iter. Eval: 0.0004 s/iter. Total: 0.1351 s/iter. ETA=0:00:08
[32m[11/09 13:45:55 d2.evaluation.evaluator]: [0mInference done 574/601. Dataloading: 0.0031 s/iter. Inference: 0.1315 s/iter. Eval: 0.0004 s/iter. Total: 0.1351 s/iter. ETA=0:00:03
[32m[11/09 13:45:59 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:20.519889 (0.135100 s / iter per device, on 1 devices)
[32m[11/09 13:45:59 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:18 (0.131397 s / iter per device, on 1 devices)
[32m[11/09 13:45:59 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/09 13:45:59 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/inference/coco_instances_results.json
[32m[11/09 13:45:59 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.75s).
Accumulating evaluation results...
DONE (t=0.14s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.467
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.858
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.463
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.444
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.481
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.500
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.452
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.577
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.583
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.533
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.599
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.627
[32m[11/09 13:46:00 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 46.660 | 85.771 | 46.301 | 44.379 | 48.081 | 49.969 |
[32m[11/09 13:46:00 d2.engine.defaults]: [0mEvaluation results for coco_my_val in csv format:
[32m[11/09 13:46:00 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/09 13:46:00 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/09 13:46:00 d2.evaluation.testing]: [0mcopypaste: 46.6602,85.7715,46.3014,44.3787,48.0809,49.9692
[32m[11/09 13:46:00 d2.utils.events]: [0m eta: 0:21:12  iter: 14999  total_loss: 0.2899  loss_cls: 0.08693  loss_box_reg: 0.2059  time: 0.5063  data_time: 0.0142  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:46:10 d2.utils.events]: [0m eta: 0:21:00  iter: 15019  total_loss: 0.2504  loss_cls: 0.07274  loss_box_reg: 0.1833  time: 0.5063  data_time: 0.0126  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:46:20 d2.utils.events]: [0m eta: 0:20:51  iter: 15039  total_loss: 0.2974  loss_cls: 0.08943  loss_box_reg: 0.1941  time: 0.5063  data_time: 0.0155  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:46:31 d2.utils.events]: [0m eta: 0:20:41  iter: 15059  total_loss: 0.3016  loss_cls: 0.09833  loss_box_reg: 0.206  time: 0.5063  data_time: 0.0204  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:46:41 d2.utils.events]: [0m eta: 0:20:32  iter: 15079  total_loss: 0.2978  loss_cls: 0.08345  loss_box_reg: 0.2141  time: 0.5063  data_time: 0.0193  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:46:51 d2.utils.events]: [0m eta: 0:20:21  iter: 15099  total_loss: 0.2841  loss_cls: 0.08918  loss_box_reg: 0.1932  time: 0.5063  data_time: 0.0171  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:47:01 d2.utils.events]: [0m eta: 0:20:11  iter: 15119  total_loss: 0.3352  loss_cls: 0.1062  loss_box_reg: 0.2275  time: 0.5063  data_time: 0.0187  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:47:11 d2.utils.events]: [0m eta: 0:20:00  iter: 15139  total_loss: 0.3223  loss_cls: 0.09095  loss_box_reg: 0.2137  time: 0.5063  data_time: 0.0171  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:47:21 d2.utils.events]: [0m eta: 0:19:50  iter: 15159  total_loss: 0.3711  loss_cls: 0.1336  loss_box_reg: 0.221  time: 0.5063  data_time: 0.0153  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:47:31 d2.utils.events]: [0m eta: 0:19:39  iter: 15179  total_loss: 0.2703  loss_cls: 0.09322  loss_box_reg: 0.1824  time: 0.5063  data_time: 0.0239  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:47:41 d2.utils.events]: [0m eta: 0:19:29  iter: 15199  total_loss: 0.2952  loss_cls: 0.08916  loss_box_reg: 0.1922  time: 0.5062  data_time: 0.0175  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:47:51 d2.utils.events]: [0m eta: 0:19:18  iter: 15219  total_loss: 0.2805  loss_cls: 0.08769  loss_box_reg: 0.1901  time: 0.5062  data_time: 0.0148  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:48:02 d2.utils.events]: [0m eta: 0:19:08  iter: 15239  total_loss: 0.3212  loss_cls: 0.1088  loss_box_reg: 0.1857  time: 0.5062  data_time: 0.0171  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:48:12 d2.utils.events]: [0m eta: 0:18:58  iter: 15259  total_loss: 0.2923  loss_cls: 0.0979  loss_box_reg: 0.2069  time: 0.5062  data_time: 0.0183  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:48:22 d2.utils.events]: [0m eta: 0:18:47  iter: 15279  total_loss: 0.2987  loss_cls: 0.09023  loss_box_reg: 0.2123  time: 0.5062  data_time: 0.0190  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:48:32 d2.utils.events]: [0m eta: 0:18:38  iter: 15299  total_loss: 0.3276  loss_cls: 0.1141  loss_box_reg: 0.2031  time: 0.5063  data_time: 0.0219  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:48:43 d2.utils.events]: [0m eta: 0:18:28  iter: 15319  total_loss: 0.332  loss_cls: 0.113  loss_box_reg: 0.2299  time: 0.5063  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:48:53 d2.utils.events]: [0m eta: 0:18:19  iter: 15339  total_loss: 0.2878  loss_cls: 0.08039  loss_box_reg: 0.2014  time: 0.5063  data_time: 0.0211  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:49:03 d2.utils.events]: [0m eta: 0:18:08  iter: 15359  total_loss: 0.3316  loss_cls: 0.1113  loss_box_reg: 0.2343  time: 0.5063  data_time: 0.0177  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:49:14 d2.utils.events]: [0m eta: 0:17:58  iter: 15379  total_loss: 0.319  loss_cls: 0.09823  loss_box_reg: 0.1967  time: 0.5063  data_time: 0.0131  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:49:24 d2.utils.events]: [0m eta: 0:17:47  iter: 15399  total_loss: 0.2536  loss_cls: 0.07969  loss_box_reg: 0.1899  time: 0.5063  data_time: 0.0131  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:49:34 d2.utils.events]: [0m eta: 0:17:37  iter: 15419  total_loss: 0.3314  loss_cls: 0.122  loss_box_reg: 0.2171  time: 0.5063  data_time: 0.0178  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:49:44 d2.utils.events]: [0m eta: 0:17:27  iter: 15439  total_loss: 0.2939  loss_cls: 0.09267  loss_box_reg: 0.2124  time: 0.5063  data_time: 0.0213  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:49:54 d2.utils.events]: [0m eta: 0:17:17  iter: 15459  total_loss: 0.3259  loss_cls: 0.1035  loss_box_reg: 0.2154  time: 0.5063  data_time: 0.0182  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:50:04 d2.utils.events]: [0m eta: 0:17:06  iter: 15479  total_loss: 0.3295  loss_cls: 0.1084  loss_box_reg: 0.2274  time: 0.5063  data_time: 0.0141  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:50:15 d2.utils.events]: [0m eta: 0:16:55  iter: 15499  total_loss: 0.3043  loss_cls: 0.1126  loss_box_reg: 0.2061  time: 0.5063  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:50:25 d2.utils.events]: [0m eta: 0:16:45  iter: 15519  total_loss: 0.3285  loss_cls: 0.1108  loss_box_reg: 0.214  time: 0.5063  data_time: 0.0193  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:50:35 d2.utils.events]: [0m eta: 0:16:34  iter: 15539  total_loss: 0.3352  loss_cls: 0.1161  loss_box_reg: 0.2205  time: 0.5063  data_time: 0.0182  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:50:45 d2.utils.events]: [0m eta: 0:16:23  iter: 15559  total_loss: 0.3002  loss_cls: 0.09671  loss_box_reg: 0.1988  time: 0.5063  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:50:55 d2.utils.events]: [0m eta: 0:16:13  iter: 15579  total_loss: 0.2506  loss_cls: 0.07722  loss_box_reg: 0.184  time: 0.5063  data_time: 0.0197  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:51:05 d2.utils.events]: [0m eta: 0:16:02  iter: 15599  total_loss: 0.3238  loss_cls: 0.1082  loss_box_reg: 0.2168  time: 0.5063  data_time: 0.0205  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:51:15 d2.utils.events]: [0m eta: 0:15:51  iter: 15619  total_loss: 0.3057  loss_cls: 0.1058  loss_box_reg: 0.1922  time: 0.5063  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:51:26 d2.utils.events]: [0m eta: 0:15:41  iter: 15639  total_loss: 0.2915  loss_cls: 0.09007  loss_box_reg: 0.2025  time: 0.5063  data_time: 0.0351  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:51:36 d2.utils.events]: [0m eta: 0:15:31  iter: 15659  total_loss: 0.3564  loss_cls: 0.1143  loss_box_reg: 0.2374  time: 0.5063  data_time: 0.0189  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:51:46 d2.utils.events]: [0m eta: 0:15:20  iter: 15679  total_loss: 0.2842  loss_cls: 0.09918  loss_box_reg: 0.1917  time: 0.5063  data_time: 0.0153  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:51:56 d2.utils.events]: [0m eta: 0:15:10  iter: 15699  total_loss: 0.3466  loss_cls: 0.1052  loss_box_reg: 0.2232  time: 0.5063  data_time: 0.0188  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:52:07 d2.utils.events]: [0m eta: 0:15:00  iter: 15719  total_loss: 0.3577  loss_cls: 0.09349  loss_box_reg: 0.2176  time: 0.5063  data_time: 0.0231  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:52:17 d2.utils.events]: [0m eta: 0:14:51  iter: 15739  total_loss: 0.305  loss_cls: 0.09486  loss_box_reg: 0.2154  time: 0.5063  data_time: 0.0220  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:52:27 d2.utils.events]: [0m eta: 0:14:41  iter: 15759  total_loss: 0.3287  loss_cls: 0.1028  loss_box_reg: 0.2064  time: 0.5063  data_time: 0.0113  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:52:37 d2.utils.events]: [0m eta: 0:14:30  iter: 15779  total_loss: 0.324  loss_cls: 0.1134  loss_box_reg: 0.2033  time: 0.5063  data_time: 0.0150  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:52:47 d2.utils.events]: [0m eta: 0:14:20  iter: 15799  total_loss: 0.2992  loss_cls: 0.08815  loss_box_reg: 0.2054  time: 0.5063  data_time: 0.0211  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:52:57 d2.utils.events]: [0m eta: 0:14:10  iter: 15819  total_loss: 0.2867  loss_cls: 0.08441  loss_box_reg: 0.2026  time: 0.5063  data_time: 0.0173  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:53:08 d2.utils.events]: [0m eta: 0:14:00  iter: 15839  total_loss: 0.2697  loss_cls: 0.08283  loss_box_reg: 0.1789  time: 0.5063  data_time: 0.0243  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:53:18 d2.utils.events]: [0m eta: 0:13:51  iter: 15859  total_loss: 0.37  loss_cls: 0.1133  loss_box_reg: 0.252  time: 0.5063  data_time: 0.0183  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:53:28 d2.utils.events]: [0m eta: 0:13:41  iter: 15879  total_loss: 0.2324  loss_cls: 0.07411  loss_box_reg: 0.1804  time: 0.5063  data_time: 0.0141  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:53:38 d2.utils.events]: [0m eta: 0:13:30  iter: 15899  total_loss: 0.2534  loss_cls: 0.07465  loss_box_reg: 0.18  time: 0.5063  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:53:48 d2.utils.events]: [0m eta: 0:13:20  iter: 15919  total_loss: 0.3082  loss_cls: 0.1036  loss_box_reg: 0.2171  time: 0.5063  data_time: 0.0192  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:53:59 d2.utils.events]: [0m eta: 0:13:10  iter: 15939  total_loss: 0.3287  loss_cls: 0.09838  loss_box_reg: 0.2195  time: 0.5063  data_time: 0.0248  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:54:09 d2.utils.events]: [0m eta: 0:13:00  iter: 15959  total_loss: 0.3691  loss_cls: 0.1089  loss_box_reg: 0.2512  time: 0.5063  data_time: 0.0144  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:54:19 d2.utils.events]: [0m eta: 0:12:50  iter: 15979  total_loss: 0.2621  loss_cls: 0.0869  loss_box_reg: 0.1876  time: 0.5063  data_time: 0.0185  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:54:30 d2.utils.events]: [0m eta: 0:12:40  iter: 15999  total_loss: 0.2652  loss_cls: 0.07595  loss_box_reg: 0.1931  time: 0.5063  data_time: 0.0130  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:54:39 d2.utils.events]: [0m eta: 0:12:29  iter: 16019  total_loss: 0.3482  loss_cls: 0.1035  loss_box_reg: 0.2231  time: 0.5063  data_time: 0.0145  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:54:50 d2.utils.events]: [0m eta: 0:12:19  iter: 16039  total_loss: 0.2812  loss_cls: 0.09179  loss_box_reg: 0.1967  time: 0.5063  data_time: 0.0134  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:55:00 d2.utils.events]: [0m eta: 0:12:09  iter: 16059  total_loss: 0.3011  loss_cls: 0.084  loss_box_reg: 0.2192  time: 0.5063  data_time: 0.0135  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:55:10 d2.utils.events]: [0m eta: 0:11:58  iter: 16079  total_loss: 0.2808  loss_cls: 0.08608  loss_box_reg: 0.1964  time: 0.5063  data_time: 0.0154  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:55:20 d2.utils.events]: [0m eta: 0:11:48  iter: 16099  total_loss: 0.2853  loss_cls: 0.07188  loss_box_reg: 0.2102  time: 0.5063  data_time: 0.0293  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:55:30 d2.utils.events]: [0m eta: 0:11:38  iter: 16119  total_loss: 0.2871  loss_cls: 0.07747  loss_box_reg: 0.2031  time: 0.5063  data_time: 0.0190  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:55:40 d2.utils.events]: [0m eta: 0:11:28  iter: 16139  total_loss: 0.2774  loss_cls: 0.1046  loss_box_reg: 0.194  time: 0.5063  data_time: 0.0127  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:55:51 d2.utils.events]: [0m eta: 0:11:18  iter: 16159  total_loss: 0.2901  loss_cls: 0.09173  loss_box_reg: 0.2046  time: 0.5063  data_time: 0.0191  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:56:01 d2.utils.events]: [0m eta: 0:11:08  iter: 16179  total_loss: 0.2733  loss_cls: 0.1155  loss_box_reg: 0.1857  time: 0.5063  data_time: 0.0184  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:56:11 d2.utils.events]: [0m eta: 0:10:58  iter: 16199  total_loss: 0.3564  loss_cls: 0.1132  loss_box_reg: 0.2426  time: 0.5063  data_time: 0.0117  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:56:21 d2.utils.events]: [0m eta: 0:10:48  iter: 16219  total_loss: 0.269  loss_cls: 0.09547  loss_box_reg: 0.1788  time: 0.5063  data_time: 0.0223  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:56:31 d2.utils.events]: [0m eta: 0:10:37  iter: 16239  total_loss: 0.3147  loss_cls: 0.09943  loss_box_reg: 0.209  time: 0.5063  data_time: 0.0282  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:56:41 d2.utils.events]: [0m eta: 0:10:27  iter: 16259  total_loss: 0.3187  loss_cls: 0.1005  loss_box_reg: 0.2231  time: 0.5063  data_time: 0.0168  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:56:51 d2.utils.events]: [0m eta: 0:10:16  iter: 16279  total_loss: 0.3245  loss_cls: 0.1059  loss_box_reg: 0.2368  time: 0.5063  data_time: 0.0123  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:57:01 d2.utils.events]: [0m eta: 0:10:06  iter: 16299  total_loss: 0.3223  loss_cls: 0.09923  loss_box_reg: 0.2154  time: 0.5063  data_time: 0.0161  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:57:11 d2.utils.events]: [0m eta: 0:09:55  iter: 16319  total_loss: 0.2793  loss_cls: 0.08535  loss_box_reg: 0.194  time: 0.5063  data_time: 0.0129  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:57:21 d2.utils.events]: [0m eta: 0:09:45  iter: 16339  total_loss: 0.3225  loss_cls: 0.08586  loss_box_reg: 0.2191  time: 0.5063  data_time: 0.0197  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:57:31 d2.utils.events]: [0m eta: 0:09:34  iter: 16359  total_loss: 0.2725  loss_cls: 0.07915  loss_box_reg: 0.2006  time: 0.5063  data_time: 0.0153  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:57:41 d2.utils.events]: [0m eta: 0:09:24  iter: 16379  total_loss: 0.304  loss_cls: 0.1111  loss_box_reg: 0.2095  time: 0.5062  data_time: 0.0167  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:57:51 d2.utils.events]: [0m eta: 0:09:14  iter: 16399  total_loss: 0.2858  loss_cls: 0.08552  loss_box_reg: 0.2068  time: 0.5062  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:58:01 d2.utils.events]: [0m eta: 0:09:03  iter: 16419  total_loss: 0.277  loss_cls: 0.08226  loss_box_reg: 0.1969  time: 0.5062  data_time: 0.0137  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:58:11 d2.utils.events]: [0m eta: 0:08:53  iter: 16439  total_loss: 0.2558  loss_cls: 0.08455  loss_box_reg: 0.1798  time: 0.5062  data_time: 0.0169  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:58:21 d2.utils.events]: [0m eta: 0:08:43  iter: 16459  total_loss: 0.2769  loss_cls: 0.07595  loss_box_reg: 0.2019  time: 0.5062  data_time: 0.0135  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:58:31 d2.utils.events]: [0m eta: 0:08:33  iter: 16479  total_loss: 0.3385  loss_cls: 0.11  loss_box_reg: 0.2325  time: 0.5062  data_time: 0.0213  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:58:42 d2.utils.events]: [0m eta: 0:08:23  iter: 16499  total_loss: 0.3098  loss_cls: 0.08051  loss_box_reg: 0.2172  time: 0.5062  data_time: 0.0199  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:58:52 d2.utils.events]: [0m eta: 0:08:13  iter: 16519  total_loss: 0.2874  loss_cls: 0.08218  loss_box_reg: 0.1944  time: 0.5062  data_time: 0.0193  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:59:01 d2.utils.events]: [0m eta: 0:08:02  iter: 16539  total_loss: 0.2702  loss_cls: 0.07777  loss_box_reg: 0.1898  time: 0.5062  data_time: 0.0100  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:59:11 d2.utils.events]: [0m eta: 0:07:52  iter: 16559  total_loss: 0.2859  loss_cls: 0.09156  loss_box_reg: 0.2037  time: 0.5062  data_time: 0.0122  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:59:21 d2.utils.events]: [0m eta: 0:07:42  iter: 16579  total_loss: 0.3171  loss_cls: 0.08806  loss_box_reg: 0.2255  time: 0.5062  data_time: 0.0158  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:59:31 d2.utils.events]: [0m eta: 0:07:32  iter: 16599  total_loss: 0.3034  loss_cls: 0.1008  loss_box_reg: 0.2027  time: 0.5062  data_time: 0.0180  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:59:42 d2.utils.events]: [0m eta: 0:07:22  iter: 16619  total_loss: 0.2752  loss_cls: 0.08781  loss_box_reg: 0.2024  time: 0.5062  data_time: 0.0154  lr: 0.0002  max_mem: 3774M
[32m[11/09 13:59:52 d2.utils.events]: [0m eta: 0:07:12  iter: 16639  total_loss: 0.2872  loss_cls: 0.09108  loss_box_reg: 0.2045  time: 0.5062  data_time: 0.0277  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:00:03 d2.utils.events]: [0m eta: 0:07:02  iter: 16659  total_loss: 0.2778  loss_cls: 0.07205  loss_box_reg: 0.1956  time: 0.5062  data_time: 0.0214  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:00:12 d2.utils.events]: [0m eta: 0:06:52  iter: 16679  total_loss: 0.2171  loss_cls: 0.05841  loss_box_reg: 0.1664  time: 0.5062  data_time: 0.0169  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:00:22 d2.utils.events]: [0m eta: 0:06:42  iter: 16699  total_loss: 0.2784  loss_cls: 0.07919  loss_box_reg: 0.205  time: 0.5062  data_time: 0.0126  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:00:33 d2.utils.events]: [0m eta: 0:06:32  iter: 16719  total_loss: 0.3141  loss_cls: 0.0943  loss_box_reg: 0.2268  time: 0.5062  data_time: 0.0176  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:00:43 d2.utils.events]: [0m eta: 0:06:22  iter: 16739  total_loss: 0.2734  loss_cls: 0.08296  loss_box_reg: 0.1854  time: 0.5062  data_time: 0.0230  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:00:53 d2.utils.events]: [0m eta: 0:06:12  iter: 16759  total_loss: 0.3588  loss_cls: 0.1267  loss_box_reg: 0.2122  time: 0.5062  data_time: 0.0161  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:01:04 d2.utils.events]: [0m eta: 0:06:02  iter: 16779  total_loss: 0.281  loss_cls: 0.08396  loss_box_reg: 0.1996  time: 0.5062  data_time: 0.0190  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:01:14 d2.utils.events]: [0m eta: 0:05:52  iter: 16799  total_loss: 0.305  loss_cls: 0.08582  loss_box_reg: 0.2151  time: 0.5062  data_time: 0.0225  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:01:24 d2.utils.events]: [0m eta: 0:05:42  iter: 16819  total_loss: 0.3128  loss_cls: 0.09457  loss_box_reg: 0.2181  time: 0.5062  data_time: 0.0110  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:01:34 d2.utils.events]: [0m eta: 0:05:32  iter: 16839  total_loss: 0.3086  loss_cls: 0.1024  loss_box_reg: 0.1934  time: 0.5062  data_time: 0.0184  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:01:44 d2.utils.events]: [0m eta: 0:05:21  iter: 16859  total_loss: 0.2631  loss_cls: 0.0786  loss_box_reg: 0.1846  time: 0.5062  data_time: 0.0115  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:01:54 d2.utils.events]: [0m eta: 0:05:11  iter: 16879  total_loss: 0.2869  loss_cls: 0.09133  loss_box_reg: 0.1978  time: 0.5062  data_time: 0.0179  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:02:04 d2.utils.events]: [0m eta: 0:05:01  iter: 16899  total_loss: 0.3187  loss_cls: 0.08967  loss_box_reg: 0.2118  time: 0.5062  data_time: 0.0205  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:02:15 d2.utils.events]: [0m eta: 0:04:51  iter: 16919  total_loss: 0.2944  loss_cls: 0.07132  loss_box_reg: 0.205  time: 0.5062  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:02:25 d2.utils.events]: [0m eta: 0:04:41  iter: 16939  total_loss: 0.2811  loss_cls: 0.08001  loss_box_reg: 0.1941  time: 0.5062  data_time: 0.0140  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:02:35 d2.utils.events]: [0m eta: 0:04:31  iter: 16959  total_loss: 0.3172  loss_cls: 0.1004  loss_box_reg: 0.2084  time: 0.5062  data_time: 0.0093  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:02:45 d2.utils.events]: [0m eta: 0:04:21  iter: 16979  total_loss: 0.3393  loss_cls: 0.1131  loss_box_reg: 0.2293  time: 0.5062  data_time: 0.0186  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:02:56 d2.utils.events]: [0m eta: 0:04:11  iter: 16999  total_loss: 0.3216  loss_cls: 0.1045  loss_box_reg: 0.2178  time: 0.5062  data_time: 0.0204  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:03:06 d2.utils.events]: [0m eta: 0:04:01  iter: 17019  total_loss: 0.2494  loss_cls: 0.07824  loss_box_reg: 0.1729  time: 0.5062  data_time: 0.0125  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:03:16 d2.utils.events]: [0m eta: 0:03:51  iter: 17039  total_loss: 0.3224  loss_cls: 0.09279  loss_box_reg: 0.2273  time: 0.5062  data_time: 0.0112  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:03:26 d2.utils.events]: [0m eta: 0:03:41  iter: 17059  total_loss: 0.2776  loss_cls: 0.07279  loss_box_reg: 0.1904  time: 0.5062  data_time: 0.0190  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:03:36 d2.utils.events]: [0m eta: 0:03:31  iter: 17079  total_loss: 0.3225  loss_cls: 0.1253  loss_box_reg: 0.214  time: 0.5062  data_time: 0.0125  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:03:47 d2.utils.events]: [0m eta: 0:03:21  iter: 17099  total_loss: 0.3128  loss_cls: 0.08813  loss_box_reg: 0.2186  time: 0.5062  data_time: 0.0206  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:03:57 d2.utils.events]: [0m eta: 0:03:11  iter: 17119  total_loss: 0.2907  loss_cls: 0.1064  loss_box_reg: 0.1851  time: 0.5062  data_time: 0.0114  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:04:07 d2.utils.events]: [0m eta: 0:03:00  iter: 17139  total_loss: 0.2927  loss_cls: 0.08469  loss_box_reg: 0.2103  time: 0.5062  data_time: 0.0117  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:04:17 d2.utils.events]: [0m eta: 0:02:50  iter: 17159  total_loss: 0.3102  loss_cls: 0.09437  loss_box_reg: 0.2089  time: 0.5062  data_time: 0.0161  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:04:27 d2.utils.events]: [0m eta: 0:02:40  iter: 17179  total_loss: 0.3341  loss_cls: 0.1233  loss_box_reg: 0.2332  time: 0.5062  data_time: 0.0155  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:04:37 d2.utils.events]: [0m eta: 0:02:30  iter: 17199  total_loss: 0.3417  loss_cls: 0.09083  loss_box_reg: 0.2327  time: 0.5062  data_time: 0.0174  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:04:47 d2.utils.events]: [0m eta: 0:02:20  iter: 17219  total_loss: 0.3285  loss_cls: 0.09985  loss_box_reg: 0.2061  time: 0.5062  data_time: 0.0125  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:04:57 d2.utils.events]: [0m eta: 0:02:10  iter: 17239  total_loss: 0.3045  loss_cls: 0.1018  loss_box_reg: 0.204  time: 0.5062  data_time: 0.0151  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:05:07 d2.utils.events]: [0m eta: 0:02:00  iter: 17259  total_loss: 0.3038  loss_cls: 0.09171  loss_box_reg: 0.2058  time: 0.5062  data_time: 0.0110  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:05:18 d2.utils.events]: [0m eta: 0:01:50  iter: 17279  total_loss: 0.2321  loss_cls: 0.06987  loss_box_reg: 0.1784  time: 0.5062  data_time: 0.0180  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:05:28 d2.utils.events]: [0m eta: 0:01:40  iter: 17299  total_loss: 0.2883  loss_cls: 0.0909  loss_box_reg: 0.2001  time: 0.5062  data_time: 0.0146  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:05:38 d2.utils.events]: [0m eta: 0:01:30  iter: 17319  total_loss: 0.3067  loss_cls: 0.08251  loss_box_reg: 0.2166  time: 0.5062  data_time: 0.0161  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:05:48 d2.utils.events]: [0m eta: 0:01:20  iter: 17339  total_loss: 0.3229  loss_cls: 0.1121  loss_box_reg: 0.1847  time: 0.5062  data_time: 0.0123  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:05:59 d2.utils.events]: [0m eta: 0:01:10  iter: 17359  total_loss: 0.3198  loss_cls: 0.118  loss_box_reg: 0.2247  time: 0.5062  data_time: 0.0163  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:06:09 d2.utils.events]: [0m eta: 0:01:00  iter: 17379  total_loss: 0.2801  loss_cls: 0.09332  loss_box_reg: 0.1944  time: 0.5062  data_time: 0.0113  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:06:19 d2.utils.events]: [0m eta: 0:00:50  iter: 17399  total_loss: 0.2936  loss_cls: 0.0961  loss_box_reg: 0.2063  time: 0.5062  data_time: 0.0126  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:06:28 d2.utils.events]: [0m eta: 0:00:39  iter: 17419  total_loss: 0.2879  loss_cls: 0.07796  loss_box_reg: 0.1974  time: 0.5062  data_time: 0.0228  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:06:39 d2.utils.events]: [0m eta: 0:00:29  iter: 17439  total_loss: 0.3066  loss_cls: 0.09505  loss_box_reg: 0.2132  time: 0.5062  data_time: 0.0170  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:06:49 d2.utils.events]: [0m eta: 0:00:19  iter: 17459  total_loss: 0.2586  loss_cls: 0.08065  loss_box_reg: 0.1978  time: 0.5062  data_time: 0.0159  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:06:59 d2.utils.events]: [0m eta: 0:00:09  iter: 17479  total_loss: 0.2675  loss_cls: 0.09709  loss_box_reg: 0.1748  time: 0.5062  data_time: 0.0147  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:07:06 fvcore.common.checkpoint]: [0mSaving checkpoint to ./output/model_0017492.pth
[32m[11/09 14:07:09 fvcore.common.checkpoint]: [0mSaving checkpoint to ./output/model_final.pth
[32m[11/09 14:07:11 d2.utils.events]: [0m eta: 0:00:00  iter: 17498  total_loss: 0.2807  loss_cls: 0.07627  loss_box_reg: 0.1932  time: 0.5062  data_time: 0.0149  lr: 0.0002  max_mem: 3774M
[32m[11/09 14:07:11 d2.engine.hooks]: [0mOverall training speed: 17497 iterations in 2:27:36 (0.5062 s / it)
[32m[11/09 14:07:11 d2.engine.hooks]: [0mTotal training time: 2:37:05 (0:09:29 on hooks)
[32m[11/09 14:07:11 d2.data.datasets.coco]: [0mLoaded 601 images in COCO format from /media/work/data/zbt/detectron2/datasets/COCO/annotations/val.json
[32m[11/09 14:07:11 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[32m[11/09 14:07:11 d2.data.common]: [0mSerializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[32m[11/09 14:07:11 d2.data.common]: [0mSerializing 601 elements to byte tensors and concatenating them all ...
[32m[11/09 14:07:11 d2.data.common]: [0mSerialized dataset takes 0.16 MiB
[32m[11/09 14:07:11 d2.evaluation.coco_evaluation]: [0mFast COCO eval is not built. Falling back to official COCO eval.
[32m[11/09 14:07:11 d2.evaluation.evaluator]: [0mStart inference on 601 batches
[32m[11/09 14:07:13 d2.evaluation.evaluator]: [0mInference done 11/601. Dataloading: 0.0011 s/iter. Inference: 0.1207 s/iter. Eval: 0.0004 s/iter. Total: 0.1222 s/iter. ETA=0:01:12
[32m[11/09 14:07:18 d2.evaluation.evaluator]: [0mInference done 50/601. Dataloading: 0.0038 s/iter. Inference: 0.1236 s/iter. Eval: 0.0004 s/iter. Total: 0.1279 s/iter. ETA=0:01:10
[32m[11/09 14:07:23 d2.evaluation.evaluator]: [0mInference done 86/601. Dataloading: 0.0034 s/iter. Inference: 0.1292 s/iter. Eval: 0.0004 s/iter. Total: 0.1331 s/iter. ETA=0:01:08
[32m[11/09 14:07:28 d2.evaluation.evaluator]: [0mInference done 122/601. Dataloading: 0.0034 s/iter. Inference: 0.1313 s/iter. Eval: 0.0004 s/iter. Total: 0.1353 s/iter. ETA=0:01:04
[32m[11/09 14:07:33 d2.evaluation.evaluator]: [0mInference done 159/601. Dataloading: 0.0031 s/iter. Inference: 0.1319 s/iter. Eval: 0.0004 s/iter. Total: 0.1355 s/iter. ETA=0:00:59
[32m[11/09 14:07:38 d2.evaluation.evaluator]: [0mInference done 196/601. Dataloading: 0.0029 s/iter. Inference: 0.1325 s/iter. Eval: 0.0004 s/iter. Total: 0.1359 s/iter. ETA=0:00:55
[32m[11/09 14:07:43 d2.evaluation.evaluator]: [0mInference done 233/601. Dataloading: 0.0028 s/iter. Inference: 0.1329 s/iter. Eval: 0.0004 s/iter. Total: 0.1362 s/iter. ETA=0:00:50
[32m[11/09 14:07:48 d2.evaluation.evaluator]: [0mInference done 270/601. Dataloading: 0.0028 s/iter. Inference: 0.1332 s/iter. Eval: 0.0004 s/iter. Total: 0.1365 s/iter. ETA=0:00:45
[32m[11/09 14:07:53 d2.evaluation.evaluator]: [0mInference done 308/601. Dataloading: 0.0028 s/iter. Inference: 0.1327 s/iter. Eval: 0.0004 s/iter. Total: 0.1360 s/iter. ETA=0:00:39
[32m[11/09 14:07:58 d2.evaluation.evaluator]: [0mInference done 348/601. Dataloading: 0.0028 s/iter. Inference: 0.1315 s/iter. Eval: 0.0004 s/iter. Total: 0.1348 s/iter. ETA=0:00:34
[32m[11/09 14:08:03 d2.evaluation.evaluator]: [0mInference done 386/601. Dataloading: 0.0027 s/iter. Inference: 0.1314 s/iter. Eval: 0.0004 s/iter. Total: 0.1347 s/iter. ETA=0:00:28
[32m[11/09 14:08:08 d2.evaluation.evaluator]: [0mInference done 422/601. Dataloading: 0.0029 s/iter. Inference: 0.1319 s/iter. Eval: 0.0004 s/iter. Total: 0.1353 s/iter. ETA=0:00:24
[32m[11/09 14:08:13 d2.evaluation.evaluator]: [0mInference done 459/601. Dataloading: 0.0030 s/iter. Inference: 0.1320 s/iter. Eval: 0.0004 s/iter. Total: 0.1355 s/iter. ETA=0:00:19
[32m[11/09 14:08:18 d2.evaluation.evaluator]: [0mInference done 497/601. Dataloading: 0.0030 s/iter. Inference: 0.1317 s/iter. Eval: 0.0004 s/iter. Total: 0.1353 s/iter. ETA=0:00:14
[32m[11/09 14:08:23 d2.evaluation.evaluator]: [0mInference done 535/601. Dataloading: 0.0029 s/iter. Inference: 0.1316 s/iter. Eval: 0.0004 s/iter. Total: 0.1351 s/iter. ETA=0:00:08
[32m[11/09 14:08:28 d2.evaluation.evaluator]: [0mInference done 574/601. Dataloading: 0.0029 s/iter. Inference: 0.1312 s/iter. Eval: 0.0004 s/iter. Total: 0.1347 s/iter. ETA=0:00:03
[32m[11/09 14:08:32 d2.evaluation.evaluator]: [0mTotal inference time: 0:01:20.444851 (0.134975 s / iter per device, on 1 devices)
[32m[11/09 14:08:32 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:01:18 (0.131197 s / iter per device, on 1 devices)
[32m[11/09 14:08:32 d2.evaluation.coco_evaluation]: [0mPreparing results for COCO format ...
[32m[11/09 14:08:32 d2.evaluation.coco_evaluation]: [0mSaving results to ./output/inference/coco_instances_results.json
[32m[11/09 14:08:32 d2.evaluation.coco_evaluation]: [0mEvaluating predictions with official COCO API...
Loading and preparing results...
DONE (t=0.20s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.66s).
Accumulating evaluation results...
DONE (t=0.14s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.466
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.855
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.454
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.441
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.479
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.521
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.454
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.573
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.582
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.531
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.593
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.664
[32m[11/09 14:08:33 d2.evaluation.coco_evaluation]: [0mEvaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs   |  APm   |  APl   |
|:------:|:------:|:------:|:------:|:------:|:------:|
| 46.648 | 85.468 | 45.438 | 44.055 | 47.935 | 52.080 |
[32m[11/09 14:08:33 d2.engine.defaults]: [0mEvaluation results for coco_my_val in csv format:
[32m[11/09 14:08:33 d2.evaluation.testing]: [0mcopypaste: Task: bbox
[32m[11/09 14:08:33 d2.evaluation.testing]: [0mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[11/09 14:08:33 d2.evaluation.testing]: [0mcopypaste: 46.6484,85.4676,45.4378,44.0548,47.9351,52.0797
